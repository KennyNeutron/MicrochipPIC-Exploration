;**********************************************************************
;                                                                     *
;    FILENAME:	    MODULESBNEW_SCROLLINGBACKUP.ASM                   *
;    DATE:         	2019.07.17                                        *
;    FILE VERSION:                                                    *
;                                                                     *
;    AUTHOR:        KENNYNEUTRON                                      *
;    COMPANY:       GER-PER ENGINEERING                               *
;                                                                     * 
;                                                                     *
;**********************************************************************
;                                                                     *
;    FILES REQUIRED: P16F690.INC                                      *
;                                                                     *
;**********************************************************************
;                                                                     *
;    NOTES:                                                           *
;                                                                     *
;**********************************************************************


	LIST		P=16F690		; LIST DIRECTIVE TO DEFINE PROCESSOR
	#INCLUDE	<P16F690.INC>		; PROCESSOR SPECIFIC VARIABLE DEFINITIONS
	

	__CONFIG    _CP_OFF & _CPD_OFF & _BOR_OFF & _PWRTE_ON & _WDT_OFF & _HS_OSC & _MCLRE_OFF & _FCMEN_OFF & _IESO_OFF

; '__CONFIG' DIRECTIVE IS USED TO EMBED CONFIGURATION DATA WITHIN .ASM FILE.
; THE LABELS FOLLOWING THE DIRECTIVE ARE LOCATED IN THE RESPECTIVE .INC FILE.
; SEE RESPECTIVE DATA SHEET FOR ADDITIONAL INFORMATION ON CONFIGURATION WORD.






;***** VARIABLE DEFINITIONS
W_TEMP		EQU	0X7D			; VARIABLE USED FOR CONTEXT SAVING
STATUS_TEMP	EQU	0X7E			; VARIABLE USED FOR CONTEXT SAVING
PCLATH_TEMP	EQU	0X7F			; VARIABLE USED FOR CONTEXT SAVING




	;#DEFINE C0_ON		BSF PORTC,	0	PORTC0=====>HI
	;#DEFINE C0_OFF		BCF PORTC,	0	PORTC0=====>LO

	#DEFINE	A_ON		BSF	PORTC,	0
	#DEFINE	A_OFF		BCF	PORTC,	0
	
	#DEFINE	B_ON		BSF	PORTC,	1
	#DEFINE	B_OFF		BCF	PORTC,	1

	#DEFINE	DAT_ON		BSF	PORTC,	2
	#DEFINE	DAT_OFF		BCF	PORTC,	2

	#DEFINE	CLK_ON		BSF	PORTC,	7
	#DEFINE	CLK_OFF		BCF	PORTC,	7
	
	#DEFINE	REG_ON		BSF	PORTC,	4
	#DEFINE	REG_OFF		BCF	PORTC,	4
	
	#DEFINE	OE_ON		BSF	PORTC,	5
	#DEFINE	OE_OFF		BCF	PORTC,	5


	#DEFINE	BANK0		BANKSEL	PORTA
	#DEFINE	BANK1		BANKSEL	ADRESL
	#DEFINE	BANK2		BANKSEL	ANSELH

;============================	BANK	0	===========================
CBLOCK 0x20
			DRAM: .80
			DELAYUS, DELAYMS,  MILSEC, ;SEC,DELAYS,	;DELAY VARIABLES
			;=======================================================
			
			LINE
			POINTER
			FONT,NUMBER,BTCOUNT
			HUB,STPT0,STPT1
			CURSORX,LOOP

ENDC
;======================================================================


;============================	BANK	1	===========================
CBLOCK 0XA0
		
		DRAMB: .16
	
		TEMPRAM: .32

	
		IRAM0,IRAM1
		SCROLL,SCROLLCSR,
		SCRLNUM2,SCRLNUM1,SCRLNUM0	;VARIABLE TO SCROLL	| 2 HUNDREDS, 1 TENS, 0 ONES
		SNUMB2,SNUMB1,SNUMB0		;SCROLLING VARIABLE |		|SET: SCROLL| 	|CLR: NOSCROLL|
		PTNT2,PTN1,PTN0
ENDC
;======================================================================



;============================	BANK	2	===========================
CBLOCK 0X120
		VDATA:	.23
		COL

ENDC
;======================================================================

;**********************************************************************
	ORG		0X000			; PROCESSOR RESET VECTOR
	GOTO	INIT			;GO TO INITIALIZATION


	ORG		0X004			; INTERRUPT VECTOR LOCATION
	MOVWF		W_TEMP			; SAVE OFF CURRENT W REGISTER CONTENTS
	MOVF		STATUS,W		; MOVE STATUS REGISTER INTO W REGISTER
	MOVWF		STATUS_TEMP		; SAVE OFF CONTENTS OF STATUS REGISTER
	MOVF		PCLATH,W		; MOVE PCLATH REGISTER INTO W REGISTER
	MOVWF		PCLATH_TEMP		; SAVE OFF CONTENTS OF PCLATH REGISTER


; ISR CODE CAN GO HERE OR BE LOCATED AS A CALL SUBROUTINE ELSEWHERE

	MOVF		PCLATH_TEMP,W		; RETRIEVE COPY OF PCLATH REGISTER
	MOVWF		PCLATH			; RESTORE PRE-ISR PCLATH REGISTER CONTENTS	
	MOVF		STATUS_TEMP,W		; RETRIEVE COPY OF STATUS REGISTER
	MOVWF		STATUS			; RESTORE PRE-ISR STATUS REGISTER CONTENTS
	SWAPF		W_TEMP,F
	SWAPF		W_TEMP,W		; RESTORE PRE-ISR W REGISTER CONTENTS
	RETFIE					; RETURN FROM INTERRUPT



;$$$$$$$$$$$$$$$$$$$$$	INITIALIZE	$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

;DECLARE PORTC AS OUTPUT HERE:
INIT
BANKSEL	ANSEL
CLRW
MOVWF	ANSEL
MOVWF	ANSELH

BANKSEL	TRISB

MOVLW	B'00110000'
MOVWF	TRISB

BANKSEL	TRISC
MOVLW	0
MOVWF	TRISC

BANKSEL	SSPCON

MOVLW	B'00110000'
MOVWF	SSPCON


BANKSEL	TRISA
BCF		TRISA,2
BANKSEL	PORTA
BCF		PORTA,2




BANK2
MOVLW	0
MOVWF	VDATA+05	;MINUTE	TENS

MOVLW	9
MOVWF	VDATA+06	;MINUTE	ONES

MOVLW	3
MOVWF	VDATA+07	;SECONDS TENS

MOVLW	6
MOVWF	VDATA+08	;SECOND ONES

MOVLW	0
MOVWF	VDATA+09	;MILLISECONDS

MOVLW	2
MOVWF	VDATA+02	;SHOTCLOCK TENS

MOVLW	3
MOVWF	VDATA+03	;SHOTCLOCK	ONES

MOVLW	0X0A
MOVWF	VDATA+0B	;PERIOD

;HOMESCORE
MOVLW	1
MOVWF	VDATA+0C	;HUNDREDS
MOVLW	9
MOVWF	VDATA+0D	;TENS
MOVLW	7
MOVWF	VDATA+0E	;ONES

;GUESTSCORE
MOVLW	1
MOVWF	VDATA+0F	;HUNDREDS
MOVLW	8
MOVWF	VDATA+10	;TENS
MOVLW	9
MOVWF	VDATA+11	;ONES




BANK1

BSF		SNUMB0,0	;HUB3 ONES    | SET : SCROLL | CLR : NOSCROLL
BCF		SNUMB1,0	;HUB3 TENS	  | SET : SCROLL | CLR : NOSCROLL
BCF		SNUMB2,0	;HUB3 HUDREDS | SET : SCROLL | CLR : NOSCROLL


BCF		SNUMB0,1	;HUB1 ONES    | SET : SCROLL | CLR : NOSCROLL
BCF		SNUMB1,1	;HUB1 TENS	  | SET : SCROLL | CLR : NOSCROLL
BCF		SNUMB2,1	;HUB1 HUDREDS | SET : SCROLL | CLR : NOSCROLL


BANK0
MOVLW	B'10000000'
MOVWF	RCSTA
CALL	CLRAM
CALL	CLRTRAM




GOTO	MAIN	; GO TO BEGINNING OF PROGRAM
;$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$


;#######################	MAIN PROGRAM  ##########################
MAIN


	CALL	MAINTEMP



GOTO	MAIN
;###################################################################


MAINTEMP


	BANK1
	MOVLW	.15
	MOVWF	SCROLL
	BANK0
	CALL	DISPLAYLOOP
	


	CALL	SCROLLING




	BANK1
	MOVLW	0
	MOVWF	SCROLL
	BANK0
	CALL	DISPLAYLOOP
	CALL	DISPLAYLOOP
	CALL	DISPLAYLOOP
	CALL	DISPLAYLOOP
	CALL	DISPLAYLOOP
	CALL	DISPLAYLOOP


RETURN





SCROLLING

	BANK1
	MOVLW	.21
	MOVWF	SCROLLCSR


	MOVLW	.16
	MOVWF	SCROLL

MN0
	CALL	DISPLAYLOOP
	BANK1
	DECF	SCROLL
	DECFSZ	SCROLL,F
	GOTO	MN0

RETURN





DISPLAYLOOP

	BANK0
	CALL	DISPLAY
	CALL	DISPLAY
	CALL	DISPLAY



RETURN





;============	DATALATCH ========
DATALATCH
OE_OFF
REG_OFF

MOVLW	.16
MOVWF	POINTER


DSP0
MOVFW	INDF
MOVWF	SSPBUF

NOP
NOP
NOP
NOP
NOP
NOP
NOP



INCF	FSR
DECFSZ	POINTER,F
GOTO	DSP0


RETURN
;=================================


;#######################	DISPLAY		########################
DISPLAY
	

	OE_OFF
	;CALL	DELAY_ONEMS ;DIMMING
	REG_ON
	REG_OFF
	A_OFF

	B_OFF
	OE_ON
	MOVLW	0
	MOVWF	LINE
	CALL	CLRAM
	CALL	DISPHUB
;	CALL	DELAY_ONEMS


	
	OE_OFF
	;CALL	DELAY_ONEMS ;DIMMING
	REG_ON
	REG_OFF
	A_ON
	B_ON
	OE_ON
	MOVLW	1
	MOVWF	LINE
	CALL	CLRAM
	CALL	DISPHUB
;	CALL	DELAY_ONEMS


	OE_OFF
	;CALL	DELAY_ONEMS ;DIMMING
	REG_ON
	REG_OFF
	A_OFF
	B_ON
	OE_ON
	MOVLW	2
	MOVWF	LINE
	CALL	CLRAM
	CALL	DISPHUB
;	CALL	DELAY_ONEMS


	OE_OFF
	;CALL	DELAY_ONEMS ;DIMMING
	REG_ON
	REG_OFF
	A_ON
	B_OFF
	OE_ON
	MOVLW	3
	MOVWF	LINE
	CALL	CLRAM
	CALL	DISPHUB
;	CALL	DELAY_ONEMS
RETURN
;###############################################################


DISPHUB
;==================	HUB	6 ============
	BANK0
	MOVLW	6
	MOVWF	HUB

	BANK2
	MOVFW	VDATA+05	;MINUTE TENS
	BANK0
	MOVWF	NUMBER
	MOVLW	1
	MOVWF	FONT
	MOVLW	0
	MOVWF	CURSORX
	CALL	HUBDUMP

	BANK2
	MOVFW	VDATA+06	;MINUTE ONES
	BANK0
	MOVWF	NUMBER
;	MOVLW	1
;	MOVWF	FONT
	MOVLW	.11
	MOVWF	CURSORX
	CALL	HUBDUMP

	
	
	BANK2
	MOVFW	VDATA+07	;SECOND TENS
	BANK0
	MOVWF	NUMBER
;	MOVLW	1
;	MOVWF	FONT
	MOVLW	.27
	MOVWF	CURSORX
	CALL	HUBDUMP


;	COLON
	MOVLW	.11
	MOVWF	NUMBER
	MOVLW	0
	MOVWF	FONT
	MOVLW	.20
	MOVWF	CURSORX
	CALL	HUBDUMP

;==================	HUB	5 ============
	MOVLW	5
	MOVWF	HUB

	BANK2
	MOVFW	VDATA+08	;SECOND ONES
	BANK0
	MOVWF	NUMBER
	MOVLW	1
	MOVWF	FONT
	MOVLW	.6
	MOVWF	CURSORX
	CALL	HUBDUMP



	BANK2	
	MOVFW	VDATA+09	;MILLISECONDS
	BANK0
	MOVWF	NUMBER
	MOVLW	0
	MOVWF	FONT
	MOVLW	.20
	MOVWF	CURSORX
	CALL	HUBDUMP

;DOT
	MOVLW	.12
	MOVWF	NUMBER
;	MOVLW	0
;	MOVWF	FONT
	MOVLW	.17
	MOVWF	CURSORX
	CALL	HUBDUMP
;==================	HUB	4 ============
	MOVLW	4
	MOVWF	HUB
	
	BANK2
	MOVFW	VDATA+02
	BANK0
	MOVWF	NUMBER
	MOVLW	1
	MOVWF	FONT
	MOVLW	.10
	MOVWF	CURSORX
	CALL	HUBDUMP

	BANK2
	MOVFW	VDATA+03
	BANK0
	MOVWF	NUMBER
;	MOVLW	1
;	MOVWF	FONT
	MOVLW	.21
	MOVWF	CURSORX
	CALL	HUBDUMP
;==================	HUB	3 ============
;	MOVLW	3
;	MOVWF	HUB
;
;	MOVLW	1
;	MOVWF	NUMBER
;;	MOVLW	1
;;	MOVWF	FONT
;	MOVLW	1
;	MOVWF	CURSORX
;	CALL	HUBDUMP


;	MOVLW	2
;	MOVWF	NUMBER
;;	MOVLW	1
;;	MOVWF	FONT
;	MOVLW	.10
;	MOVWF	CURSORX
;	CALL	HUBDUMP
;
;	MOVLW	3
;	MOVWF	NUMBER
;;	MOVLW	1
;;	MOVWF	FONT
;	MOVLW	.21
;	MOVWF	CURSORX
;	CALL	HUBDUMP
;==================	HUB	2 ============

	BANK2
	MOVFW	VDATA+0B
	BANK0
	MOVWF	NUMBER		;PERIOD
	MOVLW	2
	MOVWF	HUB
	MOVLW	0
	MOVWF	FONT
	MOVLW	.12
	MOVWF	CURSORX
	CALL	HUBDUMP


	
	MOVLW	.13
	MOVWF	NUMBER		;HOME POSSESION
	MOVLW	2
	MOVWF	CURSORX
	CALL	HUBDUMP

	MOVLW	.14
	MOVWF	NUMBER		;AWAY POSSESSION
	MOVLW	.22
	MOVWF	CURSORX
	CALL	HUBDUMP
;==================	HUB	1 ============
;	MOVLW	1
;	MOVWF	HUB
;
;	MOVLW	1
;	MOVWF	NUMBER
;	MOVLW	1
;	MOVWF	FONT
;	MOVLW	1
;	MOVWF	CURSORX
;	CALL	HUBDUMP
;
;
;	MOVLW	2
;	MOVWF	NUMBER
;;	MOVLW	1
;;	MOVWF	FONT
;	MOVLW	.10
;	MOVWF	CURSORX
;	CALL	HUBDUMP
;
;	MOVLW	2
;	MOVWF	NUMBER
;;	MOVLW	1
;;	MOVWF	FONT
;	MOVLW	.21
;	MOVWF	CURSORX
;
;	CALL	HUBDUMP


;================ SCROLLING ON HUB 3 ================
	BANK0
	MOVLW	3
	MOVWF	HUB
	MOVLW	1
	MOVWF	FONT
	BANK1
	BTFSC	SNUMB2,0
	GOTO	CONT1
	CALL	DONTSCROLLHUB3DIG2
	GOTO	CONT2

CONT1
	BANK2
	MOVFW	VDATA+0C	;HOME SCORE HUBDREDS
	BANK0
	MOVWF	NUMBER

;	MOVLW	3
;	MOVWF	HUB

;	MOVLW	1
;	MOVWF	FONT



	MOVLW	1
	MOVWF	CURSORX

	MOVWF	DELAYMS	;CURSOR TEMP :D
	CALL	TRAMDUMP


CONT2
	BANK1
	BTFSC	SNUMB1,0			;SCROLL TENS??
	GOTO	CONT3
	CALL	DONTSCROLLHUB3DIG1
	GOTO	CONT4
	
	

CONT3
	;SCROLL	TENS
	BANK2
	MOVFW	VDATA+0D
	BANK0
	MOVWF	NUMBER

;	MOVLW	3
;	MOVWF	HUB

;	MOVLW	1
;	MOVWF	FONT



	MOVLW	.10
	MOVWF	CURSORX

	MOVWF	DELAYMS	;CURSOR TEMP :D
	CALL	TRAMDUMP
	
	

CONT4
	;DONE WITH TENS


	BANK1
	BTFSC	SNUMB0,0			;SCROLL ONES??
	GOTO	CONT5
	CALL	DONTSCROLLHUB3DIG0	
	GOTO	CONT6



CONT5
	;SCROLL	ONES
	BANK2
	MOVFW	VDATA+0E
	BANK0
	MOVWF	NUMBER

;	MOVLW	3
;	MOVWF	HUB

;	MOVLW	1
;	MOVWF	FONT



	MOVLW	.21
	MOVWF	CURSORX

	MOVWF	DELAYMS	;CURSOR TEMP :D
	CALL	TRAMDUMP

CONT6

;================ SCROLLING ON HUB 1 ================
	BANK0
	MOVLW	1
	MOVWF	HUB
	MOVWF	FONT
	
	BANK1
	BTFSC	SNUMB2,1
	GOTO	CONT11
	CALL	DONTSCROLLHUB1DIG2
	GOTO	CONT12
	
CONT11
	BANK2
	MOVFW	VDATA+0F	;GUEST SCORE HUBDREDS
	BANK0
	MOVWF	NUMBER

;	MOVLW	1
;	MOVWF	HUB

;	MOVLW	1
;	MOVWF	FONT



	MOVLW	1
	MOVWF	CURSORX

	MOVWF	DELAYMS	;CURSOR TEMP :D
	CALL	TRAMDUMP

CONT12
	;DONE	WITH	HUNDREDS
	BANK1
	BTFSC	SNUMB1,1			;SCROLL TENS??
	GOTO	CONT13
	CALL	DONTSCROLLHUB1DIG1
	GOTO	CONT14
	
CONT13
	;SCROLL	TENS
	BANK2
	MOVFW	VDATA+10			;GUEST SCORE TENS
	BANK0
	MOVWF	NUMBER

;	MOVLW	1
;	MOVWF	HUB

;	MOVLW	1
;	MOVWF	FONT


	MOVLW	.10
	MOVWF	CURSORX

	MOVWF	DELAYMS	;CURSOR TEMP :D
	CALL	TRAMDUMP
		
CONT14
	;DONE WITH TENS

	BANK1
	BTFSC	SNUMB0,1			;SCROLL ONES??
	GOTO	CONT15
	CALL	DONTSCROLLHUB1DIG0	
	GOTO	CONT16



CONT15
	;SCROLL	ONES
	BANK2
	MOVFW	VDATA+11			;GUEST SCORE ONES
	BANK0
	MOVWF	NUMBER

;	MOVLW	1
;	MOVWF	HUB

;	MOVLW	1
;	MOVWF	FONT



	MOVLW	.21
	MOVWF	CURSORX

	MOVWF	DELAYMS	;CURSOR TEMP :D
	CALL	TRAMDUMP

CONT16








;==================	PLACING THE DATA ================
	BANK0
	MOVLW	0X20
	MOVWF	FSR
	CALL	DATALATCH


	CALL	DATALATCH


	CALL	DATALATCH

	CALL	DATALATCH


	CALL	DATALATCH
	MOVLW	0XA0
	MOVWF	FSR
;	CALL	HUB1
	CALL	DATALATCH
	



RETURN




;======================	 NO SCROLL	=================
DONTSCROLLHUB1DIG2
	BANK2
	MOVFW	VDATA+0F
	BANK0
	MOVWF	NUMBER

	MOVLW	1
	MOVWF	CURSORX
	CALL	HUBDUMP
RETURN

DONTSCROLLHUB1DIG1
	BANK2
	MOVFW	VDATA+10
	BANK0
	MOVWF	NUMBER

	MOVLW	.10
	MOVWF	CURSORX
	CALL	HUBDUMP
RETURN

DONTSCROLLHUB1DIG0
	BANK2
	MOVFW	VDATA+11
	BANK0
	MOVWF	NUMBER

	MOVLW	.21
	MOVWF	CURSORX
	CALL	HUBDUMP
RETURN


DONTSCROLLHUB3DIG2
	BANK2
	MOVFW	VDATA+0C
	BANK0
	MOVWF	NUMBER
;	MOVLW	1
;	MOVWF	FONT
;	MOVLW	3
;	MOVWF	HUB
	MOVLW	1
	MOVWF	CURSORX
	CALL	HUBDUMP
RETURN



DONTSCROLLHUB3DIG1
	BANK2
	MOVFW	VDATA+0D
	BANK0
	MOVWF	NUMBER
;	MOVLW	1
;	MOVWF	FONT
;	MOVLW	3
;	MOVWF	HUB
	MOVLW	.10
	MOVWF	CURSORX
	CALL	HUBDUMP
RETURN


DONTSCROLLHUB3DIG0
	BANK2
	MOVFW	VDATA+0E
	BANK0
	MOVWF	NUMBER
;	MOVLW	1
;	MOVWF	FONT
;	MOVLW	3
;	MOVWF	HUB
	MOVLW	.21
	MOVWF	CURSORX
	CALL	HUBDUMP
RETURN
;====================================================	
	



;=======================	CLEAR	RAM		===============
CLRAM
	BANK0
	MOVLW		.80
	MOVWF		POINTER
	MOVLW		DRAM
	MOVWF		FSR  

CLR0
	MOVLW		0XFF
	MOVWF		INDF

	INCF		FSR, F
	DECFSZ		POINTER, F
	GOTO		CLR0

	MOVLW		.16
	MOVWF		POINTER
	MOVLW		0XA0
	MOVWF		FSR  

CLR1
	MOVLW		0XFF
	MOVWF		INDF

	INCF		FSR, F
	DECFSZ		POINTER, F
	GOTO		CLR1
	 
	RETURN
;==========================================================





;==========	DELAY USEC =========
DELAY_US

	MOVWF	DELAYUS

USEC

	NOP
 	NOP
	NOP
	NOP
DECFSZ	DELAYUS,F

GOTO	USEC

RETURN
;=================================



;=========== DELAY ONE MS ========
DELAY_ONEMS

	MOVLW	.5
	MOVWF	LOOP

MSEC
	MOVLW	.200
	CALL	DELAY_US
	DECFSZ	LOOP,F
	GOTO	MSEC

RETURN
;==================================


;=========== DELAY MS	==========
DELAY_MS
	
	MOVWF	DELAYMS
MSEC0
	CALL	DELAY_ONEMS
	DECFSZ	DELAYMS,F
	GOTO	MSEC0
RETURN
;=================================

;=========== DELAY	ONE	SECOND ===
;DELAY_ONESEC
;
;	MOVLW	.5
;	MOVWF	SEC
;SEC0
;	MOVLW	.200
;	CALL	DELAY_MS
;	DECFSZ	SEC,F
;	GOTO	SEC0
;RETURN
;;=================================
;
;;==========	DELAY SEC ============
;DELAY_SEC
;
;	MOVWF	DELAYS
;SEC1
;	CALL	DELAY_ONESEC
;	DECFSZ	DELAYS,F
;	GOTO	SEC1
;RETURN
;;=================================














;ORG 0X200
;######################### HUB DISPLAYS ###################


;============================
HUBDUMP
;============================
;	CALL	CLRAM
	BANK0
	MOVLW	2
	MOVWF	PCLATH

	MOVFW	HUB
	ADDWF	PCL,F
	
	NOP
	GOTO	HB1
	GOTO	HB2
	GOTO	HB3
	GOTO	HB4
	GOTO	HB5
	GOTO	HB6


HB6
	MOVLW	0X20
	MOVWF	STPT0
	MOVLW	0X24
	MOVWF	STPT1
	CALL	CURSORTEST


GOTO	HDP1


HB5

	MOVLW	0X30
	MOVWF	STPT0
	MOVLW	0X34
	MOVWF	STPT1
	CALL	CURSORTEST
GOTO	HDP1

HB4
	MOVLW	0X40
	MOVWF	STPT0
	MOVLW	0X44
	MOVWF	STPT1
	CALL	CURSORTEST
GOTO	HDP1


HB3
	MOVLW	0X50
	MOVWF	STPT0
	MOVLW	0X54
	MOVWF	STPT1
	CALL	CURSORTEST
GOTO	HDP1

HB2
	MOVLW	0X60
	MOVWF	STPT0
	MOVLW	0X64
	MOVWF	STPT1
	CALL	CURSORTEST
GOTO	HDP1


HB1
	MOVLW	0XA0
	MOVWF	STPT0
	MOVLW	0XA4
	MOVWF	STPT1
	CALL	CURSORTEST
GOTO	HDP1




HDP1
	MOVFW	FONT
	ADDWF	PCL,F
	
	GOTO	FONT0
	GOTO	FONT1
	


	



FONT0
	MOVFW	LINE
	ADDWF	PCL,F
	GOTO	F0_LINE11
	GOTO	F0_LINE01
	GOTO	F0_LINE10
	GOTO	F0_LINE00


F0_LINE11
;	CALL	CLRAM
	MOVFW	STPT0
	MOVWF	FSR
	MOVLW	.16
	MOVWF	BTCOUNT
	MOVLW	4
	MOVWF	POINTER
	

	
	F0LN11
	CALL	CHAR
	MOVWF	W_TEMP
	CALL	SHIFTDATA

	MOVLW	.4
	SUBWF	BTCOUNT
	INCF	FSR
	DECFSZ	POINTER
	GOTO	F0LN11
RETURN

F0_LINE01
;	CALL	CLRAM
	MOVFW	STPT0
	MOVWF	FSR
	MOVLW	.15
	MOVWF	BTCOUNT
	MOVLW	4
	MOVWF	POINTER
	


	F0LN01
	CALL	CHAR
	MOVWF	W_TEMP
	CALL	SHIFTDATA

	MOVLW	.4
	SUBWF	BTCOUNT
	INCF	FSR
	DECFSZ	POINTER
	GOTO	F0LN01

RETURN

F0_LINE10
;	CALL	CLRAM
	MOVFW	STPT0
	MOVWF	FSR
	MOVLW	.14
	MOVWF	BTCOUNT
	MOVLW	4
	MOVWF	POINTER
	


	F0LN10
	CALL	CHAR
	MOVWF	W_TEMP
	CALL	SHIFTDATA

	MOVLW	.4
	SUBWF	BTCOUNT
	INCF	FSR
	DECFSZ	POINTER
	GOTO	F0LN10

RETURN

F0_LINE00
;	CALL	CLRAM
	MOVFW	STPT0
	MOVWF	FSR
	MOVLW	.13
	MOVWF	BTCOUNT
	MOVLW	4
	MOVWF	POINTER
	

	F0LN00
	CALL	CHAR
	MOVWF	W_TEMP
	CALL	SHIFTDATA

	MOVLW	.4
	SUBWF	BTCOUNT
	INCF	FSR
	DECFSZ	POINTER
	GOTO	F0LN00

RETURN



FONT1
	MOVFW	LINE
	ADDWF	PCL,F
	GOTO	F1_LINE11
	GOTO	F1_LINE01
	GOTO	F1_LINE10
	GOTO	F1_LINE00



F1_LINE11
;	CALL	CLRAM
	MOVFW	STPT0
	MOVWF	FSR
	MOVLW	.31
	MOVWF	BTCOUNT
	MOVLW	4
	MOVWF	POINTER
	
	F1LN11
	CALL	T_CHAR
	MOVWF	W_TEMP
	CALL	SHIFTDATA

	MOVLW	.8
	SUBWF	BTCOUNT
	INCF	FSR
	DECFSZ	POINTER
	GOTO	F1LN11


	MOVFW	STPT1
	MOVWF	FSR
	MOVLW	.32
	MOVWF	BTCOUNT
	MOVLW	4
	MOVWF	POINTER
	
	F1LN112
	CALL	T_CHAR
	MOVWF	W_TEMP
	CALL	SHIFTDATA
	MOVLW	.8
	SUBWF	BTCOUNT
	INCF	FSR
	DECFSZ	POINTER
	GOTO	F1LN112
RETURN

F1_LINE01
;	CALL	CLRAM
	MOVFW	STPT0
	MOVWF	FSR
	MOVLW	.29
	MOVWF	BTCOUNT
	MOVLW	4
	MOVWF	POINTER
	
	F1LN01
	CALL	T_CHAR
	MOVWF	W_TEMP
	CALL	SHIFTDATA

	MOVLW	.8
	SUBWF	BTCOUNT
	INCF	FSR
	DECFSZ	POINTER
	GOTO	F1LN01



	MOVFW	STPT1
	MOVWF	FSR
	MOVLW	.30
	MOVWF	BTCOUNT
	MOVLW	4
	MOVWF	POINTER
	
	F1LN012
	CALL	T_CHAR
	MOVWF	W_TEMP
	CALL	SHIFTDATA
	MOVLW	.8
	SUBWF	BTCOUNT
	INCF	FSR
	DECFSZ	POINTER
	GOTO	F1LN012


RETURN

F1_LINE10
;	CALL	CLRAM
	MOVFW	STPT0
	MOVWF	FSR
	MOVLW	.27
	MOVWF	BTCOUNT
	MOVLW	4
	MOVWF	POINTER
	
	F1LN10
	CALL	T_CHAR
	MOVWF	W_TEMP
	CALL	SHIFTDATA

	MOVLW	.8
	SUBWF	BTCOUNT
	INCF	FSR
	DECFSZ	POINTER
	GOTO	F1LN10


	MOVFW	STPT1
	MOVWF	FSR
	MOVLW	.28
	MOVWF	BTCOUNT
	MOVLW	4
	MOVWF	POINTER
	
	F1LN102
	CALL	T_CHAR
	MOVWF	W_TEMP
	CALL	SHIFTDATA
	MOVLW	.8
	SUBWF	BTCOUNT
	INCF	FSR
	DECFSZ	POINTER
	GOTO	F1LN102

RETURN

F1_LINE00
;	CALL	CLRAM
	MOVFW	STPT0
	MOVWF	FSR
	MOVLW	.25
	MOVWF	BTCOUNT
	MOVLW	4
	MOVWF	POINTER
	
	F1LN00
	CALL	T_CHAR
	MOVWF	W_TEMP
	CALL	SHIFTDATA
	MOVLW	.8
	SUBWF	BTCOUNT
	INCF	FSR
	DECFSZ	POINTER
	GOTO	F1LN00

	MOVFW	STPT1
	MOVWF	FSR
	MOVLW	.26
	MOVWF	BTCOUNT
	MOVLW	4
	MOVWF	POINTER
	
	F1LN002
	CALL	T_CHAR
	MOVWF	W_TEMP
	CALL	SHIFTDATA

	MOVLW	.8
	SUBWF	BTCOUNT
	INCF	FSR
	DECFSZ	POINTER
	GOTO	F1LN002

RETURN
	

;============================



SHIFTDATA
	MOVLW	2
	MOVWF	PCLATH
	MOVFW	CURSORX
	MOVWF	LOOP
	
	BTFSC	STATUS,Z
	GOTO	SHFDT1

	
	
	MOVLW	0XFF
	MOVWF	MILSEC

	SHFDT0
	SETC
	RRF		W_TEMP
	RRF		MILSEC	;TEMPORARY VAR
	DECFSZ	LOOP,F
	GOTO	SHFDT0
	
	MOVFW	W_TEMP
	ANDWF	INDF
	
	MOVLW	4
	ADDWF	FSR

	MOVFW	MILSEC
	ANDWF	INDF

	MOVLW	4
	SUBWF	FSR
	
	RETURN



SHFDT1
	MOVFW	W_TEMP
	ANDWF	INDF	

RETURN

	

CURSORTEST


	MOVLW	.24
	MOVWF	MILSEC
	MOVFW	CURSORX
	SUBWF	MILSEC
	BTFSS	STATUS,C
	GOTO	CSRT1

	MOVLW	.16
	MOVWF	MILSEC
	MOVFW	CURSORX
	SUBWF	MILSEC
	BTFSS	STATUS,C
	GOTO	CSRT0

	BTFSS	CURSORX,3
	RETURN
	MOVLW	4
	ADDWF	STPT0
	ADDWF	STPT1
	MOVLW	8
	SUBWF	CURSORX
	RETURN


;CURSOR IS GREATER THAN 16
CSRT0
	MOVLW	8
	ADDWF	STPT0
	ADDWF	STPT1
	MOVLW	.16
	SUBWF	CURSORX
RETURN


;CURSOR IS GREATER THAN 24
CSRT1
	MOVLW	.12
	ADDWF	STPT0
	ADDWF	STPT1
	MOVLW	.24
	SUBWF	CURSORX
RETURN


TRAMDUMP
 	CALL	CURSORTEST


	;TRAM	DUMPING
	CALL	CLRTRAM

	MOVLW	.31
	MOVWF	BTCOUNT

	MOVLW	0XBF
	MOVWF	FSR

	MOVLW	.16
	MOVWF	POINTER




	BANK1
	MOVFW	SCROLL
	BANK0
	SUBWF	FSR
	SUBWF	POINTER
	BTFSC	STATUS,Z
	GOTO	TDUMP3
TDUMP2
	CALL	T_CHAR
	CALL	TRAM_SHIFTR
	
	MOVLW	10
	ADDWF	FSR
	INCF	BTCOUNT
	CALL	T_CHAR
	CALL	TRAM_SHIFTR
	MOVLW	10
	SUBWF	FSR
	DECF	FSR
	MOVLW	3
	SUBWF	BTCOUNT
	DECFSZ	POINTER,F
	GOTO	TDUMP2	

	;NEXT PROBLEM	IS HOW TO PUT TRAM ON DRAM
	;HUB?
	;CURSOR?
	;WIDTH?
TDUMP3
	NOP
	MOVFW	DELAYMS
	MOVWF	CURSORX

	MOVLW	3
	MOVWF	PCLATH

	MOVFW	HUB
	ADDWF	PCL,F

	RETURN
	GOTO	TDUMP_HUB1
	RETURN
	GOTO	TDUMP_HUB3
	RETURN
	RETURN
	RETURN

TDUMP_HUB1
	MOVLW	0XA0
	MOVWF	STPT0
	MOVLW	0XA4
	MOVWF	STPT1
	CALL	CURSORTEST
	GOTO	TDUMP1

TDUMP_HUB3
	MOVLW	0X50
	MOVWF	STPT0
	MOVLW	0X54
	MOVWF	STPT1
	CALL	CURSORTEST
	GOTO	TDUMP1


TDUMP1
	MOVFW	LINE
	ADDWF	PCL

	GOTO	SW_LINE11
	GOTO	SW_LINE01
	GOTO	SW_LINE10
	GOTO	SW_LINE00

SW_LINE11

	CALL	CLR_AFFECTEDBITS
	CALL	INSERT_TRAM
RETURN




SW_LINE01
	CALL	CLR_AFFECTEDBITS
	CALL	INSERT_TRAM
RETURN

SW_LINE10
	CALL	CLR_AFFECTEDBITS
	CALL	INSERT_TRAM
RETURN


SW_LINE00	
	CALL	CLR_AFFECTEDBITS
	CALL	INSERT_TRAM
RETURN


RETURN










;=========================
CLR_AFFECTEDBITS
;=========================
	MOVLW	4
	MOVWF	LOOP

CLR_ABIT0
	MOVFW	STPT0
	MOVWF	FSR
	CALL	CLR_AFFECTEDBITS_LEFT
	MOVFW	STPT1
	MOVWF	FSR
	CALL	CLR_AFFECTEDBITS_RIGHT
	INCF	STPT0
	INCF	STPT1
	DECFSZ	LOOP,F
	GOTO	CLR_ABIT0

	MOVLW	4
	SUBWF	STPT0
	SUBWF	STPT1

RETURN





;=========================
CLR_AFFECTEDBITS_LEFT
;=========================
	MOVLW	8
	MOVWF	W_TEMP
	MOVFW	CURSORX
	SUBWF	W_TEMP
	MOVFW	W_TEMP
	ADDWF	PCL,F

	RETURN
	GOTO	CLR_LAF1
	GOTO	CLR_LAF2
	GOTO	CLR_LAF3
	GOTO	CLR_LAF4
	GOTO	CLR_LAF5
	GOTO	CLR_LAF6
	GOTO	CLR_LAF7

CLR_LAF7
	BSF		INDF,6
CLR_LAF6
	BSF		INDF,5
CLR_LAF5
	BSF		INDF,4
CLR_LAF4
	BSF		INDF,3
CLR_LAF3
	BSF		INDF,2
CLR_LAF2
	BSF		INDF,1
CLR_LAF1
	BSF		INDF,0

RETURN
;=========================

;=========================
CLR_AFFECTEDBITS_RIGHT
;=========================
	MOVLW	2
	MOVWF	W_TEMP
	MOVFW	CURSORX
	ADDWF	W_TEMP
	MOVFW	W_TEMP
	ADDWF	PCL,F
	
	RETURN
	GOTO	CLR_RAF1
	GOTO	CLR_RAF2
	GOTO	CLR_RAF3
	GOTO	CLR_RAF4
	GOTO	CLR_RAF5
	GOTO	CLR_RAF6
	GOTO	CLR_RAF7

CLR_RAF7
	BSF		INDF,1
CLR_RAF6
	BSF		INDF,2
CLR_RAF5
	BSF		INDF,3
CLR_RAF4
	BSF		INDF,4
CLR_RAF3
	BSF		INDF,5
CLR_RAF2
	BSF		INDF,6
CLR_RAF1
	BSF		INDF,7
RETURN


;=====================================

TRAM_SHIFTR
	MOVWF	W_TEMP
	MOVFW	CURSORX
	MOVWF	LOOP
	
	BTFSC	STATUS,Z
	GOTO	TRS0
	
	MOVLW	0XFF
	MOVWF	DELAYUS
	
TRS1
	SETC
	RRF		W_TEMP
	RRF		DELAYUS
	DECFSZ	LOOP,F
	GOTO	TRS1

TRS0
	MOVFW	W_TEMP
	ANDWF	INDF
	MOVLW	10
	ADDWF	FSR
	MOVFW	DELAYUS
	ANDWF	INDF
	MOVLW	10
	SUBWF	FSR

RETURN





CLRTRAM
	MOVLW	0XB0
	MOVWF	FSR
	MOVLW	.32
	MOVWF	POINTER

CLRT0
	MOVLW	0XFF
	MOVWF	INDF
	INCF	FSR
	DECFSZ	POINTER,F
	GOTO	CLRT0
RETURN




;================
INSERT_TRAM
;================
	MOVFW	LINE
	ADDWF	PCL,F

	GOTO	IT_LINE11
	GOTO	IT_LINE01
	GOTO	IT_LINE10
	GOTO	IT_LINE00

IT_LINE11
	MOVLW	0X1F
	MOVWF	DELAYUS
	MOVLW	0X2B
	MOVWF	POINTER
	GOTO	INS_TRAM0

IT_LINE01
	MOVLW	0X1E
	MOVWF	DELAYUS
	MOVLW	0X2A
	MOVWF	POINTER
	GOTO	INS_TRAM0

IT_LINE10
	MOVLW	0X1D
	MOVWF	DELAYUS
	MOVLW	0X29
	MOVWF	POINTER
	GOTO	INS_TRAM0

IT_LINE00
	MOVLW	0X1C
	MOVWF	DELAYUS
	MOVLW	0X28
	MOVWF	POINTER
	GOTO	INS_TRAM0





INS_TRAM0

	CALL	TRAM_CURSORTEST

	BANK0
	CALL	TRAM_HUBTEST
	CALL	WRITE_TRAM
RETURN



WRITE_TRAM

	

	MOVLW	4
	MOVWF	LOOP

WTRAM0
	MOVFW	STPT0
	MOVWF	FSR
	MOVFW	DELAYUS
	ADDWF	FSR	;POINTER ON TRAM

	MOVFW	INDF
	MOVWF	W_TEMP
	
	MOVFW	DELAYUS
	SUBWF	FSR
	
	MOVFW	W_TEMP
	ANDWF	INDF
	
	INCF	STPT0
	MOVLW	5
	SUBWF	DELAYUS
	DECFSZ	LOOP,F
	GOTO	WTRAM0

	MOVLW	4
	MOVWF	LOOP

WTRAM1
	MOVFW	STPT1
	MOVWF	FSR
	MOVFW	POINTER
	ADDWF	FSR	;POINTER ON TRAM

	MOVFW	INDF
	MOVWF	W_TEMP
	
	MOVFW	POINTER
	SUBWF	FSR
	
	MOVFW	W_TEMP
	ANDWF	INDF
	
	INCF	STPT1
	MOVLW	5
	SUBWF	POINTER
	DECFSZ	LOOP,F
	GOTO	WTRAM1

RETURN





TRAM_CURSORTEST
	
	MOVLW	.24
	MOVWF	MILSEC
	MOVFW	DELAYMS	;TEMPCURSOR
	SUBWF	MILSEC
	BTFSS	STATUS,C
	GOTO	T_CSRT1

	MOVLW	.16
	MOVWF	MILSEC
	MOVFW	DELAYMS
	SUBWF	MILSEC
	BTFSS	STATUS,C
	GOTO	T_CSRT0

	BTFSS	DELAYMS,3
	RETURN
	MOVLW	4
	SUBWF	DELAYUS
	SUBWF	POINTER

	RETURN


;CURSOR IS GREATER THAN 16
T_CSRT0
	MOVLW	8
	SUBWF	DELAYUS
	SUBWF	POINTER

RETURN

;CURSOR IS GREATER THAN 24
T_CSRT1
	MOVLW	.12
	SUBWF	DELAYUS
	SUBWF	POINTER

RETURN



TRAM_HUBTEST

	MOVFW	PCLATH
	MOVWF	PCLATH_TEMP

	MOVLW	4
	MOVWF	PCLATH
	
	MOVFW	HUB
	ADDWF	PCL

	RETURN
	RETURN
	RETURN
	GOTO	TRAMHT_HUB3
	RETURN
	RETURN
	RETURN
	RETURN


TRAMHT_HUB3
	MOVLW	0X50
	ADDWF	DELAYUS
	ADDWF	POINTER
	
	MOVFW	PCLATH_TEMP
	MOVWF	PCLATH

RETURN
;===================================================================================













ORG 0X500
T_CHAR
	MOVLW	5
	MOVWF	PCLATH	
	MOVFW	NUMBER
	ADDWF	PCL,F
	
	GOTO	T_ZERO
	
	GOTO	T_ONE

	GOTO	T_TWO

	GOTO	T_THREE

	GOTO	T_FOUR

	GOTO	T_FIVE

NOP
NOP
NOP
NOP

	INCF	PCLATH
	GOTO	T_CHARB


	T_ZERO
			MOVFW	BTCOUNT
			ADDWF	PCL,F

			DT	.12
			DT	B'11000000',B'11111111'
			DT	B'10000000',B'01111111'
			DT	B'00011110',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00111111',B'00111111';
			DT	B'00111111',B'00111111';
			DT	B'00111111',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00011110',B'00111111'
			DT	B'10000000',B'01111111'
			DT	B'11000000',B'11111111'

	T_ONE
			MOVFW	BTCOUNT
			ADDWF	PCL

			DT	.12
			DT	B'11100111',B'11111111'
			DT	B'11100111',B'11111111'
			DT	B'11000111',B'11111111'
			DT	B'10000111',B'11111111'
			DT	B'00100111',B'11111111'
			DT	B'11100111',B'11111111'
			DT	B'11100111',B'11111111'
			DT	B'11100111',B'11111111';
			DT	B'11100111',B'11111111';
			DT	B'11100111',B'11111111'
			DT	B'11100111',B'11111111'
			DT	B'11100111',B'11111111'
			DT	B'11100111',B'11111111'
			DT	B'11100111',B'11111111'
			DT	B'00000000',B'11111111'
			DT	B'00000000',B'11111111'	

	T_TWO
			MOVFW	BTCOUNT
			ADDWF	PCL,F
			
			DT	.12
			DT	B'11000000',B'11111111'
			DT	B'10000000',B'01111111'
			DT	B'00111110',B'00111111'
			DT	B'11111111',B'00111111'
			DT	B'11111111',B'00111111'
			DT	B'11111111',B'00111111'
			DT	B'11111111',B'00111111'
			DT	B'11111110',B'00111111'
			DT	B'11000000',B'01111111'
			DT	B'10000000',B'11111111'
			DT	B'00011111',B'11111111'
			DT	B'00111111',B'11111111'
			DT	B'00111111',B'11111111'
			DT	B'00111111',B'00111111'
			DT	B'00000000',B'00111111'
			DT	B'00000000',B'00111111'
	
	T_THREE
			MOVFW	BTCOUNT
			ADDWF	PCL

			DT	.12
			DT	B'11000000',B'11111111'
			DT	B'10000000',B'01111111'
			DT	B'00011110',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'11111111',B'00111111'
			DT	B'11111111',B'00111111'
			DT	B'11111110',B'00111111'
			DT	B'11100000',B'01111111';
			DT	B'11100000',B'01111111';
			DT	B'11111110',B'00111111'
			DT	B'11111111',B'00111111'
			DT	B'11111111',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00011110',B'00111111'
			DT	B'10000000',B'01111111'
			DT	B'11000000',B'11111111'
	
	T_FOUR
			MOVFW	BTCOUNT
			ADDWF	PCL

			DT	.12
			DT	B'11111111',B'10111111'
			DT	B'11111101',B'00111111'
			DT	B'11111001',B'00111111'
			DT	B'11111001',B'00111111'
			DT	B'11110011',B'00111111'
			DT	B'11100111',B'00111111'
			DT	B'11001111',B'00111111'
			DT	B'10011111',B'00111111';
			DT	B'00111111',B'00111111';
			DT	B'00111111',B'00111111'
			DT	B'00000000',B'00111111'
			DT	B'00000000',B'00111111'
			DT	B'11111111',B'00111111'
			DT	B'11111111',B'00111111'
			DT	B'11111111',B'00111111'
			DT	B'11111111',B'01111111'	

	T_FIVE
			MOVFW	BTCOUNT
			ADDWF	PCL

			DT	.12
			DT	B'00000000',B'00111111'
			DT	B'00000000',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00111111',B'01111111'
			DT	B'00111111',B'11111111'
			DT	B'00111111',B'11111111'
			DT	B'00111111',B'11111111'
			DT	B'00000000',B'11111111';
			DT	B'00000000',B'01111111';
			DT	B'11111110',B'00111111'
			DT	B'11111111',B'00111111'
			DT	B'11111111',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00011110',B'00111111'
			DT	B'10000000',B'01111111'
			DT	B'11000000',B'11111111'



ORG 0X600
T_CHARB
			MOVLW	6
			MOVWF	PCLATH

			MOVFW	NUMBER
			ADDWF	PCL,F

				RETURN	

				RETURN

				RETURN

				RETURN

				RETURN

				RETURN
				
				GOTO	T_SIX
	
				GOTO	T_SEVEN
		
				GOTO	T_EIGHT
		
				GOTO	T_NINE


			
	T_SIX
			MOVFW	BTCOUNT
			ADDWF	PCL

			DT	.12
			DT	B'11000000',B'01111111'
			DT	B'10000000',B'00111111'
			DT	B'00011110',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00111111',B'11111111'
			DT	B'00111111',B'11111111'
			DT	B'00011111',B'11111111'
			DT	B'00000000',B'11111111';
			DT	B'00000000',B'01111111';
			DT	B'00011110',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00011110',B'00111111'
			DT	B'10000000',B'01111111'
			DT	B'11000000',B'11111111'
	
			
	T_SEVEN
			MOVFW	BTCOUNT
			ADDWF	PCL

			DT	.12
			DT	B'00000000',B'00111111'
			DT	B'00000000',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'11111111',B'00111111'
			DT	B'11111111',B'00111111'
			DT	B'11111110',B'00111111'
			DT	B'11111100',B'01111111';
			DT	B'11111000',B'11111111';
			DT	B'11110001',B'11111111'
			DT	B'11100011',B'11111111'
			DT	B'11100111',B'11111111'
			DT	B'11100111',B'11111111'
			DT	B'11100111',B'11111111'
			DT	B'11100111',B'11111111'
			DT	B'11100111',B'11111111'	
	
	T_EIGHT
			MOVFW	BTCOUNT
			ADDWF	PCL

			DT	.12
			DT	B'11000000',B'11111111'
			DT	B'10000000',B'01111111'
			DT	B'00011110',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00011110',B'00111111'
			DT	B'10000000',B'01111111'
			DT	B'10000000',B'01111111';
			DT	B'00011110',B'00111111';
			DT	B'00111111',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00011110',B'00111111'
			DT	B'10000000',B'01111111'
			DT	B'11000000',B'11111111'	

	T_NINE
			MOVFW	BTCOUNT
			ADDWF	PCL

			DT	.12
			DT	B'11000000',B'11111111'
			DT	B'10000000',B'01111111'
			DT	B'00011110',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00011110',B'00111111'
			DT	B'10000000',B'00111111';
			DT	B'11000000',B'00111111';
			DT	B'11111110',B'00111111'
			DT	B'11111111',B'00111111'
			DT	B'11111111',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00011110',B'00111111'
			DT	B'10000000',B'01111111'
			DT	B'11000000',B'11111111'

RETURN

CHAR
	MOVLW	6
	MOVWF	PCLATH


	MOVFW	NUMBER
	ADDWF	PCL,F

	GOTO	ZERO
	
	GOTO	ONE
	
	GOTO	TWO

	GOTO	THREE

	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP

	INCF	PCLATH
	GOTO	CHARB





	ZERO
			MOVFW	BTCOUNT
			ADDWF	PCL, F

			DT	8
			DT	B'11111111'
			DT	B'11111111'
			DT	B'11000111'
			DT	B'10000011'
			DT	B'00010001'
			DT	B'00111001'
			DT	B'00111001'
			DT	B'00111001'
			DT	B'00111001'
			DT	B'00111001'
			DT	B'00111001'
			DT	B'00111001'
			DT	B'00111001'
			DT	B'00010001'
			DT	B'10000011'
			DT	B'11000111'



	ONE
			MOVFW	BTCOUNT
			ADDWF	PCL, F

			DT	7
			DT	B'11111111'
			DT	B'11111111'
			DT	B'11001111'
			DT	B'11001111'
			DT	B'10001111'
			DT	B'00001111'
			DT	B'01001111'
			DT	B'11001111'
			DT	B'11001111'
			DT	B'11001111'
			DT	B'11001111'
			DT	B'11001111'
			DT	B'11001111'
			DT	B'11001111'
			DT	B'00000011'
			DT	B'00000011'


	TWO
			MOVFW	BTCOUNT
			ADDWF	PCL, F

			DT	8
			DT	B'11111111'
			DT	B'11111111'
			DT	B'10000011'
			DT	B'00000001'
			DT	B'01110001'
			DT	B'11111001'
			DT	B'11111001'
			DT	B'11110001'
			DT	B'11000001'
			DT	B'10000011'
			DT	B'00011111'
			DT	B'00111111'
			DT	B'00111111'
			DT	B'00111001'
			DT	B'00000001'
			DT	B'00000001'





				

	THREE
			MOVFW	BTCOUNT
			ADDWF	PCL, F

			DT	8
			DT	B'10000111'
			DT	B'00000011'
			DT	B'00110001'
			DT	B'11111001'
			DT	B'11111001'
			DT	B'11111001'
			DT	B'11110001'
			DT	B'11000011'
			DT	B'11000011'
			DT	B'11110001'
			DT	B'11111001'
			DT	B'11111001'
			DT	B'11111001'
			DT	B'00110001'
			DT	B'00000011'
			DT	B'10000111'

ORG 0X700
CHARB

	MOVLW	7
	MOVWF	PCLATH
	MOVFW	NUMBER
	ADDWF	PCL,F


	RETURN

	RETURN

	RETURN

	RETURN
	
	GOTO	FOUR
	
	GOTO	FIVE
	
	GOTO	SIX
	
	GOTO	SEVEN

	GOTO	EIGHT

	GOTO	NINE

	GOTO	OT

	GOTO	COLON

	GOTO	DOT

	GOTO	HOMEPOS

	GOTO	GUESTPOS

	FOUR
			MOVFW	BTCOUNT
			ADDWF	PCL, F

			DT	8
			DT	B'11111101'
			DT	B'11111001'
			DT	B'11101001'
			DT	B'11001001'
			DT	B'11001001'
			DT	B'11001001'
			DT	B'10011001'
			DT	B'00111001'
			DT	B'00000001'
			DT	B'00000001'
			DT	B'11111001'
			DT	B'11111001'
			DT	B'11111001'
			DT	B'11111001'
			DT	B'11111001'
			DT	B'11111011'

	FIVE
			MOVFW	BTCOUNT
			ADDWF	PCL, F

			DT	8
			DT	B'00000001'
			DT	B'00000001'
			DT	B'00111001'
			DT	B'00111011'
			DT	B'00111111'
			DT	B'00111111'
			DT	B'00111111'
			DT	B'00000111'
			DT	B'00000011'
			DT	B'11110001'
			DT	B'11111001'
			DT	B'11111001'
			DT	B'11111001'
			DT	B'11110001'
			DT	B'00000011'
			DT	B'00000111'


	SIX
			MOVFW	BTCOUNT
			ADDWF	PCL, F

			DT	8
			DT	B'11000111'
			DT	B'10000011'
			DT	B'00010001'
			DT	B'00111001'
			DT	B'00111111'
			DT	B'00111111'
			DT	B'00111111'
			DT	B'00100111'
			DT	B'00000011'
			DT	B'00010001'
			DT	B'00111001'
			DT	B'00111001'
			DT	B'00111001'
			DT	B'00010001'
			DT	B'10000011'
			DT	B'11000111'

	SEVEN	
			MOVFW	BTCOUNT
			ADDWF	PCL, F

			DT	8	
			DT	B'00000001'
			DT	B'00000001'
			DT	B'00111001'
			DT	B'00111001'
			DT	B'11111001'
			DT	B'11111001'
			DT	B'11111001'
			DT	B'11110011'
			DT	B'11100111'
			DT	B'11001111'
			DT	B'11001111'
			DT	B'11001111'
			DT	B'11001111'
			DT	B'11001111'
			DT	B'11001111'
			DT	B'11001111'
				
	EIGHT
			MOVFW	BTCOUNT
			ADDWF	PCL, F

			DT	8
			DT	B'11000111'
			DT	B'10000011'
			DT	B'00010001'
			DT	B'00111001'
			DT	B'00111001'
			DT	B'00111001'
			DT	B'10010011'
			DT	B'11000111'
			DT	B'10000011'
			DT	B'00010001'
			DT	B'00111001'
			DT	B'00111001'
			DT	B'00111001'
			DT	B'00010001'
			DT	B'10000011'
			DT	B'11000111'

	NINE
			MOVFW	BTCOUNT
			ADDWF	PCL, F

			DT	8
			DT	B'11000111'
			DT	B'10000011'
			DT	B'00010001'
			DT	B'00111001'
			DT	B'00111001'
			DT	B'00111001'
			DT	B'00010001'
			DT	B'10000001'
			DT	B'11001001'
			DT	B'11111001'
			DT	B'11111001'
			DT	B'11111001'
			DT	B'00111001'
			DT	B'00010001'
			DT	B'10000011'
			DT	B'11000111'

	OT	
			MOVFW	BTCOUNT
			ADDWF	PCL, F

			DT	8
			DT	B'11000011'
			DT	B'10011001'
			DT	B'10011001'
			DT	B'10011001'
			DT	B'10011001'
			DT	B'10011001'
			DT	B'11000011'
			DT	B'11111111'
			DT	B'10000001'
			DT	B'10000001'
			DT	B'11100111'
			DT	B'11100111'
			DT	B'11100111'
			DT	B'11100111'
			DT	B'11100111'
			DT	B'11111111'
	COLON
			MOVFW	BTCOUNT
			ADDWF	PCL, F

			DT	8
			DT	B'11111111'
			DT	B'11111111'
			DT	B'11100111'
			DT	B'11000011'
			DT	B'11000011'
			DT	B'11100111'
			DT	B'11111111'
			DT	B'11111111'
			DT	B'11111111'
			DT	B'11111111'
			DT	B'11111111'
			DT	B'11100111'
			DT	B'11000011'
			DT	B'11000011'
			DT	B'11100111'
			DT	B'11111111'


	DOT
			MOVFW	BTCOUNT
			ADDWF	PCL, F

			DT	8
			DT	B'11111111'
			DT	B'11111111'
			DT	B'11111111'
			DT	B'11111111'
			DT	B'11111111'
			DT	B'11111111'
			DT	B'11111111'
			DT	B'11111111'
			DT	B'11111111'
			DT	B'11111111'
			DT	B'11111111'
			DT	B'11111111'
			DT	B'11111111'
			DT	B'11111111'
			DT	B'00111111'
			DT	B'00111111'

	HOMEPOS
			MOVFW	BTCOUNT
			ADDWF	PCL, F

			DT	8
			DT	B'11111111'
			DT	B'11111111'
			DT	B'11111111'
			DT	B'11110001'
			DT	B'11100011'
			DT	B'11000111'
			DT	B'10001111'
			DT	B'00011111'
			DT	B'00011111'
			DT	B'10001111'
			DT	B'11000111'
			DT	B'11100011'
			DT	B'11110001'
			DT	B'11111000'
			DT	B'11111111'
			DT	B'11111111'
				

	GUESTPOS
			MOVFW	BTCOUNT
			ADDWF	PCL, F

			DT	8
			DT	B'11111111'
			DT	B'11111111'
			DT	B'00011111'
			DT	B'10001111'
			DT	B'11000111'
			DT	B'11100011'
			DT	B'11110001'
			DT	B'11111000'
			DT	B'11111000'
			DT	B'11110001'
			DT	B'11100011'
			DT	B'11000111'
			DT	B'10001111'
			DT	B'00011111'
			DT	B'11111111'
			DT	B'11111111'
	



		

	ORG	0X2100				; DATA EEPROM LOCATION
	DE	1,2,3,4				; DEFINE FIRST FOUR EEPROM LOCATIONS AS 1, 2, 3, AND 4




	END                       ; DIRECTIVE 'END OF PROGRAM'

