;**********************************************************************
;                                                                     *
;    Filename:	    HUB12_RTC5.asm                                    *
;    Date:          2019.06.24                                        *
;    File Version:                                                    *
;                                                                     *
;    Author:       KENNYNEUTRON                                       *
;    Company:      GER-PER ENGINEERING                                *
;                                                                     * 
;                                                                     *
;**********************************************************************
;                                                                     *
;    Files Required: P16F690.INC                                      *
;                                                                     *
;**********************************************************************




	list		p=16f690		; list directive to define processor
	#include	<P16F690.inc>		; processor specific variable definitions
	
	__CONFIG    _CP_OFF & _CPD_OFF & _BOR_OFF & _PWRTE_ON & _WDT_OFF & _HS_OSC & _MCLRE_OFF & _FCMEN_OFF & _IESO_OFF


; '__CONFIG' directive is used to embed configuration data within .asm file.
; The labels following the directive are located in the respective .inc file.
; See respective data sheet for additional information on configuration word.






;***** VARIABLE DEFINITIONS
w_temp		EQU	0x7D			; variable used for context saving
status_temp	EQU	0x7E			; variable used for context saving
pclath_temp	EQU	0x7F			; variable used for context saving
	

	;#DEFINE C0_ON		BSF PORTC,	0	PORTC0=====>HI
	;#DEFINE C0_OFF		BCF PORTC,	0	PORTC0=====>LO

	#DEFINE	A_ON		BSF	PORTC,	0
	#DEFINE	A_OFF		BCF	PORTC,	0
	
	#DEFINE	B_ON		BSF	PORTC,	1
	#DEFINE	B_OFF		BCF	PORTC,	1

	#DEFINE	DAT_ON		BSF	PORTC,	2
	#DEFINE	DAT_OFF		BCF	PORTC,	2	

	#DEFINE	CLK_ON		BSF	PORTC,	7
	#DEFINE	CLK_OFF		BCF	PORTC,	7
	
	#DEFINE	REG_ON		BSF	PORTC,	4
	#DEFINE	REG_OFF		BCF	PORTC,	4
	
	#DEFINE	OE_ON		BSF	PORTC,	5
	#DEFINE	OE_OFF		BCF	PORTC,	5

	#DEFINE	SCL_HI		BSF	PORTC,	6
	#DEFINE	SCL_LO		BCF	PORTC,	6
	
	#DEFINE	SDA_HI		BSF	PORTC,	3
	#DEFINE	SDA_LO		BCF	PORTC,	3

	#DEFINE	BANK0		BANKSEL	PORTA
	#DEFINE	BANK1		BANKSEL	ADCON1
	#DEFINE	BANK2		BANKSEL	ANSELH

	

	CBLOCK 0x20

			DELAYUS, DELAYMS, DELAYS, MILSEC, SEC	;DELAY VARIABLES
			;=======================================================
			
			COUNT0,	COUNT1,COUNT2,COUNT3
			
			I2CADD
			TEMPFILE, FONT
			DRAM : .64, POINTER
			;========================================================


			SHCNT,COUNT4
			CURSORX,CURSORY,GRP
			TESTER
			NUMBER,BTCOUNT,WIDTH,TALL
			ROW,BRIGHTNESS
			TEMPFILEB,TEMPFILEC,TEMPFILED,LOOP

	ENDC                                                                                              

	CBLOCK 0XA0

			IRAM : .64
			IPOINTER,IWIDTH
			ICOUNT,ITESTER,ICURSORX,ISHCNT,IROW,IPT
			ITEMPFILE,ICOUNT0,ICOUNT1,ICOUNT2,ICOUNT3,ICOUNT4
	
	ENDC


	CBLOCK 0X120
			I2CDATREG: .18, I2CDATREG_IDX
			I2CDAT, I2CBCD,I2CLOOP
			HOU_T,HOU_O,MIN_T,MIN_O,SEC_T,SEC_O	;TIME

	ENDC
;**********************************************************************	
	ORG		0x000				; processor reset vector


	GOTO	INIT		 		;initialize 
	ORG		0x004				; interrupt vector location
	movwf		w_temp			; save off current W register contents
	movf		STATUS,w		; move status register into W register
	movwf		status_temp		; save off contents of STATUS register
	movf		PCLATH,w		; move pclath register into W register
	movwf		pclath_temp		; save off contents of PCLATH register


; isr code can go here or be located as a call subroutine elsewhere

	movf		pclath_temp,w		; retrieve copy of PCLATH registerz`
	movwf		PCLATH			; restore pre-isr PCLATH register contents	
	movf		status_temp,w		; retrieve copy of STATUS register
	movwf		STATUS			; restore pre-isr STATUS register contents
	swapf		w_temp,f
	swapf		w_temp,w		; restore pre-isr W register contents
	retfie					; return from interrupt


;$$$$$$$$$$$$$$$$$$$$$	INITIALIZE	$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
INIT
BANKSEL	ANSEL
CLRW
MOVWF	ANSEL
MOVWF	ANSELH

BANKSEL	TRISB

MOVLW	B'10110000'
MOVWF	TRISB

MOVLW	0
MOVWF	TRISC

BANKSEL	SSPCON

MOVLW	B'00110000'
MOVWF	SSPCON


BANKSEL	TRISC
BSF		TRISC,3
BSF		TRISC,6





BANK0
MOVLW	.100
MOVWF	BRIGHTNESS
CALL	CLRAM
CALL	CLR_IRAM


;MOVLW	8
;MOVWF	PCLATH
;CALL	RTCSET
MOVLW	0
MOVWF	PCLATH


GOTO	MAIN
;$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

























;#######################	MAIN	#################################
MAIN
	BANK2
	MOVLW	0X30
	MOVWF	I2CDATREG+03
	MOVLW	0X01
	MOVWF	I2CDATREG+04
	
	MOVLW	9
	MOVWF	PCLATH
	CALL	I2CWRITE


;	MOVLW	1
;	MOVWF	PCLATH
;	CALL	DISPLAY
	MOVLW	0
	MOVWF	PCLATH



GOTO MAIN
;####################################################################






































HUB1
	CALL	CLRAM

	BANK0
	MOVLW	2
	MOVWF	FONT
	
	BANK2
	MOVFW	HOU_O
	BANK0
	MOVWF	NUMBER

	MOVLW	.17
	MOVWF	CURSORX

	MOVLW	0
	MOVWF	CURSORY

	MOVLW	.7
	MOVWF	PCLATH

	CALL	PUTNUM

;----------------------------


	BANK2
	MOVFW	HOU_T
	BANK0
	MOVWF	NUMBER

	MOVLW	4
	MOVWF	CURSORX

	MOVLW	0
	MOVWF	CURSORY

	MOVLW	.7
	MOVWF	PCLATH

	CALL	PUTNUM
	BANK0
	MOVLW	1
	MOVWF	SHCNT
	MOVLW	0
	MOVWF	ROW
	MOVLW	.7
	MOVWF	PCLATH
	CALL	SHIFTL_GRPC
	CALL	SHIFTL_GRPD
	BANK0
	MOVLW	1
	MOVWF	ROW
	CALL	SHIFTL_GRPC
	CALL	SHIFTL_GRPD
	MOVLW	0
	MOVWF	PCLATH

	MOVLW	B'11110011'
	ANDWF	DRAM+1F
	ANDWF	DRAM+2E
	ANDWF	DRAM+2C
	ANDWF	DRAM+1D
	MOVLW	B'11100001'
	ANDWF	DRAM+0F
	ANDWF	DRAM+3E
	ANDWF	DRAM+0D
	ANDWF	DRAM+3C

RETURN








HUB2
	CALL	CLRAM
	BANK2
	MOVFW	SEC_O
	BANK0
	MOVWF	NUMBER

	MOVLW	0
	MOVWF	FONT
	MOVLW	.24
	MOVWF	CURSORX

	MOVLW	0
	MOVWF	CURSORY

	MOVLW	.7
	MOVWF	PCLATH

	CALL	PUTNUM


	BANK2
	MOVFW	SEC_T
	BANK0
	MOVWF	NUMBER
	MOVLW	0
	MOVWF	FONT
	MOVLW	.16
	MOVWF	CURSORX

	MOVLW	0
	MOVWF	CURSORY

	MOVLW	.7
	MOVWF	PCLATH

	CALL	PUTNUM


	
	BANK2
	MOVFW	MIN_O
	BANK0
	MOVWF	NUMBER
	MOVLW	0
	MOVWF	FONT
	MOVLW	.8
	MOVWF	CURSORX

	MOVLW	0
	MOVWF	CURSORY

	MOVLW	.7
	MOVWF	PCLATH

	CALL	PUTNUM

	

	BANK2
	MOVFW	MIN_T
	BANK0
	MOVWF	NUMBER
	MOVLW	0
	MOVWF	FONT
	MOVLW	0
	MOVWF	CURSORX

	MOVLW	0
	MOVWF	CURSORY

	MOVLW	.7
	MOVWF	PCLATH

	CALL	PUTNUM


RETURN


















ORG 0X100


;==========	DELAY USEC =========
DELAY_US

	MOVWF	DELAYUS

USEC

	NOP
 	NOP
 	NOP
	NOP
DECFSZ	DELAYUS,F

GOTO	USEC

RETURN
;=================================



;=========== DELAY ONE MS ========
DELAY_ONEMS

	MOVLW	.5
	MOVWF	MILSEC

MSEC
	MOVLW	.200
	CALL	DELAY_US
	DECFSZ	MILSEC,F
	GOTO	MSEC

RETURN
;==================================


;=========== DELAY MS	==========
DELAY_MS
	
	MOVWF	DELAYMS
MSEC0
	CALL	DELAY_ONEMS
	DECFSZ	DELAYMS,F
	GOTO	MSEC0
RETURN
;=================================

;=========== DELAY	ONE	SECOND ===
DELAY_ONESEC

	MOVLW	.5
	MOVWF	SEC
SEC0
	MOVLW	.200
	CALL	DELAY_MS
	DECFSZ	SEC,F
	GOTO	SEC0
RETURN
;=================================

;==========	DELAY SEC ============
DELAY_SEC

	MOVWF	DELAYS
SEC1
	CALL	DELAY_ONESEC
	DECFSZ	DELAYS,F
	GOTO	SEC1
RETURN
;=================================
;-------------------
;DISP
;	BANK0
;	MOVLW	.4
;	MOVWF	LOOP
;DISP0
;	OE_OFF
;	CALL	DISPLAY
;	DECFSZ	LOOP,F
;	GOTO	DISP0
;	OE_OFF
;RETURN
;-------------------

;============	DATALATCH ========
DATALATCH
OE_OFF
REG_OFF

MOVLW	.16
MOVWF	POINTER


DSP0
MOVFW	INDF
MOVWF	SSPBUF

NOP
NOP
NOP
NOP
NOP
NOP
NOP

REG_ON
REG_OFF

INCF	FSR
DECFSZ	POINTER,F
GOTO	DSP0


RETURN
;=================================


;#######################	DISPLAY		########################
DISPLAY
	CALL	HUB1
	MOVLW	0X2C
	MOVWF	FSR
	CALL	DATALATCH
	CALL	HUB2
	MOVLW	0X2C
	MOVWF	FSR
	CALL	DATALATCH
	A_ON
	B_ON
	OE_ON


;	CALL	DELAY_ONEMS
	CALL	RTCUPDATE
	OE_OFF


	CALL	HUB1	
	MOVLW	0X3C
	MOVWF	FSR
	CALL	DATALATCH
	CALL	HUB2
	MOVLW	0X3C
	MOVWF	FSR
	CALL	DATALATCH
	A_OFF
	B_ON
	OE_ON

	CALL	DELAY_ONEMS
	OE_OFF


	CALL	HUB1
	MOVLW	0X4C
	MOVWF	FSR
	CALL	DATALATCH
	CALL	HUB2
	MOVLW	0X4C
	MOVWF	FSR
	CALL	DATALATCH
	A_ON
	B_OFF
	OE_ON

	CALL	DELAY_ONEMS
	OE_OFF

	CALL	HUB1
	MOVLW	0X5C
	MOVWF	FSR
	CALL	DATALATCH
	CALL	HUB2
	MOVLW	0X5C
	MOVWF	FSR
	CALL	DATALATCH
	A_OFF
	B_OFF
	OE_ON

	CALL	DELAY_ONEMS
	OE_OFF

	

RETURN
;###############################################################

RTCUPDATE
	MOVLW	9
	MOVWF	PCLATH
	CALL	I2C_GETDATA
	MOVLW	1
	MOVWF	PCLATH
RETURN


;=======================	CLEAR	RAM		===============
CLRAM
	MOVLW		.64
	MOVWF		POINTER
	MOVLW		DRAM
	MOVWF		FSR

CLR0
	MOVLW		0XFF
	MOVWF		INDF

	INCF		FSR, F
	DECFSZ		POINTER, F
	GOTO		CLR0

	 
	RETURN
;==========================================================




;############	CLEAR   IRAM  ###################
CLR_IRAM
	
	BANK1
	MOVLW		.64
	MOVWF		IPOINTER
	MOVLW		IRAM
	MOVWF		FSR

IRM0
	MOVLW		0XFF
	MOVWF		INDF
	MOVLW		INDF
	
	INCF		FSR, F
	DECFSZ		IPOINTER, F
	GOTO		IRM0
	 
	RETURN

	MOVLW		0
	MOVWF		PCLATH 

RETURN
;################################################



;#################	CUTTING CHARACTERS FROM BOT ##################
SLICEB
	MOVLW		0X1F
	MOVWF		FSR

SLB0
	MOVLW		.4
	MOVWF		POINTER
			
	MOVLW		0XD
	ADDWF		FSR

SLB1
	MOVLW		0XFF
	MOVWF		INDF
	MOVLW		INDF

	MOVLW		0X10
	ADDWF		FSR
	DECFSZ		TALL,F
	GOTO		SLB2
	RETURN		;EXIT IF ZERO

SLB2
	DECFSZ		POINTER,F
	GOTO		SLB1
	MOVLW		0X4C
	SUBWF		FSR
	GOTO		SLB0

RETURN
;#################################################################



;#################	CUTTING CHARACTERS FROM TOP ##################
SLICET
	MOVLW		0X6C
	MOVWF		FSR
	
SLT0
	MOVLW		.4
	MOVWF		POINTER
	MOVLW		0XD
	SUBWF		FSR

SLT1
	MOVLW		0XFF
	MOVWF		INDF
	MOVLW		INDF
	
	MOVLW		0X10
	SUBWF		FSR
	DECFSZ		TALL,F
	GOTO		SLT2
	RETURN		;EXIT IF ZERO

SLT2
	DECFSZ		POINTER,F
	GOTO		SLT1
	MOVLW		0X4C
	ADDWF		FSR
	GOTO		SLT0
	

RETURN
;#################################################################
CHAR



	MOVFW	NUMBER
	ADDWF	PCL,F

	GOTO	ZERO
	
	GOTO	ONE
	
	GOTO	TWO

	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP

	INCF	PCLATH
	GOTO	CHARB





	ZERO
			MOVFW	BTCOUNT
			ADDWF	PCL, F

			DT	8
			DT	B'11000111'
			DT	B'10000011'
			DT	B'00010001'
			DT	B'00111001'
			DT	B'00111001'
			DT	B'00111001'
			DT	B'00111001'
			DT	B'00111001'
			DT	B'00111001'
			DT	B'00111001'
			DT	B'00111001'
			DT	B'00111001'
			DT	B'00111001'
			DT	B'00010001'
			DT	B'10000011'
			DT	B'11000111'
			MOVLW	.0
			MOVWF	PCLATH


	ONE
			MOVFW	BTCOUNT
			ADDWF	PCL, F

			DT	7
			DT	B'11001111'
			DT	B'11001111'
			DT	B'10001111'
			DT	B'00001111'
			DT	B'01001111'
			DT	B'11001111'
			DT	B'11001111'
			DT	B'11001111'
			DT	B'11001111'
			DT	B'11001111'
			DT	B'11001111'
			DT	B'11001111'
			DT	B'11001111'
			DT	B'11001111'
			DT	B'00000011'
			DT	B'00000011'


	TWO
			MOVFW	BTCOUNT
			ADDWF	PCL, F

			DT	8
			DT	B'10000111'
			DT	B'00000011'
			DT	B'00110001'
			DT	B'11111001'
			DT	B'11111001'
			DT	B'11111001'
			DT	B'11111001'
			DT	B'11110001'
			DT	B'10000011'
			DT	B'00000111'
			DT	B'00111111'
			DT	B'00111101'
			DT	B'00111001'
			DT	B'00111001'
			DT	B'00000001'
			DT	B'00000001'
ORG 0X200




CHARB



	MOVFW	NUMBER
	ADDWF	PCL,F


	RETURN

	RETURN

	RETURN

	GOTO	THREE
	
	GOTO	FOUR
	
	GOTO	FIVE
	
	GOTO	SIX
	
	GOTO	SEVEN

	GOTO	EIGHT

	GOTO	NINE
				

	THREE
			MOVFW	BTCOUNT
			ADDWF	PCL, F

			DT	8
			DT	B'10000111'
			DT	B'00000011'
			DT	B'00110001'
			DT	B'11111001'
			DT	B'11111001'
			DT	B'11111001'
			DT	B'11110001'
			DT	B'11000011'
			DT	B'11000011'
			DT	B'11110001'
			DT	B'11111001'
			DT	B'11111001'
			DT	B'11111001'
			DT	B'00110001'
			DT	B'00000011'
			DT	B'10000111'
			

	FOUR
			MOVFW	BTCOUNT
			ADDWF	PCL, F

			DT	8
			DT	B'11111101'
			DT	B'11111001'
			DT	B'11101001'
			DT	B'11001001'
			DT	B'11001001'
			DT	B'11001001'
			DT	B'10011001'
			DT	B'00111001'
			DT	B'00000001'
			DT	B'00000001'
			DT	B'11111001'
			DT	B'11111001'
			DT	B'11111001'
			DT	B'11111001'
			DT	B'11111001'
			DT	B'11111011'

	FIVE
			MOVFW	BTCOUNT
			ADDWF	PCL, F

			DT	8
			DT	B'00000001'
			DT	B'00000001'
			DT	B'00111001'
			DT	B'00111011'
			DT	B'00111111'
			DT	B'00111111'
			DT	B'00111111'
			DT	B'00000111'
			DT	B'00000011'
			DT	B'11110001'
			DT	B'11111001'
			DT	B'11111001'
			DT	B'11111001'
			DT	B'11110001'
			DT	B'00000011'
			DT	B'00000111'


	SIX
			MOVFW	BTCOUNT
			ADDWF	PCL, F

			DT	8
			DT	B'11000111'
			DT	B'10000011'
			DT	B'00010001'
			DT	B'00111001'
			DT	B'00111111'
			DT	B'00111111'
			DT	B'00111111'
			DT	B'00100111'
			DT	B'00000011'
			DT	B'00010001'
			DT	B'00111001'
			DT	B'00111001'
			DT	B'00111001'
			DT	B'00010001'
			DT	B'10000011'
			DT	B'11000111'

	SEVEN	
			MOVFW	BTCOUNT
			ADDWF	PCL, F

			DT	8	
			DT	B'00000001'
			DT	B'00000001'
			DT	B'00111001'
			DT	B'00111001'
			DT	B'11111001'
			DT	B'11111001'
			DT	B'11111001'
			DT	B'11110011'
			DT	B'11100111'
			DT	B'11001111'
			DT	B'11001111'
			DT	B'11001111'
			DT	B'11001111'
			DT	B'11001111'
			DT	B'11001111'
			DT	B'11001111'
				
	EIGHT
			MOVFW	BTCOUNT
			ADDWF	PCL, F

			DT	8
			DT	B'11000111'
			DT	B'10000011'
			DT	B'00010001'
			DT	B'00111001'
			DT	B'00111001'
			DT	B'00111001'
			DT	B'10010011'
			DT	B'11000111'
			DT	B'10000011'
			DT	B'00010001'
			DT	B'00111001'
			DT	B'00111001'
			DT	B'00111001'
			DT	B'00010001'
			DT	B'10000011'
			DT	B'11000111'

	NINE
			MOVFW	BTCOUNT
			ADDWF	PCL, F

			DT	8
			DT	B'11000111'
			DT	B'10000011'
			DT	B'00010001'
			DT	B'00111001'
			DT	B'00111001'
			DT	B'00111001'
			DT	B'00010001'
			DT	B'10000001'
			DT	B'11001001'
			DT	B'11111001'
			DT	B'11111001'
			DT	B'11111001'
			DT	B'00111001'
			DT	B'00010001'
			DT	B'10000011'
			DT	B'11000111'





			
ORG 0X300



	
T_CHAR
		
	MOVFW	NUMBER
	ADDWF	PCL,F
	
	GOTO	T_ZERO
	
	GOTO	T_ONE

	GOTO	T_TWO

	GOTO	T_THREE

	GOTO	T_FOUR

	GOTO	T_FIVE

NOP
NOP
NOP
NOP

	INCF	PCLATH
	GOTO	T_CHARB


	T_ZERO
			MOVFW	BTCOUNT
			ADDWF	PCL

			DT	.12
			DT	B'11000000',B'11111111'
			DT	B'10000000',B'01111111'
			DT	B'00011110',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00111111',B'00111111';
			DT	B'00111111',B'00111111';
			DT	B'00111111',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00011110',B'00111111'
			DT	B'10000000',B'01111111'
			DT	B'11000000',B'11111111'

	T_ONE
			MOVFW	BTCOUNT
			ADDWF	PCL

			DT	.12
			DT	B'11001111',B'11111111'
			DT	B'11001111',B'11111111'
			DT	B'10001111',B'11111111'
			DT	B'00001111',B'11111111'
			DT	B'01001111',B'11111111'
			DT	B'11001111',B'11111111'
			DT	B'11001111',B'11111111'
			DT	B'11001111',B'11111111';
			DT	B'11001111',B'11111111';
			DT	B'11001111',B'11111111'
			DT	B'11001111',B'11111111'
			DT	B'11001111',B'11111111'
			DT	B'11001111',B'11111111'
			DT	B'11001111',B'11111111'
			DT	B'00000011',B'11111111'
			DT	B'00000011',B'11111111'	

	T_TWO
			MOVFW	BTCOUNT
			ADDWF	PCL,F
			
			DT	.12
			DT	B'11000000',B'11111111'
			DT	B'10000000',B'01111111'
			DT	B'00111110',B'00111111'
			DT	B'11111111',B'00111111'
			DT	B'11111111',B'00111111'
			DT	B'11111111',B'00111111'
			DT	B'11111111',B'00111111'
			DT	B'11111110',B'00111111'
			DT	B'11000000',B'01111111'
			DT	B'10000000',B'11111111'
			DT	B'00111111',B'11111111'
			DT	B'00111111',B'11111111'
			DT	B'00111111',B'11111111'
			DT	B'00111111',B'00111111'
			DT	B'00000000',B'00111111'
			DT	B'00000000',B'00111111'
	
	T_THREE
			MOVFW	BTCOUNT
			ADDWF	PCL

			DT	.12
			DT	B'11000000',B'11111111'
			DT	B'10000000',B'01111111'
			DT	B'00011110',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'11111111',B'00111111'
			DT	B'11111111',B'00111111'
			DT	B'11111110',B'00111111'
			DT	B'11100000',B'01111111';
			DT	B'11100000',B'01111111';
			DT	B'11111110',B'00111111'
			DT	B'11111111',B'00111111'
			DT	B'11111111',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00011110',B'00111111'
			DT	B'10000000',B'01111111'
			DT	B'11000000',B'11111111'
	
	T_FOUR
			MOVFW	BTCOUNT
			ADDWF	PCL

			DT	.12
			DT	B'11111111',B'10111111'
			DT	B'11111001',B'00111111'
			DT	B'11111001',B'00111111'
			DT	B'11111001',B'00111111'
			DT	B'11110011',B'00111111'
			DT	B'11100111',B'00111111'
			DT	B'11001111',B'00111111'
			DT	B'10011111',B'00111111';
			DT	B'00111111',B'00111111';
			DT	B'00111111',B'00111111'
			DT	B'00000000',B'00111111'
			DT	B'00000000',B'00111111'
			DT	B'11111111',B'00111111'
			DT	B'11111111',B'00111111'
			DT	B'11111111',B'00111111'
			DT	B'11111111',B'01111111'	

	T_FIVE
			MOVFW	BTCOUNT
			ADDWF	PCL

			DT	.12
			DT	B'00000000',B'00111111'
			DT	B'00000000',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00111111',B'01111111'
			DT	B'00111111',B'11111111'
			DT	B'00111111',B'11111111'
			DT	B'00111111',B'11111111'
			DT	B'00000000',B'11111111';
			DT	B'00000000',B'01111111';
			DT	B'11111110',B'00111111'
			DT	B'11111111',B'00111111'
			DT	B'11111111',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00011110',B'00111111'
			DT	B'10000000',B'01111111'
			DT	B'11000000',B'11111111'



ORG 0X400
T_CHARB

			MOVFW	NUMBER
			ADDWF	PCL,F

				RETURN	

				RETURN

				RETURN

				RETURN

				RETURN

				RETURN
				
				GOTO	T_SIX
	
				GOTO	T_SEVEN
		
				GOTO	T_EIGHT
		
				GOTO	T_NINE


			
	T_SIX
			MOVFW	BTCOUNT
			ADDWF	PCL

			DT	.12
			DT	B'11000000',B'01111111'
			DT	B'10000000',B'00111111'
			DT	B'00011110',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00111111',B'11111111'
			DT	B'00111111',B'11111111'
			DT	B'00011111',B'11111111'
			DT	B'00000000',B'11111111';
			DT	B'00000000',B'01111111';
			DT	B'00011110',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00011110',B'00111111'
			DT	B'10000000',B'01111111'
			DT	B'11000000',B'11111111'
	
			
	T_SEVEN
			MOVFW	BTCOUNT
			ADDWF	PCL

			DT	.12
			DT	B'00000000',B'00111111'
			DT	B'00000000',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'11111111',B'00111111'
			DT	B'11111111',B'00111111'
			DT	B'11111110',B'00111111'
			DT	B'11111100',B'01111111';
			DT	B'11111000',B'11111111';
			DT	B'11110001',B'11111111'
			DT	B'11100011',B'11111111'
			DT	B'11100111',B'11111111'
			DT	B'11100111',B'11111111'
			DT	B'11100111',B'11111111'
			DT	B'11100111',B'11111111'
			DT	B'11100111',B'11111111'	
	
	T_EIGHT
			MOVFW	BTCOUNT
			ADDWF	PCL

			DT	.12
			DT	B'11000000',B'11111111'
			DT	B'10000000',B'01111111'
			DT	B'00011110',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00011110',B'00111111'
			DT	B'10000000',B'01111111'
			DT	B'10000000',B'01111111';
			DT	B'00011110',B'00111111';
			DT	B'00111111',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00011110',B'00111111'
			DT	B'10000000',B'01111111'
			DT	B'11000000',B'11111111'	

	T_NINE
			MOVFW	BTCOUNT
			ADDWF	PCL

			DT	.12
			DT	B'11000000',B'11111111'
			DT	B'10000000',B'01111111'
			DT	B'00011110',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00011110',B'00111111'
			DT	B'10000000',B'00111111';
			DT	B'11000000',B'00111111';
			DT	B'11111110',B'00111111'
			DT	B'11111111',B'00111111'
			DT	B'11111111',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00011110',B'00111111'
			DT	B'10000000',B'01111111'
			DT	B'11000000',B'11111111'

RETURN

;#################### DUMPING OF DATA #######################

DUMP
	BANK0
	MOVLW	.0
	MOVWF	BTCOUNT
		
	MOVFW	FONT
	ADDWF	PCL,F

	GOTO	FONT_0
	
	GOTO	FONT_1
	
	MOVLW	5
	MOVWF	PCLATH
	GOTO	FONT_2



FONT_0
	MOVLW	1
	MOVWF	PCLATH
	CALL	CHAR
	MOVWF	WIDTH
	INCF	BTCOUNT

	MOVLW	0X5F
	MOVWF	FSR
	CALL	DMP_FONT0
	
	MOVLW	0X5E
	MOVWF	FSR
	CALL	DMP_FONT0

	MOVLW	0X5D
	MOVWF	FSR
	CALL	DMP_FONT0

	MOVLW	0X5C
	MOVWF	FSR
	CALL	DMP_FONT0



	MOVLW	.0			;BACK TO PAGE1
	MOVWF	PCLATH
RETURN

DMP_FONT0
	MOVLW	4
	MOVWF	POINTER
DMPF0
	MOVLW	1
	MOVWF	PCLATH
	CALL	CHAR
	MOVWF	INDF
	MOVLW	0X10
	SUBWF	FSR,F
	INCF	BTCOUNT
	DECFSZ	POINTER,F
	GOTO	DMPF0
RETURN

FONT_1

	MOVLW	.0			;BACK TO PAGE1
	MOVWF	PCLATH

	RETURN


DMP_FONT2

	MOVLW	4
	MOVWF	POINTER
DMPF2
	MOVLW	3
	MOVWF	PCLATH
	CALL	T_CHAR
	MOVWF	INDF
	MOVLW	4
	ADDWF	FSR,F
	INCF	BTCOUNT
	MOVLW	3
	MOVWF	PCLATH
	CALL	T_CHAR
	MOVWF	INDF
	MOVLW	0X14
	SUBWF	FSR,F
	INCF	BTCOUNT
	DECFSZ	POINTER,F
	GOTO	DMPF2
RETURN

FONT_2

	MOVLW	3
	MOVWF	PCLATH
	CALL	T_CHAR
	MOVWF	WIDTH
	INCF	BTCOUNT
	
	MOVLW	0X5F
	MOVWF	FSR
	CALL	DMP_FONT2
	
	MOVLW	0X5E
	MOVWF	FSR
	CALL	DMP_FONT2

	MOVLW	0X5D
	MOVWF	FSR
	CALL	DMP_FONT2

	MOVLW	0X5C
	MOVWF	FSR
	CALL	DMP_FONT2

	MOVLW	.0			;BACK TO PAGE1
	MOVWF	PCLATH
RETURN
;###############################################################

ORG	0X500
;#################	ISHIFT X	RIGHT ##########################

ISHIFTR
	BANK1
	MOVFW	ICURSORX
	ADDWF	PCL,F
	

		RETURN
	GOTO	IGRP_C;1
	GOTO	IGRP_C;2
	GOTO	IGRP_C;3
	GOTO	IGRP_C;4
	GOTO	IGRP_C;5
	GOTO	IGRP_C;6
	GOTO	IGRP_C;7
	GOTO	IGRP_C;8
		GOTO	IGRP_B;9
	GOTO	IGRP_B;10
	GOTO	IGRP_B;11
	GOTO	IGRP_B;12
	GOTO	IGRP_B;13
	GOTO	IGRP_B;14
	GOTO	IGRP_B;15
	GOTO	IGRP_B;16
		GOTO	IGRP_A;17
	GOTO	IGRP_A;18
	GOTO	IGRP_A;19
	GOTO	IGRP_A;20
	GOTO	IGRP_A;21
	GOTO	IGRP_A;22
	GOTO	IGRP_A;23
	GOTO	IGRP_A;24

IGRP_A
;--------------------
	MOVFW	ICURSORX
	MOVWF	ISHCNT

	MOVLW	.1
	MOVWF	ITESTER

	MOVFW	IROW
	SUBWF	ITESTER,W
	BTFSC	STATUS,Z
	GOTO	ISRA08_R1
	
ISRA00
	SETC	1
	RRF		IRAM + 33
	RRF		IRAM + 37
	RRF		IRAM + 3B
	RRF		IRAM + 3F

	RRF		IRAM + 23
	RRF		IRAM + 27
	RRF		IRAM + 2B
	RRF		IRAM + 2F

	RRF		IRAM + 13
	RRF		IRAM + 17
	RRF		IRAM + 1B
	RRF		IRAM + 1F

	RRF		IRAM + 03
	RRF		IRAM + 07
	RRF		IRAM + 0B
	RRF		IRAM + 0F

	RRF		IRAM + 32
	RRF		IRAM + 36
	RRF		IRAM + 3A
	RRF		IRAM + 3E

	RRF		IRAM + 22
	RRF		IRAM + 26
	RRF		IRAM + 2A
	RRF		IRAM + 2E

	RRF		IRAM + 12
	RRF		IRAM + 16
	RRF		IRAM + 1A
	RRF		IRAM + 1E

	RRF		IRAM + 02
	RRF		IRAM + 06
	RRF		IRAM + 0A
	RRF		IRAM + 0E
	DECFSZ	ISHCNT
	GOTO	ISRA00

	MOVF	ICURSORX,0
	MOVWF	ISHCNT
RETURN
ISRA08_R1
	SETC	1
ISRA08
	RRF		IRAM + 31
	RRF		IRAM + 35
	RRF		IRAM + 39
	RRF		IRAM + 3D

	RRF		IRAM + 21
	RRF		IRAM + 25
	RRF		IRAM + 29
	RRF		IRAM + 2D


	RRF		IRAM + 11
	RRF		IRAM + 15
	RRF		IRAM + 19
	RRF		IRAM + 1D

	RRF		IRAM + 01
	RRF		IRAM + 05
	RRF		IRAM + 09
	RRF		IRAM + 0D

	RRF		IRAM + 30
	RRF		IRAM + 34
	RRF		IRAM + 38
	RRF		IRAM + 3C


	RRF		IRAM + 20
	RRF		IRAM + 24
	RRF		IRAM + 28
	RRF		IRAM + 2C

	RRF		IRAM + 10
	RRF		IRAM + 14
	RRF		IRAM + 18
	RRF		IRAM + 1C

	RRF		IRAM + 00
	RRF		IRAM + 04
	RRF		IRAM + 08
	RRF		IRAM + 0C
	DECFSZ	ISHCNT
	GOTO	ISRA08

RETURN

IGRP_B

;--------------------
	MOVFW	ICURSORX
	MOVWF	ISHCNT

	MOVLW	.1
	MOVWF	ITESTER

	MOVFW	IROW
	SUBWF	ITESTER,W
	BTFSC	STATUS,Z
	GOTO	ISRB08


	
ISRB00
	SETC	1
	RRF		IRAM + 33
	RRF		IRAM + 37
	RRF		IRAM + 3B

	RRF		IRAM + 23
	RRF		IRAM + 27
	RRF		IRAM + 2B

	RRF		IRAM + 13
	RRF		IRAM + 17
	RRF		IRAM + 1B


	RRF		IRAM + 03
	RRF		IRAM + 07
	RRF		IRAM + 0B


	RRF		IRAM + 32
	RRF		IRAM + 36
	RRF		IRAM + 3A

	RRF		IRAM + 22
	RRF		IRAM + 26
	RRF		IRAM + 2A


	RRF		IRAM + 12
	RRF		IRAM + 16
	RRF		IRAM + 1A

	RRF		IRAM + 02
	RRF		IRAM + 06
	RRF		IRAM + 0A

	DECFSZ	ISHCNT
	GOTO	ISRB00

	MOVF	ICURSORX,0
	MOVWF	ISHCNT
RETURN
ISRB08_R1
	SETC	1
ISRB08
	RRF		IRAM + 31
	RRF		IRAM + 35
	RRF		IRAM + 39

	RRF		IRAM + 21
	RRF		IRAM + 25
	RRF		IRAM + 29

	RRF		IRAM + 11
	RRF		IRAM + 15
	RRF		IRAM + 19


	RRF		IRAM + 01
	RRF		IRAM + 05
	RRF		IRAM + 09

	RRF		IRAM + 30
	RRF		IRAM + 34
	RRF		IRAM + 38

	RRF		IRAM + 20
	RRF		IRAM + 24
	RRF		IRAM + 28

	RRF		IRAM + 10
	RRF		IRAM + 14
	RRF		IRAM + 18

	RRF		IRAM + 00
	RRF		IRAM + 04
	RRF		IRAM + 08

	DECFSZ	ISHCNT
	GOTO	ISRB08

RETURN

IGRP_C
	;--------------------
	MOVFW	ICURSORX
	MOVWF	ISHCNT

	MOVLW	.1
	MOVWF	ITESTER

	MOVFW	IROW
	SUBWF	ITESTER,W
	BTFSC	STATUS,Z
	GOTO	ISRC08


	
ISRC00
	SETC	1
	RRF		IRAM + 33
	RRF		IRAM + 37


	RRF		IRAM + 23
	RRF		IRAM + 27


	RRF		IRAM + 13
	RRF		IRAM + 17


	RRF		IRAM + 03
	RRF		IRAM + 07


	RRF		IRAM + 32
	RRF		IRAM + 36



	RRF		IRAM + 22
	RRF		IRAM + 26



	RRF		IRAM + 12
	RRF		IRAM + 16

	RRF		IRAM + 02
	RRF		IRAM + 06


	DECFSZ	ISHCNT
	GOTO	ISRC00

	MOVF	ICURSORX,0
	MOVWF	ISHCNT
RETURN
ISRC08_R1
	SETC	1
ISRC08
	RRF		IRAM + 31
	RRF		IRAM + 35


	RRF		IRAM + 21
	RRF		IRAM + 25


	RRF		IRAM + 11
	RRF		IRAM + 15


	RRF		IRAM + 01
	RRF		IRAM + 05



	RRF		IRAM + 30
	RRF		IRAM + 34


	RRF		IRAM + 20
	RRF		IRAM + 24


	RRF		IRAM + 10
	RRF		IRAM + 14



	RRF		IRAM + 00
	RRF		IRAM + 04


	DECFSZ	ISHCNT
	GOTO	ISRC08

RETURN

IGRP_D

	NOP
	NOP

RETURN
;###############################################################







;#################	SHIFT X	RIGHT ##############################

ORG 0X600
SHIFTR
	MOVFW	CURSORX
	ADDWF	PCL,F
	

		RETURN;0
	GOTO	GRP_C;1
	GOTO	GRP_C;2
	GOTO	GRP_C;3
	GOTO	GRP_C;4
	GOTO	GRP_C;5
	GOTO	GRP_C;6
	GOTO	GRP_C;7
	GOTO	GRP_C;8
		GOTO	GRP_B;9
	GOTO	GRP_B;10
	GOTO	GRP_B;11
	GOTO	GRP_B;12
	GOTO	GRP_B;13
	GOTO	GRP_B;14
	GOTO	GRP_B;15
	GOTO	GRP_B;16
		GOTO	GRP_A;17
	GOTO	GRP_A;18
	GOTO	GRP_A;19
	GOTO	GRP_A;20
	GOTO	GRP_A;21
	GOTO	GRP_A;22
	GOTO	GRP_A;23
	GOTO	GRP_A;24
	GOTO	GRP_A;25

GRP_A
;--------------------
	BANK0
	MOVFW	CURSORX
	MOVWF	SHCNT

	MOVLW	.1
	MOVWF	TESTER

	MOVFW	ROW
	SUBWF	TESTER,W
	BTFSC	STATUS,Z
	GOTO	SRA08_R1
	
SRA00
	SETC	1
	RRF		DRAM + 33
	RRF		DRAM + 37
	RRF		DRAM + 3B
	RRF		DRAM + 3F

	RRF		DRAM + 23
	RRF		DRAM + 27
	RRF		DRAM + 2B
	RRF		DRAM + 2F

	RRF		DRAM + 13
	RRF		DRAM + 17
	RRF		DRAM + 1B
	RRF		DRAM + 1F

	RRF		DRAM + 03
	RRF		DRAM + 07
	RRF		DRAM + 0B
	RRF		DRAM + 0F

	RRF		DRAM + 32
	RRF		DRAM + 36
	RRF		DRAM + 3A
	RRF		DRAM + 3E

	RRF		DRAM + 22
	RRF		DRAM + 26
	RRF		DRAM + 2A
	RRF		DRAM + 2E

	RRF		DRAM + 12
	RRF		DRAM + 16
	RRF		DRAM + 1A
	RRF		DRAM + 1E

	RRF		DRAM + 02
	RRF		DRAM + 06
	RRF		DRAM + 0A
	RRF		DRAM + 0E
	DECFSZ	SHCNT
	GOTO	SRA00

	MOVF	CURSORX,0
	MOVWF	SHCNT
RETURN
SRA08_R1
	SETC	1
SRA08
	RRF		DRAM + 31
	RRF		DRAM + 35
	RRF		DRAM + 39
	RRF		DRAM + 3D

	RRF		DRAM + 21
	RRF		DRAM + 25
	RRF		DRAM + 29
	RRF		DRAM + 2D

	RRF		DRAM + 11
	RRF		DRAM + 15
	RRF		DRAM + 19
	RRF		DRAM + 1D

	RRF		DRAM + 01
	RRF		DRAM + 05
	RRF		DRAM + 09
	RRF		DRAM + 0D

	RRF		DRAM + 30
	RRF		DRAM + 34
	RRF		DRAM + 38
	RRF		DRAM + 3C

	RRF		DRAM + 20
	RRF		DRAM + 24
	RRF		DRAM + 28
	RRF		DRAM + 2C

	RRF		DRAM + 10
	RRF		DRAM + 14
	RRF		DRAM + 18
	RRF		DRAM + 1C

	RRF		DRAM + 00
	RRF		DRAM + 04
	RRF		DRAM + 08
	RRF		DRAM + 0C
	DECFSZ	SHCNT
	GOTO	SRA08

RETURN

GRP_B

;--------------------
	MOVFW	CURSORX
	MOVWF	SHCNT

	MOVLW	.1
	MOVWF	TESTER

	MOVFW	ROW
	SUBWF	TESTER,W
	BTFSC	STATUS,Z
	GOTO	SRB08

	
SRB00
	SETC	1
	RRF		DRAM + 33
	RRF		DRAM + 37
	RRF		DRAM + 3B

	RRF		DRAM + 23
	RRF		DRAM + 27
	RRF		DRAM + 2B


	RRF		DRAM + 13
	RRF		DRAM + 17
	RRF		DRAM + 1B


	RRF		DRAM + 03
	RRF		DRAM + 07
	RRF		DRAM + 0B


	RRF		DRAM + 32
	RRF		DRAM + 36
	RRF		DRAM + 3A


	RRF		DRAM + 22
	RRF		DRAM + 26
	RRF		DRAM + 2A

	RRF		DRAM + 12
	RRF		DRAM + 16
	RRF		DRAM + 1A


	RRF		DRAM + 02
	RRF		DRAM + 06
	RRF		DRAM + 0A

	DECFSZ	SHCNT
	GOTO	SRB00

	MOVF	CURSORX,0
	MOVWF	SHCNT
RETURN
SRB08_R1
	SETC	1
SRB08
	RRF		DRAM + 31
	RRF		DRAM + 35
	RRF		DRAM + 39

	RRF		DRAM + 21
	RRF		DRAM + 25
	RRF		DRAM + 29


	RRF		DRAM + 11
	RRF		DRAM + 15
	RRF		DRAM + 19



	RRF		DRAM + 01
	RRF		DRAM + 05
	RRF		DRAM + 09


	RRF		DRAM + 30
	RRF		DRAM + 34
	RRF		DRAM + 38

	RRF		DRAM + 20
	RRF		DRAM + 24
	RRF		DRAM + 28


	RRF		DRAM + 10
	RRF		DRAM + 14
	RRF		DRAM + 18

	RRF		DRAM + 00
	RRF		DRAM + 04
	RRF		DRAM + 08

	DECFSZ	SHCNT
	GOTO	SRB08

RETURN

GRP_C
	;--------------------
	MOVFW	CURSORX
	MOVWF	SHCNT

	MOVLW	.1
	MOVWF	TESTER

	MOVFW	ROW
	SUBWF	TESTER,W
	BTFSC	STATUS,Z
	GOTO	SRC08


	
SRC00
	SETC	1
	RRF		DRAM + 33
	RRF		DRAM + 37


	RRF		DRAM + 23
	RRF		DRAM + 27



	RRF		DRAM + 13
	RRF		DRAM + 17



	RRF		DRAM + 03
	RRF		DRAM + 07



	RRF		DRAM + 32
	RRF		DRAM + 36



	RRF		DRAM + 22
	RRF		DRAM + 26


	RRF		DRAM + 12
	RRF		DRAM + 16


	RRF		DRAM + 02
	RRF		DRAM + 06


	DECFSZ	SHCNT
	GOTO	SRC00

	MOVF	CURSORX,0
	MOVWF	SHCNT
RETURN
SRC08_R1
	SETC	1
SRC08
	RRF		DRAM + 31
	RRF		DRAM + 35



	RRF		DRAM + 21
	RRF		DRAM + 25



	RRF		DRAM + 11
	RRF		DRAM + 15


	RRF		DRAM + 01
	RRF		DRAM + 05



	RRF		DRAM + 30
	RRF		DRAM + 34


	RRF		DRAM + 20
	RRF		DRAM + 24


	RRF		DRAM + 10
	RRF		DRAM + 14


	RRF		DRAM + 00
	RRF		DRAM + 04


	DECFSZ	SHCNT
	GOTO	SRC08

RETURN

GRP_D

	NOP
	NOP

RETURN



ORG 0X700

;########################### SHIFT LEFT ########################
SHFTL
	BANK0
	MOVLW		0XFF
	MOVWF		TEMPFILE

	MOVFW		SHCNT
	MOVWF		COUNT4
SHFTL00	
	SETC		1
	RLF			INDF
	RLF			TEMPFILE
	DECFSZ		COUNT4,F
	GOTO		SHFTL00

	MOVLW		4
	SUBWF		FSR,F
	MOVFW		TEMPFILE
	ANDWF		INDF,F

	
	
	
RETURN

SHIFTL_GRPA

SHIFTL_GRPB
	BANK0
	MOVFW		ROW
	ADDWF		PCL,F
	GOTO		SBR0
	GOTO		SBR1

SBR0
	MOVLW		63
	MOVWF		FSR
	GOTO		SB_BEGIN
SBR1
	MOVLW		61
	MOVWF		FSR


SB_BEGIN

	MOVLW		2
	MOVWF		COUNT2
SB00
	MOVLW		4
	MOVWF		COUNT3
SB01
	CALL		SHFTL
	MOVLW		0X0C

	SUBWF		FSR,F
	DECFSZ		COUNT3,F
	GOTO		SB01
	MOVLW		0X3F
	ADDWF		FSR,F
	DECFSZ		COUNT2,F
	GOTO		SB00

RETURN



SHIFTL_GRPC
	BANK0
	MOVFW		ROW
	ADDWF		PCL,F
	GOTO		SCR0
	GOTO		SCR1

SCR0
	MOVLW		67
	MOVWF		FSR
	GOTO		SC_BEGIN
SCR1
	MOVLW		65
	MOVWF		FSR


SC_BEGIN

	MOVLW		2
	MOVWF		COUNT2
SC00
	MOVLW		4
	MOVWF		COUNT3
SC01
	CALL		SHFTL
	MOVLW		0X0C

	SUBWF		FSR,F
	DECFSZ		COUNT3,F
	GOTO		SC01
	MOVLW		0X3F
	ADDWF		FSR,F
	DECFSZ		COUNT2,F
	GOTO		SC00

RETURN

SHIFTL_GRPD
	BANK0
	MOVFW		ROW
	ADDWF		PCL,F
	GOTO		SDR0
	GOTO		SDR1

SDR0
	MOVLW		6B
	MOVWF		FSR
	GOTO		SD_BEGIN
SDR1
	MOVLW		69
	MOVWF		FSR


SD_BEGIN

	MOVLW		2
	MOVWF		COUNT2
SD00
	MOVLW		4
	MOVWF		COUNT3
SD01
	CALL		SHFTL
	MOVLW		0X0C

	SUBWF		FSR,F
	DECFSZ		COUNT3,F
	GOTO		SD01
	MOVLW		0X3F
	ADDWF		FSR,F
	DECFSZ		COUNT2,F
	GOTO		SD00

RETURN
;###############################################################





;#################	SHIFT Y UPWARD ###############################
SHIFT_YU
	

	MOVFW	CURSORY
	BTFSC	STATUS,Z
	RETURN
	
	BANK0
	MOVFW	CURSORY
	MOVWF	POINTER
YU0
	MOVFW	DRAM + 33
	MOVWF	TEMPFILE
	
	MOVFW	DRAM + 23
	MOVWF	DRAM + 33

	MOVFW	DRAM + 13
	MOVWF	DRAM + 23

	MOVFW	DRAM + 03
	MOVWF	DRAM + 13

	MOVFW	DRAM + 32
	MOVWF	DRAM + 03

	MOVFW	DRAM + 22
	MOVWF	DRAM + 32

	MOVFW	DRAM + 12
	MOVWF	DRAM + 22

	MOVFW	DRAM + 02
	MOVWF	DRAM + 12

	MOVFW	DRAM + 31
	MOVWF	DRAM + 02

	MOVFW	DRAM + 21
	MOVWF	DRAM + 31

	MOVFW	DRAM + 11
	MOVWF	DRAM + 21

	MOVFW	DRAM + 01
	MOVWF	DRAM + 11

	MOVFW	DRAM + 30
	MOVWF	DRAM + 01

	MOVFW	DRAM + 20
	MOVWF	DRAM + 30

	MOVFW	DRAM + 10
	MOVWF	DRAM + 20

	MOVFW	DRAM + 00
	MOVWF	DRAM + 10
	
	MOVLW	0XFF
	MOVWF	DRAM+00


	DECFSZ	POINTER,F
	GOTO	YU0

	MOVLW	.2
	MOVWF	TESTER

	MOVFW	FONT
	SUBWF	TESTER,W
	BTFSS	STATUS,Z
	RETURN

	MOVLW	.9
	MOVWF	PCLATH

	CALL	SHIFT_YUB

	MOVLW	9
	MOVWF	PCLATH
	

	

RETURN
;#################################################################





;###################  DUMPING OF DATA IN IRAM ##################

IDUMP
	MOVLW	.0
	MOVWF	BTCOUNT
		
	BANK0
	MOVFW	FONT
	ADDWF	PCL,F

	GOTO	IFONT_0
	
	GOTO	IFONT_1
	
	GOTO	IFONT_2



IFONT_0
	BANK1

	MOVLW	1
	MOVWF	PCLATH
	CALL	CHAR
	MOVWF	IWIDTH
	INCF	BTCOUNT

	MOVLW	0XD3
	MOVWF	FSR
	CALL	DMP_FONT0
	
	MOVLW	0XD2
	MOVWF	FSR
	CALL	DMP_FONT0

	MOVLW	0XD1
	MOVWF	FSR
	CALL	DMP_FONT0

	MOVLW	0XD0
	MOVWF	FSR
	CALL	DMP_FONT0

	MOVLW	.0			;BACK TO PAGE1
	MOVWF	PCLATH
	BANK0
RETURN

IFONT_1
	
	MOVLW	.0			;BACK TO PAGE1
	MOVWF	PCLATH
	BANK0
	RETURN
;###################### PLACING DISPLAY NUM ####################
PUTNUM
	MOVLW	4
	MOVWF	PCLATH
	
	CALL	DUMP
	
	MOVLW	7
	MOVWF	PCLATH

	CALL	SHIFT_YU
	

	MOVLW	0
	MOVWF	ROW

	MOVLW	6
	MOVWF	PCLATH
	
	CALL	SHIFTR
	
	MOVLW	0
	MOVWF	PCLATH
	
	MOVLW	1
	MOVWF	ROW

	MOVLW	6
	MOVWF	PCLATH
	
	CALL	SHIFTR
	
	MOVLW	0
	MOVWF	PCLATH
RETURN

IFONT_2
	BANK1

	MOVLW	3
	MOVWF	PCLATH
	CALL	T_CHAR
	MOVWF	IWIDTH
	INCF	BTCOUNT

	MOVLW	0XD3
	MOVWF	FSR
	MOVLW	4
	MOVWF	PCLATH
	CALL	DMP_FONT2
	
	MOVLW	0XD2
	MOVWF	FSR
	MOVLW	4
	MOVWF	PCLATH
	CALL	DMP_FONT2

	MOVLW	0XD1
	MOVWF	FSR
	MOVLW	4
	MOVWF	PCLATH
	CALL	DMP_FONT2

	MOVLW	0XD0
	MOVWF	FSR
	MOVLW	4
	MOVWF	PCLATH
	CALL	DMP_FONT2

	MOVLW	.0			;BACK TO PAGE1
	MOVWF	PCLATH
	BANK0
RETURN

;###############################################################

ORG	0X800

IPUTNUM
	MOVLW	7
	MOVWF	PCLATH
	
	CALL	IDUMP
	
	BANK1
	MOVLW	0
	MOVWF	IROW

	MOVLW	5
	MOVWF	PCLATH
	
	CALL	ISHIFTR
	
	MOVLW	0
	MOVWF	PCLATH
	
	BANK1
	MOVLW	1
	MOVWF	IROW

	MOVLW	5
	MOVWF	PCLATH
	
	CALL	ISHIFTR
	
	MOVLW	0
	MOVWF	PCLATH
RETURN
;###############################################################

SHIFT_YUB
	BANK0
	MOVFW	CURSORY
	MOVWF	POINTER
YU1
	MOVFW	DRAM + 37
	MOVWF	TEMPFILEB
	
	MOVFW	DRAM + 27
	MOVWF	DRAM + 37

	MOVFW	DRAM + 17
	MOVWF	DRAM + 27

	MOVFW	DRAM + 07
	MOVWF	DRAM + 17

	MOVFW	DRAM + 36
	MOVWF	DRAM + 07

	MOVFW	DRAM + 26
	MOVWF	DRAM + 36

	MOVFW	DRAM + 16
	MOVWF	DRAM + 26

	MOVFW	DRAM + 06
	MOVWF	DRAM + 16

	MOVFW	DRAM + 35
	MOVWF	DRAM + 06

	MOVFW	DRAM + 25
	MOVWF	DRAM + 35

	MOVFW	DRAM + 15
	MOVWF	DRAM + 25

	MOVFW	DRAM + 05
	MOVWF	DRAM + 15

	MOVFW	DRAM + 34
	MOVWF	DRAM + 05

	MOVFW	DRAM + 24
	MOVWF	DRAM + 34

	MOVFW	DRAM + 14
	MOVWF	DRAM + 24

	MOVFW	DRAM + 04
	MOVWF	DRAM + 14
	
	MOVLW	0XFF
	MOVWF	DRAM+04


	DECFSZ	POINTER,F
	GOTO	YU1

RETURN
;###############################################################

;##################	IRAM SHIFT LEFT	############################
ISHIFTL
ISHFTL
	BANK1
	MOVLW		0XFF
	MOVWF		ITEMPFILE

	MOVFW		ISHCNT
	MOVWF		ICOUNT4
ISHFTL00	
	SETC		1
	RLF			INDF
	RLF			TEMPFILE
	DECFSZ		ICOUNT4,F
	GOTO		ISHFTL00

	MOVLW		4
	SUBWF		FSR,F
	MOVFW		TEMPFILE
	ANDWF		INDF,F

	
	
	
RETURN

ISHIFTL_GRPA

ISHIFTL_GRPB
	
	MOVFW		IROW
	ADDWF		PCL,F
	GOTO		ISBR0
	GOTO		ISBR1

ISBR0
	MOVLW		0XD7
	MOVWF		FSR
	GOTO		ISB_BEGIN
ISBR1
	MOVLW		0XD5
	MOVWF		FSR


ISB_BEGIN

	MOVLW		2
	MOVWF		ICOUNT2
ISB00
	MOVLW		4
	MOVWF		ICOUNT3
ISB01
	CALL		ISHFTL
	MOVLW		0X0C

	SUBWF		FSR,F
	DECFSZ		ICOUNT3,F
	GOTO		ISB01
	MOVLW		0X3F
	ADDWF		FSR,F
	DECFSZ		ICOUNT2,F
	GOTO		ISB00
RETURN

ISHIFTL_GRPC
	
	MOVFW		IROW
	ADDWF		PCL,F
	GOTO		ISCR0
	GOTO		ISCR1

ISCR0
	MOVLW		0XDB
	MOVWF		FSR
	GOTO		ISC_BEGIN
ISCR1
	MOVLW		0XD9
	MOVWF		FSR


ISC_BEGIN

	MOVLW		2
	MOVWF		ICOUNT2
ISC00
	MOVLW		4
	MOVWF		ICOUNT3
ISC01
	CALL		ISHFTL
	MOVLW		0X0C

	SUBWF		FSR,F
	DECFSZ		ICOUNT3,F
	GOTO		ISC01
	MOVLW		0X3F
	ADDWF		FSR,F
	DECFSZ		ICOUNT2,F
	GOTO		ISC00
RETURN

ISHIFTL_GRPD
	
	MOVFW		IROW
	ADDWF		PCL,F
	GOTO		ISDR0
	GOTO		ISDR1

ISDR0
	MOVLW		0XDF
	MOVWF		FSR
	GOTO		ISD_BEGIN
ISDR1
	MOVLW		0XDD
	MOVWF		FSR


ISD_BEGIN

	MOVLW		2
	MOVWF		ICOUNT2
ISD00
	MOVLW		4
	MOVWF		ICOUNT3
ISD01
	CALL		ISHFTL
	MOVLW		0X0C

	SUBWF		FSR,F
	DECFSZ		ICOUNT3,F
	GOTO		ISD01
	MOVLW		0X3F
	ADDWF		FSR,F
	DECFSZ		ICOUNT2,F
	GOTO		ISD00
RETURN


RETURN
;###############################################################

RETURN

;;=================================
;RTCSET
;;=================================
;	CALL	I2CSTART
;	MOVLW	B'11010000'
;	MOVWF	I2CADD
;	CALL	I2CCOM
;
;
;	BANKSEL	TRISC
;	BCF		TRISC,3
;	BANKSEL	PORTC
;
;	
;	MOVLW	0
;	MOVWF	I2CADD
;	CALL	I2CCOM
;
;	MOVLW	0				;SECONDS
;	MOVWF	I2CADD
;	CALL	I2CCOM
;
;	MOVLW	B'00110100'		;MINUTES
;	MOVWF	I2CADD
;	CALL	I2CCOM
;
;	MOVLW	B'00000001'		;HOUR
;	MOVWF	I2CADD
;	CALL	I2CCOM
;
;	CALL	I2CSTOP
;RETURN
;;_________________________________
;




ORG 0X900



;===================================== I2C COMMUNICATION ========================





;============================
I2CWRITE
;============================
	BANK0
	BSF		STATUS,7
	BANK2
	MOVLW	0X20
	MOVWF	FSR
	MOVLW	.5
	MOVWF	I2CDATREG_IDX
	MOVLW	B'11010000'
	MOVWF	I2CDATREG+00
	MOVLW	0
	MOVWF	I2CDATREG+01
	CALL	I2CMOSI

RETURN
;============================




;==================
I2CMOSI
;==================

	CALL	I2CSTART
I2CMOSI0
	MOVLW	8
	MOVWF	I2CLOOP
I2CMOSI1
	RLF		INDF
	BTFSC	STATUS,C
	GOTO	I2CMOSI_DBIT1

I2CMOSI_DBIT0
	SDA_LO
	GOTO	I2CMOSI2

I2CMOSI_DBIT1
	SDA_HI

I2CMOSI2
	CALL	I2CDELAY_US
	CALL	SCL_PULSE
	DECFSZ	I2CLOOP,F
	GOTO	I2CMOSI1
	CALL	I2C_SLAVEACK
	CALL	I2C_SDAOUT
	INCF	FSR
	DECFSZ	I2CDATREG_IDX,F
	GOTO	I2CMOSI0

	CALL	I2CSTOP
	BANK0
	BCF		STATUS,7
RETURN
;============================









I2C_SDAIN
	BANKSEL	TRISC
	BSF		TRISC,3
	BANKSEL	PORTC
RETURN


I2C_SDAOUT
	BANKSEL	TRISC
	BCF		TRISC,3
	BANKSEL	PORTC
RETURN


;=================================
I2C_DAT2BCD
;=================================
	BANK2
	MOVLW	0
	MOVWF	I2CBCD
	RRF		I2CDAT
	RRF		I2CBCD
	RRF		I2CDAT
	RRF		I2CBCD
	RRF		I2CDAT
	RRF		I2CBCD
	RRF		I2CDAT
	RRF		I2CBCD

	CLRC
	RRF		I2CBCD
	RRF		I2CBCD
	RRF		I2CBCD
	RRF		I2CBCD

	
	MOVFW	I2CBCD
RETURN
;_________________________________



;=================================
I2C_GETDATA
;=================================

;	CALL	I2CREAD
	

	BANK2
	MOVFW	I2CDATREG+02
	CALL	I2C_DAT2BCD
	MOVWF	SEC_O

	CALL	I2C_DAT2BCD
	MOVWF	SEC_T



RETURN
;---------------------------------









;============================
SCL_PULSE
;============================
	SCL_HI
	MOVLW	7
	CALL	I2CDELAY_US

	SCL_LO
	MOVLW	7
	CALL	I2CDELAY_US
RETURN
;----------------------------




;============================
I2C_SLAVEACK
;============================
	BANKSEL	TRISC
	BSF		TRISC,3
	BANKSEL	PORTC
	MOVLW	3
	CALL	I2CDELAY_US
	
ACKTEST
	NOP
	BTFSC	PORTC,3
	GOTO	ACKTEST

	CALL	SCL_PULSE
RETURN
;----------------------------



;============================
I2C_MASTERACK
;============================
	BANKSEL	TRISC
	BCF		TRISC,3
	BANKSEL	PORTC
	SDA_LO
	MOVLW	5
	CALL	I2CDELAY_US
	CALL	SCL_PULSE

RETURN
;----------------------------



;============================
I2C_MASTERNACK
;============================
	BANKSEL	TRISC
	BCF		TRISC,3
	BANKSEL	PORTC

	SDA_HI
	MOVLW	2
	CALL	I2CDELAY_US


	CALL	SCL_PULSE

	BANKSEL	TRISC
	BSF		TRISC,3
	BANKSEL	PORTC

RETURN
;----------------------------
	
;============================
I2CSTART
;============================
	BANKSEL	TRISC
	BCF		TRISC,3
	BCF		TRISC,6
	BANKSEL	PORTC
	
	SDA_HI
	SCL_HI

	MOVLW	2
	CALL	I2CDELAY_US
	
	SDA_LO
	MOVLW	1
	CALL	I2CDELAY_US

	SCL_LO
	MOVLW	1
	CALL	I2CDELAY_US
RETURN
;----------------------------


	
;============================
I2CSTOP	
;============================
	BANKSEL	TRISC
	BCF		TRISC,3
	BCF		TRISC,6
	BANKSEL	PORTC
	
	SCL_LO
	SDA_LO
	MOVLW	.10
	CALL	I2CDELAY_US

	SCL_HI
	MOVLW	5
	CALL	I2CDELAY_US

	SDA_HI
	MOVLW	1
	CALL	I2CDELAY_US
RETURN
;----------------------------


;==========	DELAY USEC =========
I2CDELAY_US
	BANK0
	MOVWF	DELAYUS

I2CUSEC

	NOP
 	NOP
 	NOP
	NOP
DECFSZ	DELAYUS,F

GOTO	I2CUSEC

RETURN
;=================================



;________________________________________________________________________________________


































ORG 0XA00
	
;############## DRAM SHIFT Y DOWN GROUPA #######################
DSHIFT_DOWN_GRPA
	BANK0
	MOVFW	DRAM+10
	MOVWF	DRAM+00

	MOVFW	DRAM+20
	MOVWF	DRAM+10

	MOVFW	DRAM+30
	MOVWF	DRAM+20

	MOVFW	DRAM+01
	MOVWF	DRAM+30

	MOVFW	DRAM+11
	MOVWF	DRAM+01

	MOVFW	DRAM+21
	MOVWF	DRAM+11

	MOVFW	DRAM+31
	MOVWF	DRAM+21

	MOVFW	DRAM+02
	MOVWF	DRAM+31

	MOVFW	DRAM+12
	MOVWF	DRAM+02

	MOVFW	DRAM+22
	MOVWF	DRAM+12

	MOVFW	DRAM+32
	MOVWF	DRAM+22

	MOVFW	DRAM+03
	MOVWF	DRAM+32

	MOVFW	DRAM+13
	MOVWF	DRAM+03

	MOVFW	DRAM+23
	MOVWF	DRAM+13

	MOVFW	DRAM+33
	MOVWF	DRAM+23

	MOVFW	TEMPFILE
	MOVWF	DRAM+33
RETURN

;############## DRAM SHIFT Y DOWN GROUPB #############
DSHIFT_DOWN_GRPB
	BANK0
	MOVFW	DRAM+14
	MOVWF	DRAM+04

	MOVFW	DRAM+24
	MOVWF	DRAM+14

	MOVFW	DRAM+34
	MOVWF	DRAM+24

	MOVFW	DRAM+05
	MOVWF	DRAM+34

	MOVFW	DRAM+15
	MOVWF	DRAM+05

	MOVFW	DRAM+25
	MOVWF	DRAM+15

	MOVFW	DRAM+35
	MOVWF	DRAM+25

	MOVFW	DRAM+06
	MOVWF	DRAM+35

	MOVFW	DRAM+16
	MOVWF	DRAM+06

	MOVFW	DRAM+26
	MOVWF	DRAM+16

	MOVFW	DRAM+36
	MOVWF	DRAM+26

	MOVFW	DRAM+07
	MOVWF	DRAM+36

	MOVFW	DRAM+17
	MOVWF	DRAM+07

	MOVFW	DRAM+27
	MOVWF	DRAM+17

	MOVFW	DRAM+37
	MOVWF	DRAM+27

	MOVFW	TEMPFILEB
	MOVWF	DRAM+37
RETURN

;############## DRAM SHIFT Y DOWN GROUPC #############
DSHIFT_DOWN_GRPC
	BANK0
	MOVFW	DRAM+18
	MOVWF	DRAM+08

	MOVFW	DRAM+28
	MOVWF	DRAM+18

	MOVFW	DRAM+38
	MOVWF	DRAM+28

	MOVFW	DRAM+09
	MOVWF	DRAM+38

	MOVFW	DRAM+19
	MOVWF	DRAM+09

	MOVFW	DRAM+29
	MOVWF	DRAM+19

	MOVFW	DRAM+39
	MOVWF	DRAM+29

	MOVFW	DRAM+0A
	MOVWF	DRAM+39

	MOVFW	DRAM+1A
	MOVWF	DRAM+0A

	MOVFW	DRAM+2A
	MOVWF	DRAM+1A

	MOVFW	DRAM+3A
	MOVWF	DRAM+2A

	MOVFW	DRAM+0B
	MOVWF	DRAM+3A

	MOVFW	DRAM+1B
	MOVWF	DRAM+0B

	MOVFW	DRAM+2B
	MOVWF	DRAM+1B

	MOVFW	DRAM+3B
	MOVWF	DRAM+2B

	MOVFW	TEMPFILEC
	MOVWF	DRAM+3B
RETURN

;############## DRAM SHIFT Y DOWN GROUPD #############
DSHIFT_DOWN_GRPD
	BANK0
	MOVFW	DRAM+1C
	MOVWF	DRAM+0C

	MOVFW	DRAM+2C
	MOVWF	DRAM+1C

	MOVFW	DRAM+3C
	MOVWF	DRAM+2C

	MOVFW	DRAM+0D
	MOVWF	DRAM+3C

	MOVFW	DRAM+1D
	MOVWF	DRAM+0D

	MOVFW	DRAM+2D
	MOVWF	DRAM+1D

	MOVFW	DRAM+3D
	MOVWF	DRAM+2D

	MOVFW	DRAM+0E
	MOVWF	DRAM+3D

	MOVFW	DRAM+1E
	MOVWF	DRAM+0E

	MOVFW	DRAM+2E
	MOVWF	DRAM+1E

	MOVFW	DRAM+3E
	MOVWF	DRAM+2E

	MOVFW	DRAM+0F
	MOVWF	DRAM+3E

	MOVFW	DRAM+1F
	MOVWF	DRAM+0F

	MOVFW	DRAM+2F
	MOVWF	DRAM+1F

	MOVFW	DRAM+3F
	MOVWF	DRAM+2F

	MOVFW	TEMPFILED
	MOVWF	DRAM+3F
RETURN

;############## IRAM SHIFT Y DOWN GROUP A ######################
ISHIFT_DOWN_GRPA
	BANK1
	MOVFW	IRAM+00
	BANK0
	MOVWF	TEMPFILE
	BANK1
	MOVFW	IRAM+10
	MOVWF	IRAM+00

	MOVFW	IRAM+20
	MOVWF	IRAM+10

	MOVFW	IRAM+30
	MOVWF	IRAM+20

	MOVFW	IRAM+01
	MOVWF	IRAM+30

	MOVFW	IRAM+11
	MOVWF	IRAM+01

	MOVFW	IRAM+21
	MOVWF	IRAM+11

	MOVFW	IRAM+31
	MOVWF	IRAM+21

	MOVFW	IRAM+02
	MOVWF	IRAM+31

	MOVFW	IRAM+12
	MOVWF	IRAM+02

	MOVFW	IRAM+22
	MOVWF	IRAM+12

	MOVFW	IRAM+32
	MOVWF	IRAM+22

	MOVFW	IRAM+03
	MOVWF	IRAM+32

	MOVFW	IRAM+13
	MOVWF	IRAM+03

	MOVFW	IRAM+23
	MOVWF	IRAM+13

	MOVFW	IRAM+33
	MOVWF	IRAM+23

	RETURN
;###############################################################

;############## IRAM SHIFT Y DOWN GROUP B ######################
ISHIFT_DOWN_GRPB
	BANK1
	MOVFW	IRAM+04
	BANK0
	MOVWF	TEMPFILEB
	BANK1
	MOVFW	IRAM+14
	MOVWF	IRAM+04

	MOVFW	IRAM+24
	MOVWF	IRAM+14

	MOVFW	IRAM+34
	MOVWF	IRAM+24

	MOVFW	IRAM+05
	MOVWF	IRAM+34

	MOVFW	IRAM+15
	MOVWF	IRAM+05

	MOVFW	IRAM+25
	MOVWF	IRAM+15

	MOVFW	IRAM+35
	MOVWF	IRAM+25

	MOVFW	IRAM+06
	MOVWF	IRAM+35

	MOVFW	IRAM+16
	MOVWF	IRAM+06

	MOVFW	IRAM+26
	MOVWF	IRAM+16

	MOVFW	IRAM+36
	MOVWF	IRAM+26

	MOVFW	IRAM+07
	MOVWF	IRAM+36

	MOVFW	IRAM+17
	MOVWF	IRAM+07

	MOVFW	IRAM+27
	MOVWF	IRAM+17

	MOVFW	IRAM+37
	MOVWF	IRAM+27

	RETURN

SCRL_A
	MOVLW	0X0A
	MOVWF	PCLATH
	CALL	ISHIFT_DOWN_GRPA
	CALL	DSHIFT_DOWN_GRPA
	MOVLW	0
	MOVWF	PCLATH
	
RETURN

SCRL_B
	MOVLW	0X0A
	MOVWF	PCLATH
	CALL	ISHIFT_DOWN_GRPB
	CALL	DSHIFT_DOWN_GRPB
	MOVLW	0
	MOVWF	PCLATH
RETURN

SCRL_C
	MOVLW	0X0B
	MOVWF	PCLATH
	CALL	ISHIFT_DOWN_GRPC
	MOVLW	0X0A
	MOVWF	PCLATH
	CALL	DSHIFT_DOWN_GRPC
	MOVLW	0
	MOVWF	PCLATH
RETURN

SCRL_D
	MOVLW	0X0B
	MOVWF	PCLATH
	CALL	ISHIFT_DOWN_GRPD
	MOVLW	0X0A
	MOVWF	PCLATH
	CALL	DSHIFT_DOWN_GRPD
	MOVLW	0
	MOVWF	PCLATH
RETURN

ORG	0XB00

;################# IRAM SHIFT Y DOWN GROUP C ###################
ISHIFT_DOWN_GRPC
	BANK1
	MOVFW	IRAM+08
	BANK0
	MOVWF	TEMPFILEC
	BANK1
	MOVFW	IRAM+18
	MOVWF	IRAM+08

	MOVFW	IRAM+28
	MOVWF	IRAM+18

	MOVFW	IRAM+38
	MOVWF	IRAM+28

	MOVFW	IRAM+09
	MOVWF	IRAM+38

	MOVFW	IRAM+19
	MOVWF	IRAM+09

	MOVFW	IRAM+29
	MOVWF	IRAM+19

	MOVFW	IRAM+39
	MOVWF	IRAM+29

	MOVFW	IRAM+0A
	MOVWF	IRAM+39

	MOVFW	IRAM+1A
	MOVWF	IRAM+0A

	MOVFW	IRAM+2A
	MOVWF	IRAM+1A

	MOVFW	IRAM+3A
	MOVWF	IRAM+2A

	MOVFW	IRAM+0B
	MOVWF	IRAM+3A

	MOVFW	IRAM+1B
	MOVWF	IRAM+0B

	MOVFW	IRAM+2B
	MOVWF	IRAM+1B

	MOVFW	IRAM+3B
	MOVWF	IRAM+2B

	RETURN
;###############################################################


;################# IRAM SHIFT Y DOWN GROUP D ###################
ISHIFT_DOWN_GRPD
	BANK1
	MOVFW	IRAM+0C
	BANK0
	MOVWF	TEMPFILED
	BANK1
	MOVFW	IRAM+1C
	MOVWF	IRAM+0C

	MOVFW	IRAM+2C
	MOVWF	IRAM+1C

	MOVFW	IRAM+3C
	MOVWF	IRAM+2C

	MOVFW	IRAM+0D
	MOVWF	IRAM+3C

	MOVFW	IRAM+1D
	MOVWF	IRAM+0D

	MOVFW	IRAM+2D
	MOVWF	IRAM+1D

	MOVFW	IRAM+3D
	MOVWF	IRAM+2D

	MOVFW	IRAM+0E
	MOVWF	IRAM+3D

	MOVFW	IRAM+1E
	MOVWF	IRAM+0E

	MOVFW	IRAM+2E
	MOVWF	IRAM+1E

	MOVFW	IRAM+3E
	MOVWF	IRAM+2E

	MOVFW	IRAM+0F
	MOVWF	IRAM+3E

	MOVFW	IRAM+1F
	MOVWF	IRAM+0F

	MOVFW	IRAM+2F
	MOVWF	IRAM+1F

	MOVFW	IRAM+3F
	MOVWF	IRAM+2F

	RETURN
;###############################################################











	ORG	0x2100				; data EEPROM location
	DE	1,2,3,4				; define first four EEPROM locations as 1, 2, 3, and 4




	END                       ; directive 'end of program'

