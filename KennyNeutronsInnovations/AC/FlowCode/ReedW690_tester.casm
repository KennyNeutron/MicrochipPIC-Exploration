;/////////////////////////////////////////////////////////////////////////////////
;// Code Generator: BoostC Compiler - http://www.sourceboost.com
;// Version       : 7.03
;// License Type  : Pro License
;// Limitations   : PIC12,PIC16 max code size:Unlimited, max RAM banks:Unlimited
;/////////////////////////////////////////////////////////////////////////////////

//************************************************************************************
//**  
//**  File name:     D:\KennyNeutronsInnovations\AC\FlowCode\ReedW690_tester.c
//**  Title:         
//**  Description:   
//**  
//**  Generated by:  Flowcode v5.2.0.0
//**  Date:          Sunday, January 27, 2019 00:44:26
//**  Licence:       Professional
//**  Registered to: xyz
//**  Licence key:   WUK7B9
//**  
//**  
//**  http://www.matrixmultimedia.com
//**  
//************************************************************************************


#define MX_PIC

#define MX_USES_UINT8 1
#define MX_USES_SINT16 0
#define MX_USES_CHAR 0
#define MX_USES_FLOAT 0
#define MX_USES_SINT32 0
#define MX_USES_BOOL 1
#define MX_USES_UINT16 0
#define MX_USES_UINT32 0
//Defines for microcontroller
#define P16F690
#define FC_CAL_PIC
#define MX_ADC
#define MX_ADC_TYPE_3
#define MX_ADC_BITS_10
#define MX_EE
#define MX_EE_TYPE2
#define MX_EE_SIZE 256
#define MX_SPI_1
#define MX_SPI_1_MISO_PORT portb
#define MX_SPI_1_MISO_TRIS trisb
#define MX_SPI_1_MISO_PIN 4
#define MX_SPI_1_MOSI_PORT portc
#define MX_SPI_1_MOSI_TRIS trisc
#define MX_SPI_1_MOSI_PIN 7
#define MX_SPI_1_CLK_PORT portb
#define MX_SPI_1_CLK_TRIS trisb
#define MX_SPI_1_CLK_PIN 6
#define MX_SPI_1_SS_PORT portb
#define MX_SPI_1_SS_TRIS trisb
#define MX_UART_1
#define MX_UART_1_TX_PORT portb
#define MX_UART_1_TX_TRIS trisb
#define MX_UART_1_TX_PIN 7
#define MX_UART_1_RX_PORT portb
#define MX_UART_1_RX_TRIS trisb
#define MX_UART_1_RX_PIN 5
#define MX_I2C
#define MX_MI2C
#define MX_I2C_1
#define MX_I2C_1_SDA_PORT portb
#define MX_I2C_1_SDA_TRIS trisb
#define MX_I2C_1_SDA_PIN 4
#define MX_I2C_1_SCL_PORT portb
#define MX_I2C_1_SCL_TRIS trisb
#define MX_I2C_1_SCL_PIN 6
#define MX_PWM
#define MX_PWM_CNT 1
#define MX_PWM_PSCA1
#define MX_PWM_PSCA4
#define MX_PWM_PSCA16
#define MX_PWM_1_PORT portc
#define MX_PWM_1_TRIS trisc
#define MX_PWM_1_PIN 5

//Functions
#define MX_CLK_SPEED 4000000
#ifdef _BOOSTC
#include <system.h>
#endif
#ifdef HI_TECH_C
#include <pic.h>
#endif

//Configuration data
#ifdef _BOOSTC
#pragma DATA 0x2007, 0x30d4
#endif
#ifdef HI_TECH_C
__CONFIG(0x30d4);
#endif

//Internal functions
#include "C:\Program Files (x86)\Flowcode\v5\FCD\internals.c"

//Macro function declarations
void FCM_scan_row1();
void FCM_scan_row2();
void FCM_scan_row3();


//Variable declarations
#define FCV_TRUE (1)
#define FCV_FALSE (0)
MX_BOOL FCV_COL1 = (0);
01E2  1042  	BCF gbl_FCV_COL1,0

MX_BOOL FCV_COL2 = (0);
01E3  10C2  	BCF gbl_FCV_COL2,1

MX_UINT8 FCV_CHECK = (0x0);
01E4  01C3  	CLRF gbl_FCV_CHECK

MX_BOOL FCV_COL3 = (0);
01E5  1142  	BCF gbl_FCV_COL3,2

MX_UINT8 FCV_TX = (0x0);
01E6  01C4  	CLRF gbl_FCV_TX

MX_UINT8 FCV_ERROR = (0x0);
01E7  01C5  	CLRF gbl_FCV_ERROR

MX_BOOL FCV_ROW1 = (0);
01E8  11C2  	BCF gbl_FCV_ROW1,3

MX_BOOL FCV_ROW2 = (0);
01E9  1242  	BCF gbl_FCV_ROW2,4

MX_BOOL FCV_ROW3 = (0);
01EA  12C2  	BCF gbl_FCV_ROW3,5

MX_BOOL FCV_FLAG = (0);
01EB  1342  	BCF gbl_FCV_FLAG,6

MX_UINT8 FCV_STORE = (0x0);
01EC  01C6  	CLRF gbl_FCV_STORE





//LED(0): //Defines:

/**** Macro Substitutions ****
a = Unique Reference
b = LED Port Letter
c = LED Pin Number
d = LED Active Polarity
******************************/

#define LED_1__LED_PORT		portb
#define LED_1__LED_TRIS		trisb
#define LED_1__LED_PIN		4
#define LED_1__LED_POLE		1




//LED(0): //Macro function declarations

void FCD_LED0_LEDOn();
void FCD_LED0_LEDOff();


//LED(1): //Defines:

/**** Macro Substitutions ****
a = Unique Reference
b = LED Port Letter
c = LED Pin Number
d = LED Active Polarity
******************************/

#define LED_2__LED_PORT		portb
#define LED_2__LED_TRIS		trisb
#define LED_2__LED_PIN		6
#define LED_2__LED_POLE		1




//LED(1): //Macro function declarations

void FCD_LED1_LEDOn();
void FCD_LED1_LEDOff();



//LED(0): //Macro implementations


void FCD_LED0_LEDOn()

{
	
		#if( LED_1__LED_POLE == 1)									//Active high polarity
			FC_CAL_Bit_High_DDR( LED_1__LED_PORT , LED_1__LED_TRIS , LED_1__LED_PIN );
012B  1683  	BSF STATUS, RP0
012C  1303  	BCF STATUS, RP1
012D  1206  	BCF gbl_trisb,4
012E  1283  	BCF STATUS, RP0
012F  1606  	BSF gbl_portb,4

		#else													//Active low polarity
			FC_CAL_Bit_Low_DDR( LED_1__LED_PORT , LED_1__LED_TRIS , LED_1__LED_PIN );
		#endif

}
0130  0008  	RETURN


void FCD_LED0_LEDOff()

{
	
		#if( LED_1__LED_POLE == 1)									//Active high polarity
			FC_CAL_Bit_Low_DDR( LED_1__LED_PORT	, LED_1__LED_TRIS , LED_1__LED_PIN );
0125  1683  	BSF STATUS, RP0
0126  1303  	BCF STATUS, RP1
0127  1206  	BCF gbl_trisb,4
0128  1283  	BCF STATUS, RP0
0129  1206  	BCF gbl_portb,4

		#else													//Active low polarity
			FC_CAL_Bit_High_DDR( LED_1__LED_PORT , LED_1__LED_TRIS , LED_1__LED_PIN );
		#endif

}
012A  0008  	RETURN




//LED(1): //Macro implementations


void FCD_LED1_LEDOn()

{
	
		#if( LED_2__LED_POLE == 1)									//Active high polarity
			FC_CAL_Bit_High_DDR( LED_2__LED_PORT , LED_2__LED_TRIS , LED_2__LED_PIN );
011F  1683  	BSF STATUS, RP0
0120  1303  	BCF STATUS, RP1
0121  1306  	BCF gbl_trisb,6
0122  1283  	BCF STATUS, RP0
0123  1706  	BSF gbl_portb,6

		#else													//Active low polarity
			FC_CAL_Bit_Low_DDR( LED_2__LED_PORT , LED_2__LED_TRIS , LED_2__LED_PIN );
		#endif

}
0124  0008  	RETURN


void FCD_LED1_LEDOff()

{
	
		#if( LED_2__LED_POLE == 1)									//Active high polarity
			FC_CAL_Bit_Low_DDR( LED_2__LED_PORT	, LED_2__LED_TRIS , LED_2__LED_PIN );
0119  1683  	BSF STATUS, RP0
011A  1303  	BCF STATUS, RP1
011B  1306  	BCF gbl_trisb,6
011C  1283  	BCF STATUS, RP0
011D  1306  	BCF gbl_portb,6

		#else													//Active low polarity
			FC_CAL_Bit_High_DDR( LED_2__LED_PORT , LED_2__LED_TRIS , LED_2__LED_PIN );
		#endif

}
011E  0008  	RETURN


#include "C:\Program Files (x86)\Flowcode\v5\CAL\includes.c"

//Macro implementations


void FCM_scan_row1()

{

	//row1
	//Output: 1 -> C3
	trisc = trisc & 0xF7;
00CC  30F7  	MOVLW 0xF7
00CD  1683  	BSF STATUS, RP0
00CE  1303  	BCF STATUS, RP1
00CF  0507  	ANDWF gbl_trisc, W
00D0  0087  	MOVWF gbl_trisc

	if ((1))
		portc = (portc & 0xF7) | 0x08;
00D1  30F7  	MOVLW 0xF7
00D2  1283  	BCF STATUS, RP0
00D3  0507  	ANDWF gbl_portc, W
00D4  00CA  	MOVWF CompTempVar2188
00D5  3008  	MOVLW 0x08
00D6  044A  	IORWF CompTempVar2188, W
00D7  0087  	MOVWF gbl_portc

	else
		portc = portc & 0xF7;

	//Delay
	//Delay: 10 ms
	delay_ms(10);
00D8  300A  	MOVLW 0x0A
00D9  00CC  	MOVWF delay_ms_00000_arg_del
00DA  2010  	CALL delay_ms_00000


	//Input
	//Input: C0 -> col1
	trisc = trisc | 0x01;
00DB  3001  	MOVLW 0x01
00DC  1683  	BSF STATUS, RP0
00DD  0407  	IORWF gbl_trisc, W
00DE  0087  	MOVWF gbl_trisc

	FCV_COL1 = ((portc & 0x01) == 0x01);
00DF  3001  	MOVLW 0x01
00E0  1283  	BCF STATUS, RP0
00E1  0507  	ANDWF gbl_portc, W
00E2  00CA  	MOVWF CompTempVar2189
00E3  01CB  	CLRF CompTempVar2190
00E4  034A  	DECF CompTempVar2189, W
00E5  1903  	BTFSC STATUS,Z
00E6  0ACB  	INCF CompTempVar2190, F
00E7  1042  	BCF gbl_FCV_COL1,0
00E8  084B  	MOVF CompTempVar2190, W
00E9  1D03  	BTFSS STATUS,Z
00EA  1442  	BSF gbl_FCV_COL1,0


	//Input
	//Input: C1 -> col2
	trisc = trisc | 0x02;
00EB  3002  	MOVLW 0x02
00EC  1683  	BSF STATUS, RP0
00ED  0407  	IORWF gbl_trisc, W
00EE  0087  	MOVWF gbl_trisc

	FCV_COL2 = ((portc & 0x02) == 0x02);
00EF  3002  	MOVLW 0x02
00F0  1283  	BCF STATUS, RP0
00F1  0507  	ANDWF gbl_portc, W
00F2  00CA  	MOVWF CompTempVar2191
00F3  01CB  	CLRF CompTempVar2192
00F4  3002  	MOVLW 0x02
00F5  024A  	SUBWF CompTempVar2191, W
00F6  1903  	BTFSC STATUS,Z
00F7  0ACB  	INCF CompTempVar2192, F
00F8  10C2  	BCF gbl_FCV_COL2,1
00F9  084B  	MOVF CompTempVar2192, W
00FA  1D03  	BTFSS STATUS,Z
00FB  14C2  	BSF gbl_FCV_COL2,1


	//Input
	//Input: C2 -> col3
	trisc = trisc | 0x04;
00FC  3004  	MOVLW 0x04
00FD  1683  	BSF STATUS, RP0
00FE  0407  	IORWF gbl_trisc, W
00FF  0087  	MOVWF gbl_trisc

	FCV_COL3 = ((portc & 0x04) == 0x04);
0100  3004  	MOVLW 0x04
0101  1283  	BCF STATUS, RP0
0102  0507  	ANDWF gbl_portc, W
0103  00CA  	MOVWF CompTempVar2193
0104  01CB  	CLRF CompTempVar2194
0105  3004  	MOVLW 0x04
0106  024A  	SUBWF CompTempVar2193, W
0107  1903  	BTFSC STATUS,Z
0108  0ACB  	INCF CompTempVar2194, F
0109  1142  	BCF gbl_FCV_COL3,2
010A  084B  	MOVF CompTempVar2194, W
010B  1D03  	BTFSS STATUS,Z
010C  1542  	BSF gbl_FCV_COL3,2


	//Delay
	//Delay: 10 ms
	delay_ms(10);
010D  300A  	MOVLW 0x0A
010E  00CC  	MOVWF delay_ms_00000_arg_del
010F  2010  	CALL delay_ms_00000


	//row1
	//Output: 0 -> C3
	trisc = trisc & 0xF7;
0110  30F7  	MOVLW 0xF7
0111  1683  	BSF STATUS, RP0
0112  0507  	ANDWF gbl_trisc, W
0113  0087  	MOVWF gbl_trisc

	if ((0))
		portc = (portc & 0xF7) | 0x08;
	else
		portc = portc & 0xF7;
0114  30F7  	MOVLW 0xF7
0115  1283  	BCF STATUS, RP0
0116  0507  	ANDWF gbl_portc, W
0117  0087  	MOVWF gbl_portc


}
0118  0008  	RETURN



void FCM_scan_row2()

{

	//row2
	//Output: 1 -> C4
	trisc = trisc & 0xEF;
0074  30EF  	MOVLW 0xEF
0075  1683  	BSF STATUS, RP0
0076  1303  	BCF STATUS, RP1
0077  0507  	ANDWF gbl_trisc, W
0078  0087  	MOVWF gbl_trisc

	if ((1))
		portc = (portc & 0xEF) | 0x10;
0079  30EF  	MOVLW 0xEF
007A  1283  	BCF STATUS, RP0
007B  0507  	ANDWF gbl_portc, W
007C  00CC  	MOVWF CompTempVar2195
007D  3010  	MOVLW 0x10
007E  044C  	IORWF CompTempVar2195, W
007F  0087  	MOVWF gbl_portc

	else
		portc = portc & 0xEF;

	//row1
	//Output: 1 -> C3
	trisc = trisc & 0xF7;
0080  30F7  	MOVLW 0xF7
0081  1683  	BSF STATUS, RP0
0082  0507  	ANDWF gbl_trisc, W
0083  0087  	MOVWF gbl_trisc

	if ((1))
		portc = (portc & 0xF7) | 0x08;
0084  30F7  	MOVLW 0xF7
0085  1283  	BCF STATUS, RP0
0086  0507  	ANDWF gbl_portc, W
0087  00CC  	MOVWF CompTempVar2196
0088  3008  	MOVLW 0x08
0089  044C  	IORWF CompTempVar2196, W
008A  0087  	MOVWF gbl_portc

	else
		portc = portc & 0xF7;

	//Delay
	//Delay: 10 ms
	delay_ms(10);
008B  300A  	MOVLW 0x0A
008C  00CC  	MOVWF delay_ms_00000_arg_del
008D  2010  	CALL delay_ms_00000


	//Input
	//Input: C0 -> col1
	trisc = trisc | 0x01;
008E  3001  	MOVLW 0x01
008F  1683  	BSF STATUS, RP0
0090  0407  	IORWF gbl_trisc, W
0091  0087  	MOVWF gbl_trisc

	FCV_COL1 = ((portc & 0x01) == 0x01);
0092  3001  	MOVLW 0x01
0093  1283  	BCF STATUS, RP0
0094  0507  	ANDWF gbl_portc, W
0095  00CC  	MOVWF CompTempVar2197
0096  01CD  	CLRF CompTempVar2198
0097  034C  	DECF CompTempVar2197, W
0098  1903  	BTFSC STATUS,Z
0099  0ACD  	INCF CompTempVar2198, F
009A  1042  	BCF gbl_FCV_COL1,0
009B  084D  	MOVF CompTempVar2198, W
009C  1D03  	BTFSS STATUS,Z
009D  1442  	BSF gbl_FCV_COL1,0


	//Input
	//Input: C1 -> col2
	trisc = trisc | 0x02;
009E  3002  	MOVLW 0x02
009F  1683  	BSF STATUS, RP0
00A0  0407  	IORWF gbl_trisc, W
00A1  0087  	MOVWF gbl_trisc

	FCV_COL2 = ((portc & 0x02) == 0x02);
00A2  3002  	MOVLW 0x02
00A3  1283  	BCF STATUS, RP0
00A4  0507  	ANDWF gbl_portc, W
00A5  00CC  	MOVWF CompTempVar2199
00A6  01CD  	CLRF CompTempVar2200
00A7  3002  	MOVLW 0x02
00A8  024C  	SUBWF CompTempVar2199, W
00A9  1903  	BTFSC STATUS,Z
00AA  0ACD  	INCF CompTempVar2200, F
00AB  10C2  	BCF gbl_FCV_COL2,1
00AC  084D  	MOVF CompTempVar2200, W
00AD  1D03  	BTFSS STATUS,Z
00AE  14C2  	BSF gbl_FCV_COL2,1


	//Input
	//Input: C2 -> col3
	trisc = trisc | 0x04;
00AF  3004  	MOVLW 0x04
00B0  1683  	BSF STATUS, RP0
00B1  0407  	IORWF gbl_trisc, W
00B2  0087  	MOVWF gbl_trisc

	FCV_COL3 = ((portc & 0x04) == 0x04);
00B3  3004  	MOVLW 0x04
00B4  1283  	BCF STATUS, RP0
00B5  0507  	ANDWF gbl_portc, W
00B6  00CC  	MOVWF CompTempVar2201
00B7  01CD  	CLRF CompTempVar2202
00B8  3004  	MOVLW 0x04
00B9  024C  	SUBWF CompTempVar2201, W
00BA  1903  	BTFSC STATUS,Z
00BB  0ACD  	INCF CompTempVar2202, F
00BC  1142  	BCF gbl_FCV_COL3,2
00BD  084D  	MOVF CompTempVar2202, W
00BE  1D03  	BTFSS STATUS,Z
00BF  1542  	BSF gbl_FCV_COL3,2


	//Delay
	//Delay: 10 ms
	delay_ms(10);
00C0  300A  	MOVLW 0x0A
00C1  00CC  	MOVWF delay_ms_00000_arg_del
00C2  2010  	CALL delay_ms_00000


	//row2
	//Output: 0 -> C4
	trisc = trisc & 0xEF;
00C3  30EF  	MOVLW 0xEF
00C4  1683  	BSF STATUS, RP0
00C5  0507  	ANDWF gbl_trisc, W
00C6  0087  	MOVWF gbl_trisc

	if ((0))
		portc = (portc & 0xEF) | 0x10;
	else
		portc = portc & 0xEF;
00C7  30EF  	MOVLW 0xEF
00C8  1283  	BCF STATUS, RP0
00C9  0507  	ANDWF gbl_portc, W
00CA  0087  	MOVWF gbl_portc


}
00CB  0008  	RETURN



void FCM_scan_row3()

{

	//row3
	//Output: 1 -> C5
	trisc = trisc & 0xDF;
001C  30DF  	MOVLW 0xDF
001D  1683  	BSF STATUS, RP0
001E  1303  	BCF STATUS, RP1
001F  0507  	ANDWF gbl_trisc, W
0020  0087  	MOVWF gbl_trisc

	if ((1))
		portc = (portc & 0xDF) | 0x20;
0021  30DF  	MOVLW 0xDF
0022  1283  	BCF STATUS, RP0
0023  0507  	ANDWF gbl_portc, W
0024  00CC  	MOVWF CompTempVar2203
0025  3020  	MOVLW 0x20
0026  044C  	IORWF CompTempVar2203, W
0027  0087  	MOVWF gbl_portc

	else
		portc = portc & 0xDF;

	//row1
	//Output: 1 -> C3
	trisc = trisc & 0xF7;
0028  30F7  	MOVLW 0xF7
0029  1683  	BSF STATUS, RP0
002A  0507  	ANDWF gbl_trisc, W
002B  0087  	MOVWF gbl_trisc

	if ((1))
		portc = (portc & 0xF7) | 0x08;
002C  30F7  	MOVLW 0xF7
002D  1283  	BCF STATUS, RP0
002E  0507  	ANDWF gbl_portc, W
002F  00CC  	MOVWF CompTempVar2204
0030  3008  	MOVLW 0x08
0031  044C  	IORWF CompTempVar2204, W
0032  0087  	MOVWF gbl_portc

	else
		portc = portc & 0xF7;

	//Delay
	//Delay: 10 ms
	delay_ms(10);
0033  300A  	MOVLW 0x0A
0034  00CC  	MOVWF delay_ms_00000_arg_del
0035  2010  	CALL delay_ms_00000


	//Input
	//Input: C0 -> col1
	trisc = trisc | 0x01;
0036  3001  	MOVLW 0x01
0037  1683  	BSF STATUS, RP0
0038  0407  	IORWF gbl_trisc, W
0039  0087  	MOVWF gbl_trisc

	FCV_COL1 = ((portc & 0x01) == 0x01);
003A  3001  	MOVLW 0x01
003B  1283  	BCF STATUS, RP0
003C  0507  	ANDWF gbl_portc, W
003D  00CC  	MOVWF CompTempVar2205
003E  01CD  	CLRF CompTempVar2206
003F  034C  	DECF CompTempVar2205, W
0040  1903  	BTFSC STATUS,Z
0041  0ACD  	INCF CompTempVar2206, F
0042  1042  	BCF gbl_FCV_COL1,0
0043  084D  	MOVF CompTempVar2206, W
0044  1D03  	BTFSS STATUS,Z
0045  1442  	BSF gbl_FCV_COL1,0


	//Input
	//Input: C1 -> col2
	trisc = trisc | 0x02;
0046  3002  	MOVLW 0x02
0047  1683  	BSF STATUS, RP0
0048  0407  	IORWF gbl_trisc, W
0049  0087  	MOVWF gbl_trisc

	FCV_COL2 = ((portc & 0x02) == 0x02);
004A  3002  	MOVLW 0x02
004B  1283  	BCF STATUS, RP0
004C  0507  	ANDWF gbl_portc, W
004D  00CC  	MOVWF CompTempVar2207
004E  01CD  	CLRF CompTempVar2208
004F  3002  	MOVLW 0x02
0050  024C  	SUBWF CompTempVar2207, W
0051  1903  	BTFSC STATUS,Z
0052  0ACD  	INCF CompTempVar2208, F
0053  10C2  	BCF gbl_FCV_COL2,1
0054  084D  	MOVF CompTempVar2208, W
0055  1D03  	BTFSS STATUS,Z
0056  14C2  	BSF gbl_FCV_COL2,1


	//Input
	//Input: C2 -> col3
	trisc = trisc | 0x04;
0057  3004  	MOVLW 0x04
0058  1683  	BSF STATUS, RP0
0059  0407  	IORWF gbl_trisc, W
005A  0087  	MOVWF gbl_trisc

	FCV_COL3 = ((portc & 0x04) == 0x04);
005B  3004  	MOVLW 0x04
005C  1283  	BCF STATUS, RP0
005D  0507  	ANDWF gbl_portc, W
005E  00CC  	MOVWF CompTempVar2209
005F  01CD  	CLRF CompTempVar2210
0060  3004  	MOVLW 0x04
0061  024C  	SUBWF CompTempVar2209, W
0062  1903  	BTFSC STATUS,Z
0063  0ACD  	INCF CompTempVar2210, F
0064  1142  	BCF gbl_FCV_COL3,2
0065  084D  	MOVF CompTempVar2210, W
0066  1D03  	BTFSS STATUS,Z
0067  1542  	BSF gbl_FCV_COL3,2


	//Delay
	//Delay: 10 ms
	delay_ms(10);
0068  300A  	MOVLW 0x0A
0069  00CC  	MOVWF delay_ms_00000_arg_del
006A  2010  	CALL delay_ms_00000


	//row3
	//Output: 0 -> C5
	trisc = trisc & 0xDF;
006B  30DF  	MOVLW 0xDF
006C  1683  	BSF STATUS, RP0
006D  0507  	ANDWF gbl_trisc, W
006E  0087  	MOVWF gbl_trisc

	if ((0))
		portc = (portc & 0xDF) | 0x20;
	else
		portc = portc & 0xDF;
006F  30DF  	MOVLW 0xDF
0070  1283  	BCF STATUS, RP0
0071  0507  	ANDWF gbl_portc, W
0072  0087  	MOVWF gbl_portc


}
0073  0008  	RETURN




void main()

{
	//Initialization
	ansel = 0;
0131  1283  	BCF STATUS, RP0
0132  1703  	BSF STATUS, RP1
0133  019E  	CLRF gbl_ansel

anselh = 0;
0134  019F  	CLRF gbl_anselh



	//Interrupt initialization code
	option_reg = 0xC0;
0135  30C0  	MOVLW 0xC0
0136  1683  	BSF STATUS, RP0
0137  1303  	BCF STATUS, RP1
0138  0081  	MOVWF gbl_option_reg



	//Calculation
	//Calculation:
	//  col1 = 0
	//  col2 = 0
	//  col3 = 0
	//  error = 0
	FCV_COL1 = 0;
0139  1283  	BCF STATUS, RP0
013A  1042  	BCF gbl_FCV_COL1,0

	FCV_COL2 = 0;
013B  10C2  	BCF gbl_FCV_COL2,1

	FCV_COL3 = 0;
013C  1142  	BCF gbl_FCV_COL3,2

	FCV_ERROR = 0;
013D  01C5  	CLRF gbl_FCV_ERROR


	//Loop
	//Loop: While 1
	while (1)
013E        label3
01BC  293E  	GOTO	label3

	{

		//Calculation
		//Calculation:
		//  check = 0
		FCV_CHECK = 0;
013E  01C3  	CLRF gbl_FCV_CHECK


		//Call Macro
		//Call Macro: scan_row1()
		FCM_scan_row1();
013F  20CC  	CALL FCM_scan_r_00051


		//Decision
		//Decision: col1 = 1 OR col2 = 1 OR col3 = 1?
		if (FCV_COL1 == 1 | FCV_COL2 == 1 | FCV_COL3 == 1)
0140  01C9  	CLRF CompTempVar2214
0141  1842  	BTFSC gbl_FCV_COL1,0
0142  0AC9  	INCF CompTempVar2214, F
0143  01C7  	CLRF CompTempVar2211
0144  18C2  	BTFSC gbl_FCV_COL2,1
0145  0AC7  	INCF CompTempVar2211, F
0146  0847  	MOVF CompTempVar2211, W
0147  04C9  	IORWF CompTempVar2214, F
0148  01C8  	CLRF CompTempVar2213
0149  1942  	BTFSC gbl_FCV_COL3,2
014A  0AC8  	INCF CompTempVar2213, F
014B  0848  	MOVF CompTempVar2213, W
014C  0449  	IORWF CompTempVar2214, W
014D  1903  	BTFSC STATUS,Z
014E  295C  	GOTO	label4
015C        label4

		{

			//Call Component Macro
			//Call Component Macro: LEDOn()
			FCD_LED0_LEDOn();
014F  212B  	CALL FCD_LED0_L_00054


			//Output
			//Output: 1 -> C7
			trisc = trisc & 0x7F;
0150  307F  	MOVLW 0x7F
0151  1683  	BSF STATUS, RP0
0152  0507  	ANDWF gbl_trisc, W
0153  0087  	MOVWF gbl_trisc

			if ((1))
				portc = (portc & 0x7F) | 0x80;
0154  307F  	MOVLW 0x7F
0155  1283  	BCF STATUS, RP0
0156  0507  	ANDWF gbl_portc, W
0157  00CA  	MOVWF CompTempVar2215
0158  3080  	MOVLW 0x80
0159  044A  	IORWF CompTempVar2215, W
015A  0087  	MOVWF gbl_portc

			else
				portc = portc & 0x7F;

		} else {
015B  293E  	GOTO	label3


			//Call Macro
			//Call Macro: scan_row2()
			FCM_scan_row2();
015C  2074  	CALL FCM_scan_r_00052


			//Decision
			//Decision: col1 = 1 OR col3 = 1?
			if (FCV_COL1 == 1 | FCV_COL3 == 1)
015D  01CB  	CLRF CompTempVar2217
015E  1842  	BTFSC gbl_FCV_COL1,0
015F  0ACB  	INCF CompTempVar2217, F
0160  01CA  	CLRF CompTempVar2216
0161  1942  	BTFSC gbl_FCV_COL3,2
0162  0ACA  	INCF CompTempVar2216, F
0163  084A  	MOVF CompTempVar2216, W
0164  044B  	IORWF CompTempVar2217, W
0165  1903  	BTFSC STATUS,Z
0166  2974  	GOTO	label5
0174        label5

			{

				//Call Component Macro
				//Call Component Macro: LEDOn()
				FCD_LED0_LEDOn();
0167  212B  	CALL FCD_LED0_L_00054


				//Output
				//Output: 1 -> C7
				trisc = trisc & 0x7F;
0168  307F  	MOVLW 0x7F
0169  1683  	BSF STATUS, RP0
016A  0507  	ANDWF gbl_trisc, W
016B  0087  	MOVWF gbl_trisc

				if ((1))
					portc = (portc & 0x7F) | 0x80;
016C  307F  	MOVLW 0x7F
016D  1283  	BCF STATUS, RP0
016E  0507  	ANDWF gbl_portc, W
016F  00CC  	MOVWF CompTempVar2218
0170  3080  	MOVLW 0x80
0171  044C  	IORWF CompTempVar2218, W
0172  0087  	MOVWF gbl_portc

				else
					portc = portc & 0x7F;

			} else {
0173  293E  	GOTO	label3


				//Decision
				//Decision: col2 = 1?
				if (FCV_COL2 == 1)
0174  1CC2  	BTFSS gbl_FCV_COL2,1
0175  2979  	GOTO	label6
0179        label6

				{

					//Calculation
					//Calculation:
					//  check = check + 1
					FCV_CHECK = FCV_CHECK + 1;
0176  0A43  	INCF gbl_FCV_CHECK, W
0177  00C3  	MOVWF gbl_FCV_CHECK


				} else {
0178  297A  	GOTO	label7
017A        label7


					//Calculation
					//Calculation:
					//  check = 0
					FCV_CHECK = 0;
0179  01C3  	CLRF gbl_FCV_CHECK


				}

				//Call Macro
				//Call Macro: scan_row3()
				FCM_scan_row3();
017A  201C  	CALL FCM_scan_r_00053


				//Decision
				//Decision: col2 = 1?
				if (FCV_COL2 == 1)
017B  1CC2  	BTFSS gbl_FCV_COL2,1
017C  298A  	GOTO	label8
018A        label8

				{

					//Call Component Macro
					//Call Component Macro: LEDOn()
					FCD_LED0_LEDOn();
017D  212B  	CALL FCD_LED0_L_00054


					//Output
					//Output: 1 -> C7
					trisc = trisc & 0x7F;
017E  307F  	MOVLW 0x7F
017F  1683  	BSF STATUS, RP0
0180  0507  	ANDWF gbl_trisc, W
0181  0087  	MOVWF gbl_trisc

					if ((1))
						portc = (portc & 0x7F) | 0x80;
0182  307F  	MOVLW 0x7F
0183  1283  	BCF STATUS, RP0
0184  0507  	ANDWF gbl_portc, W
0185  00CC  	MOVWF CompTempVar2219
0186  3080  	MOVLW 0x80
0187  044C  	IORWF CompTempVar2219, W
0188  0087  	MOVWF gbl_portc

					else
						portc = portc & 0x7F;

				} else {
0189  293E  	GOTO	label3


					//Decision
					//Decision: col1 = 1 AND col3 = 1?
					if (FCV_COL1 == 1 & FCV_COL3 == 1)
018A  01CD  	CLRF CompTempVar2221
018B  1842  	BTFSC gbl_FCV_COL1,0
018C  0ACD  	INCF CompTempVar2221, F
018D  01CC  	CLRF CompTempVar2220
018E  1942  	BTFSC gbl_FCV_COL3,2
018F  0ACC  	INCF CompTempVar2220, F
0190  084C  	MOVF CompTempVar2220, W
0191  054D  	ANDWF CompTempVar2221, W
0192  1903  	BTFSC STATUS,Z
0193  2998  	GOTO	label9
0198        label9

					{

						//Calculation
						//Calculation:
						//  check = check + 2
						FCV_CHECK = FCV_CHECK + 2;
0194  3002  	MOVLW 0x02
0195  0743  	ADDWF gbl_FCV_CHECK, W
0196  00C3  	MOVWF gbl_FCV_CHECK


					} else {
0197  2999  	GOTO	label10
0199        label10


						//Calculation
						//Calculation:
						//  check = 0
						FCV_CHECK = 0;
0198  01C3  	CLRF gbl_FCV_CHECK


					}

					//Call Component Macro
					//Call Component Macro: LEDOff()
					FCD_LED0_LEDOff();
0199  2125  	CALL FCD_LED0_L_00055


					//Output
					//Output: 0 -> C7
					trisc = trisc & 0x7F;
019A  307F  	MOVLW 0x7F
019B  1683  	BSF STATUS, RP0
019C  0507  	ANDWF gbl_trisc, W
019D  0087  	MOVWF gbl_trisc

					if ((0))
						portc = (portc & 0x7F) | 0x80;
					else
						portc = portc & 0x7F;
019E  307F  	MOVLW 0x7F
019F  1283  	BCF STATUS, RP0
01A0  0507  	ANDWF gbl_portc, W
01A1  0087  	MOVWF gbl_portc


					//Decision
					//Decision: check = 3?
					if (FCV_CHECK == 3)
01A2  0843  	MOVF gbl_FCV_CHECK, W
01A3  3A03  	XORLW 0x03
01A4  1D03  	BTFSS STATUS,Z
01A5  29B3  	GOTO	label11
01B3        label11

					{

						//Call Component Macro
						//Call Component Macro: LEDOn()
						FCD_LED1_LEDOn();
01A6  211F  	CALL FCD_LED1_L_00056


						//Output
						//Output: 1 -> C6
						trisc = trisc & 0xBF;
01A7  30BF  	MOVLW 0xBF
01A8  1683  	BSF STATUS, RP0
01A9  0507  	ANDWF gbl_trisc, W
01AA  0087  	MOVWF gbl_trisc

						if ((1))
							portc = (portc & 0xBF) | 0x40;
01AB  30BF  	MOVLW 0xBF
01AC  1283  	BCF STATUS, RP0
01AD  0507  	ANDWF gbl_portc, W
01AE  00CE  	MOVWF CompTempVar2222
01AF  3040  	MOVLW 0x40
01B0  044E  	IORWF CompTempVar2222, W
01B1  0087  	MOVWF gbl_portc

						else
							portc = portc & 0xBF;

					} else {
01B2  293E  	GOTO	label3


						//Call Component Macro
						//Call Component Macro: LEDOff()
						FCD_LED1_LEDOff();
01B3  2119  	CALL FCD_LED1_L_00057


						//Output
						//Output: 0 -> C6
						trisc = trisc & 0xBF;
01B4  30BF  	MOVLW 0xBF
01B5  1683  	BSF STATUS, RP0
01B6  0507  	ANDWF gbl_trisc, W
01B7  0087  	MOVWF gbl_trisc

						if ((0))
							portc = (portc & 0xBF) | 0x40;
						else
							portc = portc & 0xBF;
01B8  30BF  	MOVLW 0xBF
01B9  1283  	BCF STATUS, RP0
01BA  0507  	ANDWF gbl_portc, W
01BB  0087  	MOVWF gbl_portc


					}

				}

			}

		}


	}

	mainendloop: goto mainendloop;
}


void MX_INTERRUPT_MACRO(void)

{
}
01F0  1283  	BCF STATUS, RP0
01F1  1303  	BCF STATUS, RP1
01F2  0E36  	SWAPF Int1BContext+D'2', W
01F3  0084  	MOVWF FSR
01F4  0E35  	SWAPF Int1BContext+D'1', W
01F5  008A  	MOVWF PCLATH
01F6  0E34  	SWAPF Int1BContext, W
01F7  0083  	MOVWF STATUS
01F8  0EFF  	SWAPF Int1Context, F
01F9  0E7F  	SWAPF Int1Context, W
01FA  0009  	RETFIE





////////////////////////////////////////
// Code with no source :-)
////////////////////////////////////////
0000  29BD  	GOTO	_startup

0004  00FF  	MOVWF Int1Context
0005  0E03  	SWAPF STATUS, W
0006  1283  	BCF STATUS, RP0
0007  1303  	BCF STATUS, RP1
0008  00B4  	MOVWF Int1BContext
0009  0E0A  	SWAPF PCLATH, W
000A  00B5  	MOVWF Int1BContext+D'1'
000B  0E04  	SWAPF FSR, W
000C  00B6  	MOVWF Int1BContext+D'2'
000D  118A  	BCF PCLATH,3
000E  120A  	BCF PCLATH,4
000F  29F0  	GOTO	interrupt
0010        delay_ms_00000
0010        ; { delay_ms ; function begin
0010  08CC  	MOVF delay_ms_00000_arg_del, F
0011  1D03  	BTFSS STATUS,Z
0012  2814  	GOTO	label1
0013  0008  	RETURN
0014        label1
0014  30F9  	MOVLW 0xF9
0015        label2
0015  3EFF  	ADDLW 0xFF
0016  1D03  	BTFSS STATUS,Z
0017  2815  	GOTO	label2
0018  0000  	NOP
0019  0BCC  	DECFSZ delay_ms_00000_arg_del, F
001A  2814  	GOTO	label1
001B  0008  	RETURN
001C        ; } delay_ms function end


01BD        _startup
01BD  30D5  	MOVLW 0xD5
01BE  1283  	BCF STATUS, RP0
01BF  1303  	BCF STATUS, RP1
01C0  00A0  	MOVWF gbl_14_LSR
01C1  30C4  	MOVLW 0xC4
01C2  00A1  	MOVWF gbl_14_LSR+D'1'
01C3  30BB  	MOVLW 0xBB
01C4  00A2  	MOVWF gbl_14_LSR+D'2'
01C5  30DC  	MOVLW 0xDC
01C6  00A3  	MOVWF gbl_14_LSR+D'3'
01C7  01A4  	CLRF gbl_15_gbl_aSig
01C8  01A5  	CLRF gbl_15_gbl_aSig+D'1'
01C9  01A6  	CLRF gbl_15_gbl_aSig+D'2'
01CA  01A7  	CLRF gbl_15_gbl_aSig+D'3'
01CB  01A8  	CLRF gbl_15_gbl_bSig
01CC  01A9  	CLRF gbl_15_gbl_bSig+D'1'
01CD  01AA  	CLRF gbl_15_gbl_bSig+D'2'
01CE  01AB  	CLRF gbl_15_gbl_bSig+D'3'
01CF  01AC  	CLRF gbl_15_gbl_zSig
01D0  01AD  	CLRF gbl_15_gbl_zSig+D'1'
01D1  01AE  	CLRF gbl_15_gbl_zSig+D'2'
01D2  01AF  	CLRF gbl_15_gbl_zSig+D'3'
01D3  01BC  	CLRF gbl_15_gbl_aExp
01D4  01BD  	CLRF gbl_15_gbl_bExp
01D5  01B7  	CLRF gbl_15_gbl_zExp
01D6  01B8  	CLRF gbl_15_gbl_zExp+D'1'
01D7  01BE  	CLRF gbl_15_gbl_aSign
01D8  01BF  	CLRF gbl_15_gbl_bSign
01D9  01C0  	CLRF gbl_15_gbl_zSign
01DA  01C1  	CLRF gbl_15_gbl_zSigZero
01DB  01B0  	CLRF gbl_15_gbl_ret
01DC  01B1  	CLRF gbl_15_gbl_ret+D'1'
01DD  01B2  	CLRF gbl_15_gbl_ret+D'2'
01DE  01B3  	CLRF gbl_15_gbl_ret+D'3'
01DF  01BA  	CLRF gbl_float_rounding_mode
01E0  01BB  	CLRF gbl_float_exception_flags
01E1  01B9  	CLRF gbl_float_detect_tininess

01ED  118A  	BCF PCLATH,3
01EE  120A  	BCF PCLATH,4
01EF  2931  	GOTO	main

2007  30D4  	DW 0x30D4
