;/////////////////////////////////////////////////////////////////////////////////
;// Code Generator: BoostC Compiler - http://www.sourceboost.com
;// Version       : 7.03
;// License Type  : Pro License
;// Limitations   : PIC12,PIC16 max code size:Unlimited, max RAM banks:Unlimited
;/////////////////////////////////////////////////////////////////////////////////

//************************************************************************************
//**  
//**  File name:     D:\KennyNeutronsInnovations\AC\FlowCode\Equipment4.c
//**  Title:         
//**  Description:   
//**  
//**  Generated by:  Flowcode v5.2.0.0
//**  Date:          Tuesday, February 26, 2019 04:38:50
//**  Licence:       Professional
//**  Registered to: xyz
//**  Licence key:   WUK7B9
//**  
//**  
//**  http://www.matrixmultimedia.com
//**  
//************************************************************************************


#define MX_PIC

#define MX_USES_UINT8 1
#define MX_USES_SINT16 0
#define MX_USES_CHAR 0
#define MX_USES_FLOAT 0
#define MX_USES_SINT32 0
#define MX_USES_BOOL 1
#define MX_USES_UINT16 0
#define MX_USES_UINT32 0
//Defines for microcontroller
#define P16F690
#define FC_CAL_PIC
#define MX_ADC
#define MX_ADC_TYPE_3
#define MX_ADC_BITS_10
#define MX_EE
#define MX_EE_TYPE2
#define MX_EE_SIZE 256
#define MX_SPI_1
#define MX_SPI_1_MISO_PORT portb
#define MX_SPI_1_MISO_TRIS trisb
#define MX_SPI_1_MISO_PIN 4
#define MX_SPI_1_MOSI_PORT portc
#define MX_SPI_1_MOSI_TRIS trisc
#define MX_SPI_1_MOSI_PIN 7
#define MX_SPI_1_CLK_PORT portb
#define MX_SPI_1_CLK_TRIS trisb
#define MX_SPI_1_CLK_PIN 6
#define MX_SPI_1_SS_PORT portb
#define MX_SPI_1_SS_TRIS trisb
#define MX_UART_1
#define MX_UART_1_TX_PORT portb
#define MX_UART_1_TX_TRIS trisb
#define MX_UART_1_TX_PIN 7
#define MX_UART_1_RX_PORT portb
#define MX_UART_1_RX_TRIS trisb
#define MX_UART_1_RX_PIN 5
#define MX_I2C
#define MX_MI2C
#define MX_I2C_1
#define MX_I2C_1_SDA_PORT portb
#define MX_I2C_1_SDA_TRIS trisb
#define MX_I2C_1_SDA_PIN 4
#define MX_I2C_1_SCL_PORT portb
#define MX_I2C_1_SCL_TRIS trisb
#define MX_I2C_1_SCL_PIN 6
#define MX_PWM
#define MX_PWM_CNT 1
#define MX_PWM_PSCA1
#define MX_PWM_PSCA4
#define MX_PWM_PSCA16
#define MX_PWM_1_PORT portc
#define MX_PWM_1_TRIS trisc
#define MX_PWM_1_PIN 5

//Functions
#define MX_CLK_SPEED 4000000
#ifdef _BOOSTC
#include <system.h>
#endif
#ifdef HI_TECH_C
#include <pic.h>
#endif

//Configuration data
#ifdef _BOOSTC
#pragma DATA 0x2007, 0x30d4
#endif
#ifdef HI_TECH_C
__CONFIG(0x30d4);
#endif

//Internal functions
#include "C:\Program Files (x86)\Flowcode\v5\FCD\internals.c"

//Macro function declarations
void FCM_scan_row1();
void FCM_scan_row2();
void FCM_scan_row3();


//Variable declarations
#define FCV_FALSE (0)
#define FCV_TRUE (1)
MX_BOOL FCV_COL1 = (0);
01CE  1042  	BCF gbl_FCV_COL1,0

MX_BOOL FCV_COL2 = (0);
01CF  10C2  	BCF gbl_FCV_COL2,1

MX_UINT8 FCV_ERROR = (0x0);
01D0  01C3  	CLRF gbl_FCV_ERROR

MX_UINT8 FCV_TX = (0x0);
01D1  01C4  	CLRF gbl_FCV_TX

MX_BOOL FCV_COL3 = (0);
01D2  1142  	BCF gbl_FCV_COL3,2

MX_UINT8 FCV_CHECK = (0x0);
01D3  01C5  	CLRF gbl_FCV_CHECK

MX_BOOL FCV_ROW1 = (0);
01D4  11C2  	BCF gbl_FCV_ROW1,3

MX_BOOL FCV_ROW2 = (0);
01D5  1242  	BCF gbl_FCV_ROW2,4

MX_BOOL FCV_FLAG = (0);
01D6  12C2  	BCF gbl_FCV_FLAG,5

MX_BOOL FCV_ROW3 = (0);
01D7  1342  	BCF gbl_FCV_ROW3,6

MX_UINT8 FCV_STORE = (0x0);
01D8  01C6  	CLRF gbl_FCV_STORE





//LED(0): //Defines:

/**** Macro Substitutions ****
a = Unique Reference
b = LED Port Letter
c = LED Pin Number
d = LED Active Polarity
******************************/

#define LED_1__LED_PORT		portb
#define LED_1__LED_TRIS		trisb
#define LED_1__LED_PIN		4
#define LED_1__LED_POLE		1




//LED(0): //Macro function declarations

void FCD_LED0_LEDOn();
void FCD_LED0_LEDOff();


//LED(1): //Defines:

/**** Macro Substitutions ****
a = Unique Reference
b = LED Port Letter
c = LED Pin Number
d = LED Active Polarity
******************************/

#define LED_2__LED_PORT		portb
#define LED_2__LED_TRIS		trisb
#define LED_2__LED_PIN		6
#define LED_2__LED_POLE		1




//LED(1): //Macro function declarations

void FCD_LED1_LEDOn();
void FCD_LED1_LEDOff();



//LED(0): //Macro implementations


void FCD_LED0_LEDOn()

{
	
		#if( LED_1__LED_POLE == 1)									//Active high polarity
			FC_CAL_Bit_High_DDR( LED_1__LED_PORT , LED_1__LED_TRIS , LED_1__LED_PIN );
0115  1683  	BSF STATUS, RP0
0116  1303  	BCF STATUS, RP1
0117  1206  	BCF gbl_trisb,4
0118  1283  	BCF STATUS, RP0
0119  1606  	BSF gbl_portb,4

		#else													//Active low polarity
			FC_CAL_Bit_Low_DDR( LED_1__LED_PORT , LED_1__LED_TRIS , LED_1__LED_PIN );
		#endif

}
011A  0008  	RETURN


void FCD_LED0_LEDOff()

{
	
		#if( LED_1__LED_POLE == 1)									//Active high polarity
			FC_CAL_Bit_Low_DDR( LED_1__LED_PORT	, LED_1__LED_TRIS , LED_1__LED_PIN );
010F  1683  	BSF STATUS, RP0
0110  1303  	BCF STATUS, RP1
0111  1206  	BCF gbl_trisb,4
0112  1283  	BCF STATUS, RP0
0113  1206  	BCF gbl_portb,4

		#else													//Active low polarity
			FC_CAL_Bit_High_DDR( LED_1__LED_PORT , LED_1__LED_TRIS , LED_1__LED_PIN );
		#endif

}
0114  0008  	RETURN




//LED(1): //Macro implementations


void FCD_LED1_LEDOn()

{
	
		#if( LED_2__LED_POLE == 1)									//Active high polarity
			FC_CAL_Bit_High_DDR( LED_2__LED_PORT , LED_2__LED_TRIS , LED_2__LED_PIN );
0109  1683  	BSF STATUS, RP0
010A  1303  	BCF STATUS, RP1
010B  1306  	BCF gbl_trisb,6
010C  1283  	BCF STATUS, RP0
010D  1706  	BSF gbl_portb,6

		#else													//Active low polarity
			FC_CAL_Bit_Low_DDR( LED_2__LED_PORT , LED_2__LED_TRIS , LED_2__LED_PIN );
		#endif

}
010E  0008  	RETURN


void FCD_LED1_LEDOff()

{
	
		#if( LED_2__LED_POLE == 1)									//Active high polarity
			FC_CAL_Bit_Low_DDR( LED_2__LED_PORT	, LED_2__LED_TRIS , LED_2__LED_PIN );
0103  1683  	BSF STATUS, RP0
0104  1303  	BCF STATUS, RP1
0105  1306  	BCF gbl_trisb,6
0106  1283  	BCF STATUS, RP0
0107  1306  	BCF gbl_portb,6

		#else													//Active low polarity
			FC_CAL_Bit_High_DDR( LED_2__LED_PORT , LED_2__LED_TRIS , LED_2__LED_PIN );
		#endif

}
0108  0008  	RETURN


#include "C:\Program Files (x86)\Flowcode\v5\CAL\includes.c"

//Macro implementations


void FCM_scan_row1()

{

	//row1
	//Output: 1 -> C3
	trisc = trisc & 0xF7;
00B6  30F7  	MOVLW 0xF7
00B7  1683  	BSF STATUS, RP0
00B8  1303  	BCF STATUS, RP1
00B9  0507  	ANDWF gbl_trisc, W
00BA  0087  	MOVWF gbl_trisc

	if ((1))
		portc = (portc & 0xF7) | 0x08;
00BB  30F7  	MOVLW 0xF7
00BC  1283  	BCF STATUS, RP0
00BD  0507  	ANDWF gbl_portc, W
00BE  00CA  	MOVWF CompTempVar2188
00BF  3008  	MOVLW 0x08
00C0  044A  	IORWF CompTempVar2188, W
00C1  0087  	MOVWF gbl_portc

	else
		portc = portc & 0xF7;

	//Delay
	//Delay: 10 ms
	delay_ms(10);
00C2  300A  	MOVLW 0x0A
00C3  00CE  	MOVWF delay_ms_00000_arg_del
00C4  2010  	CALL delay_ms_00000


	//Input
	//Input: C0 -> col1
	trisc = trisc | 0x01;
00C5  3001  	MOVLW 0x01
00C6  1683  	BSF STATUS, RP0
00C7  0407  	IORWF gbl_trisc, W
00C8  0087  	MOVWF gbl_trisc

	FCV_COL1 = ((portc & 0x01) == 0x01);
00C9  3001  	MOVLW 0x01
00CA  1283  	BCF STATUS, RP0
00CB  0507  	ANDWF gbl_portc, W
00CC  00CA  	MOVWF CompTempVar2189
00CD  01CB  	CLRF CompTempVar2190
00CE  034A  	DECF CompTempVar2189, W
00CF  1903  	BTFSC STATUS,Z
00D0  0ACB  	INCF CompTempVar2190, F
00D1  1042  	BCF gbl_FCV_COL1,0
00D2  084B  	MOVF CompTempVar2190, W
00D3  1D03  	BTFSS STATUS,Z
00D4  1442  	BSF gbl_FCV_COL1,0


	//Input
	//Input: C1 -> col2
	trisc = trisc | 0x02;
00D5  3002  	MOVLW 0x02
00D6  1683  	BSF STATUS, RP0
00D7  0407  	IORWF gbl_trisc, W
00D8  0087  	MOVWF gbl_trisc

	FCV_COL2 = ((portc & 0x02) == 0x02);
00D9  3002  	MOVLW 0x02
00DA  1283  	BCF STATUS, RP0
00DB  0507  	ANDWF gbl_portc, W
00DC  00CA  	MOVWF CompTempVar2191
00DD  01CB  	CLRF CompTempVar2192
00DE  3002  	MOVLW 0x02
00DF  024A  	SUBWF CompTempVar2191, W
00E0  1903  	BTFSC STATUS,Z
00E1  0ACB  	INCF CompTempVar2192, F
00E2  10C2  	BCF gbl_FCV_COL2,1
00E3  084B  	MOVF CompTempVar2192, W
00E4  1D03  	BTFSS STATUS,Z
00E5  14C2  	BSF gbl_FCV_COL2,1


	//Input
	//Input: C2 -> col3
	trisc = trisc | 0x04;
00E6  3004  	MOVLW 0x04
00E7  1683  	BSF STATUS, RP0
00E8  0407  	IORWF gbl_trisc, W
00E9  0087  	MOVWF gbl_trisc

	FCV_COL3 = ((portc & 0x04) == 0x04);
00EA  3004  	MOVLW 0x04
00EB  1283  	BCF STATUS, RP0
00EC  0507  	ANDWF gbl_portc, W
00ED  00CA  	MOVWF CompTempVar2193
00EE  01CB  	CLRF CompTempVar2194
00EF  3004  	MOVLW 0x04
00F0  024A  	SUBWF CompTempVar2193, W
00F1  1903  	BTFSC STATUS,Z
00F2  0ACB  	INCF CompTempVar2194, F
00F3  1142  	BCF gbl_FCV_COL3,2
00F4  084B  	MOVF CompTempVar2194, W
00F5  1D03  	BTFSS STATUS,Z
00F6  1542  	BSF gbl_FCV_COL3,2


	//Delay
	//Delay: 10 ms
	delay_ms(10);
00F7  300A  	MOVLW 0x0A
00F8  00CE  	MOVWF delay_ms_00000_arg_del
00F9  2010  	CALL delay_ms_00000


	//row1
	//Output: 0 -> C3
	trisc = trisc & 0xF7;
00FA  30F7  	MOVLW 0xF7
00FB  1683  	BSF STATUS, RP0
00FC  0507  	ANDWF gbl_trisc, W
00FD  0087  	MOVWF gbl_trisc

	if ((0))
		portc = (portc & 0xF7) | 0x08;
	else
		portc = portc & 0xF7;
00FE  30F7  	MOVLW 0xF7
00FF  1283  	BCF STATUS, RP0
0100  0507  	ANDWF gbl_portc, W
0101  0087  	MOVWF gbl_portc


}
0102  0008  	RETURN



void FCM_scan_row2()

{

	//row2
	//Output: 1 -> C4
	trisc = trisc & 0xEF;
0069  30EF  	MOVLW 0xEF
006A  1683  	BSF STATUS, RP0
006B  1303  	BCF STATUS, RP1
006C  0507  	ANDWF gbl_trisc, W
006D  0087  	MOVWF gbl_trisc

	if ((1))
		portc = (portc & 0xEF) | 0x10;
006E  30EF  	MOVLW 0xEF
006F  1283  	BCF STATUS, RP0
0070  0507  	ANDWF gbl_portc, W
0071  00CC  	MOVWF CompTempVar2195
0072  3010  	MOVLW 0x10
0073  044C  	IORWF CompTempVar2195, W
0074  0087  	MOVWF gbl_portc

	else
		portc = portc & 0xEF;

	//Delay
	//Delay: 10 ms
	delay_ms(10);
0075  300A  	MOVLW 0x0A
0076  00CE  	MOVWF delay_ms_00000_arg_del
0077  2010  	CALL delay_ms_00000


	//Input
	//Input: C0 -> col1
	trisc = trisc | 0x01;
0078  3001  	MOVLW 0x01
0079  1683  	BSF STATUS, RP0
007A  0407  	IORWF gbl_trisc, W
007B  0087  	MOVWF gbl_trisc

	FCV_COL1 = ((portc & 0x01) == 0x01);
007C  3001  	MOVLW 0x01
007D  1283  	BCF STATUS, RP0
007E  0507  	ANDWF gbl_portc, W
007F  00CC  	MOVWF CompTempVar2196
0080  01CD  	CLRF CompTempVar2197
0081  034C  	DECF CompTempVar2196, W
0082  1903  	BTFSC STATUS,Z
0083  0ACD  	INCF CompTempVar2197, F
0084  1042  	BCF gbl_FCV_COL1,0
0085  084D  	MOVF CompTempVar2197, W
0086  1D03  	BTFSS STATUS,Z
0087  1442  	BSF gbl_FCV_COL1,0


	//Input
	//Input: C1 -> col2
	trisc = trisc | 0x02;
0088  3002  	MOVLW 0x02
0089  1683  	BSF STATUS, RP0
008A  0407  	IORWF gbl_trisc, W
008B  0087  	MOVWF gbl_trisc

	FCV_COL2 = ((portc & 0x02) == 0x02);
008C  3002  	MOVLW 0x02
008D  1283  	BCF STATUS, RP0
008E  0507  	ANDWF gbl_portc, W
008F  00CC  	MOVWF CompTempVar2198
0090  01CD  	CLRF CompTempVar2199
0091  3002  	MOVLW 0x02
0092  024C  	SUBWF CompTempVar2198, W
0093  1903  	BTFSC STATUS,Z
0094  0ACD  	INCF CompTempVar2199, F
0095  10C2  	BCF gbl_FCV_COL2,1
0096  084D  	MOVF CompTempVar2199, W
0097  1D03  	BTFSS STATUS,Z
0098  14C2  	BSF gbl_FCV_COL2,1


	//Input
	//Input: C2 -> col3
	trisc = trisc | 0x04;
0099  3004  	MOVLW 0x04
009A  1683  	BSF STATUS, RP0
009B  0407  	IORWF gbl_trisc, W
009C  0087  	MOVWF gbl_trisc

	FCV_COL3 = ((portc & 0x04) == 0x04);
009D  3004  	MOVLW 0x04
009E  1283  	BCF STATUS, RP0
009F  0507  	ANDWF gbl_portc, W
00A0  00CC  	MOVWF CompTempVar2200
00A1  01CD  	CLRF CompTempVar2201
00A2  3004  	MOVLW 0x04
00A3  024C  	SUBWF CompTempVar2200, W
00A4  1903  	BTFSC STATUS,Z
00A5  0ACD  	INCF CompTempVar2201, F
00A6  1142  	BCF gbl_FCV_COL3,2
00A7  084D  	MOVF CompTempVar2201, W
00A8  1D03  	BTFSS STATUS,Z
00A9  1542  	BSF gbl_FCV_COL3,2


	//Delay
	//Delay: 10 ms
	delay_ms(10);
00AA  300A  	MOVLW 0x0A
00AB  00CE  	MOVWF delay_ms_00000_arg_del
00AC  2010  	CALL delay_ms_00000


	//row2
	//Output: 0 -> C4
	trisc = trisc & 0xEF;
00AD  30EF  	MOVLW 0xEF
00AE  1683  	BSF STATUS, RP0
00AF  0507  	ANDWF gbl_trisc, W
00B0  0087  	MOVWF gbl_trisc

	if ((0))
		portc = (portc & 0xEF) | 0x10;
	else
		portc = portc & 0xEF;
00B1  30EF  	MOVLW 0xEF
00B2  1283  	BCF STATUS, RP0
00B3  0507  	ANDWF gbl_portc, W
00B4  0087  	MOVWF gbl_portc


}
00B5  0008  	RETURN



void FCM_scan_row3()

{

	//row3
	//Output: 1 -> C5
	trisc = trisc & 0xDF;
001C  30DF  	MOVLW 0xDF
001D  1683  	BSF STATUS, RP0
001E  1303  	BCF STATUS, RP1
001F  0507  	ANDWF gbl_trisc, W
0020  0087  	MOVWF gbl_trisc

	if ((1))
		portc = (portc & 0xDF) | 0x20;
0021  30DF  	MOVLW 0xDF
0022  1283  	BCF STATUS, RP0
0023  0507  	ANDWF gbl_portc, W
0024  00CE  	MOVWF CompTempVar2202
0025  3020  	MOVLW 0x20
0026  044E  	IORWF CompTempVar2202, W
0027  0087  	MOVWF gbl_portc

	else
		portc = portc & 0xDF;

	//Delay
	//Delay: 10 ms
	delay_ms(10);
0028  300A  	MOVLW 0x0A
0029  00CE  	MOVWF delay_ms_00000_arg_del
002A  2010  	CALL delay_ms_00000


	//Input
	//Input: C0 -> col1
	trisc = trisc | 0x01;
002B  3001  	MOVLW 0x01
002C  1683  	BSF STATUS, RP0
002D  0407  	IORWF gbl_trisc, W
002E  0087  	MOVWF gbl_trisc

	FCV_COL1 = ((portc & 0x01) == 0x01);
002F  3001  	MOVLW 0x01
0030  1283  	BCF STATUS, RP0
0031  0507  	ANDWF gbl_portc, W
0032  00CE  	MOVWF CompTempVar2203
0033  01CF  	CLRF CompTempVar2204
0034  034E  	DECF CompTempVar2203, W
0035  1903  	BTFSC STATUS,Z
0036  0ACF  	INCF CompTempVar2204, F
0037  1042  	BCF gbl_FCV_COL1,0
0038  084F  	MOVF CompTempVar2204, W
0039  1D03  	BTFSS STATUS,Z
003A  1442  	BSF gbl_FCV_COL1,0


	//Input
	//Input: C1 -> col2
	trisc = trisc | 0x02;
003B  3002  	MOVLW 0x02
003C  1683  	BSF STATUS, RP0
003D  0407  	IORWF gbl_trisc, W
003E  0087  	MOVWF gbl_trisc

	FCV_COL2 = ((portc & 0x02) == 0x02);
003F  3002  	MOVLW 0x02
0040  1283  	BCF STATUS, RP0
0041  0507  	ANDWF gbl_portc, W
0042  00CE  	MOVWF CompTempVar2205
0043  01CF  	CLRF CompTempVar2206
0044  3002  	MOVLW 0x02
0045  024E  	SUBWF CompTempVar2205, W
0046  1903  	BTFSC STATUS,Z
0047  0ACF  	INCF CompTempVar2206, F
0048  10C2  	BCF gbl_FCV_COL2,1
0049  084F  	MOVF CompTempVar2206, W
004A  1D03  	BTFSS STATUS,Z
004B  14C2  	BSF gbl_FCV_COL2,1


	//Input
	//Input: C2 -> col3
	trisc = trisc | 0x04;
004C  3004  	MOVLW 0x04
004D  1683  	BSF STATUS, RP0
004E  0407  	IORWF gbl_trisc, W
004F  0087  	MOVWF gbl_trisc

	FCV_COL3 = ((portc & 0x04) == 0x04);
0050  3004  	MOVLW 0x04
0051  1283  	BCF STATUS, RP0
0052  0507  	ANDWF gbl_portc, W
0053  00CE  	MOVWF CompTempVar2207
0054  01CF  	CLRF CompTempVar2208
0055  3004  	MOVLW 0x04
0056  024E  	SUBWF CompTempVar2207, W
0057  1903  	BTFSC STATUS,Z
0058  0ACF  	INCF CompTempVar2208, F
0059  1142  	BCF gbl_FCV_COL3,2
005A  084F  	MOVF CompTempVar2208, W
005B  1D03  	BTFSS STATUS,Z
005C  1542  	BSF gbl_FCV_COL3,2


	//Delay
	//Delay: 10 ms
	delay_ms(10);
005D  300A  	MOVLW 0x0A
005E  00CE  	MOVWF delay_ms_00000_arg_del
005F  2010  	CALL delay_ms_00000


	//row3
	//Output: 0 -> C5
	trisc = trisc & 0xDF;
0060  30DF  	MOVLW 0xDF
0061  1683  	BSF STATUS, RP0
0062  0507  	ANDWF gbl_trisc, W
0063  0087  	MOVWF gbl_trisc

	if ((0))
		portc = (portc & 0xDF) | 0x20;
	else
		portc = portc & 0xDF;
0064  30DF  	MOVLW 0xDF
0065  1283  	BCF STATUS, RP0
0066  0507  	ANDWF gbl_portc, W
0067  0087  	MOVWF gbl_portc


}
0068  0008  	RETURN




void main()

{
	//Initialization
	ansel = 0;
011B  1283  	BCF STATUS, RP0
011C  1703  	BSF STATUS, RP1
011D  019E  	CLRF gbl_ansel

anselh = 0;
011E  019F  	CLRF gbl_anselh



	//Interrupt initialization code
	option_reg = 0xC0;
011F  30C0  	MOVLW 0xC0
0120  1683  	BSF STATUS, RP0
0121  1303  	BCF STATUS, RP1
0122  0081  	MOVWF gbl_option_reg



	//Calculation
	//Calculation:
	//  col1 = 0
	//  col2 = 0
	//  col3 = 0
	//  error = 0
	FCV_COL1 = 0;
0123  1283  	BCF STATUS, RP0
0124  1042  	BCF gbl_FCV_COL1,0

	FCV_COL2 = 0;
0125  10C2  	BCF gbl_FCV_COL2,1

	FCV_COL3 = 0;
0126  1142  	BCF gbl_FCV_COL3,2

	FCV_ERROR = 0;
0127  01C3  	CLRF gbl_FCV_ERROR


	//Loop
	//Loop: While 1
	while (1)
0128        label3
01A8  2928  	GOTO	label3

	{

		//Calculation
		//Calculation:
		//  check = 0
		FCV_CHECK = 0;
0128  01C5  	CLRF gbl_FCV_CHECK


		//Call Macro
		//Call Macro: scan_row1()
		FCM_scan_row1();
0129  20B6  	CALL FCM_scan_r_00051


		//Decision
		//Decision: col1 = 1 OR col2 = 1 OR col3 = 1?
		if (FCV_COL1 == 1 | FCV_COL2 == 1 | FCV_COL3 == 1)
012A  01C9  	CLRF CompTempVar2212
012B  1842  	BTFSC gbl_FCV_COL1,0
012C  0AC9  	INCF CompTempVar2212, F
012D  01C7  	CLRF CompTempVar2209
012E  18C2  	BTFSC gbl_FCV_COL2,1
012F  0AC7  	INCF CompTempVar2209, F
0130  0847  	MOVF CompTempVar2209, W
0131  04C9  	IORWF CompTempVar2212, F
0132  01C8  	CLRF CompTempVar2211
0133  1942  	BTFSC gbl_FCV_COL3,2
0134  0AC8  	INCF CompTempVar2211, F
0135  0848  	MOVF CompTempVar2211, W
0136  0449  	IORWF CompTempVar2212, W
0137  1903  	BTFSC STATUS,Z
0138  2947  	GOTO	label4
0147        label4

		{

			//Call Component Macro
			//Call Component Macro: LEDOn()
			FCD_LED0_LEDOn();
0139  2115  	CALL FCD_LED0_L_00054


			//Output
			//Output: 1 -> C7
			trisc = trisc & 0x7F;
013A  307F  	MOVLW 0x7F
013B  1683  	BSF STATUS, RP0
013C  0507  	ANDWF gbl_trisc, W
013D  0087  	MOVWF gbl_trisc

			if ((1))
				portc = (portc & 0x7F) | 0x80;
013E  307F  	MOVLW 0x7F
013F  1283  	BCF STATUS, RP0
0140  0507  	ANDWF gbl_portc, W
0141  00CA  	MOVWF CompTempVar2213
0142  3080  	MOVLW 0x80
0143  044A  	IORWF CompTempVar2213, W
0144  0087  	MOVWF gbl_portc

			else
				portc = portc & 0x7F;

			//Calculation
			//Calculation:
			//  check = 0
			FCV_CHECK = 0;
0145  01C5  	CLRF gbl_FCV_CHECK


		} else {
0146  2928  	GOTO	label3


			//Call Macro
			//Call Macro: scan_row2()
			FCM_scan_row2();
0147  2069  	CALL FCM_scan_r_00052


			//Decision
			//Decision: col1 = 1 OR col2 = 1?
			if (FCV_COL1 == 1 | FCV_COL2 == 1)
0148  01CB  	CLRF CompTempVar2215
0149  1842  	BTFSC gbl_FCV_COL1,0
014A  0ACB  	INCF CompTempVar2215, F
014B  01CA  	CLRF CompTempVar2214
014C  18C2  	BTFSC gbl_FCV_COL2,1
014D  0ACA  	INCF CompTempVar2214, F
014E  084A  	MOVF CompTempVar2214, W
014F  044B  	IORWF CompTempVar2215, W
0150  1903  	BTFSC STATUS,Z
0151  2960  	GOTO	label5
0160        label5

			{

				//Call Component Macro
				//Call Component Macro: LEDOn()
				FCD_LED0_LEDOn();
0152  2115  	CALL FCD_LED0_L_00054


				//Output
				//Output: 1 -> C7
				trisc = trisc & 0x7F;
0153  307F  	MOVLW 0x7F
0154  1683  	BSF STATUS, RP0
0155  0507  	ANDWF gbl_trisc, W
0156  0087  	MOVWF gbl_trisc

				if ((1))
					portc = (portc & 0x7F) | 0x80;
0157  307F  	MOVLW 0x7F
0158  1283  	BCF STATUS, RP0
0159  0507  	ANDWF gbl_portc, W
015A  00CC  	MOVWF CompTempVar2216
015B  3080  	MOVLW 0x80
015C  044C  	IORWF CompTempVar2216, W
015D  0087  	MOVWF gbl_portc

				else
					portc = portc & 0x7F;

				//Calculation
				//Calculation:
				//  check = 0
				FCV_CHECK = 0;
015E  01C5  	CLRF gbl_FCV_CHECK


			} else {
015F  2928  	GOTO	label3


				//Decision
				//Decision: col3 = 1?
				if (FCV_COL3 == 1)
0160  1D42  	BTFSS gbl_FCV_COL3,2
0161  2965  	GOTO	label6
0165        label6

				{

					//Calculation
					//Calculation:
					//  check = check + 1
					FCV_CHECK = FCV_CHECK + 1;
0162  0A45  	INCF gbl_FCV_CHECK, W
0163  00C5  	MOVWF gbl_FCV_CHECK


				} else {
0164  2966  	GOTO	label7
0166        label7


					//Calculation
					//Calculation:
					//  check = 0
					FCV_CHECK = 0;
0165  01C5  	CLRF gbl_FCV_CHECK


				}

				//Call Macro
				//Call Macro: scan_row3()
				FCM_scan_row3();
0166  201C  	CALL FCM_scan_r_00053


				//Decision
				//Decision: col1 = 1 OR col3 = 1?
				if (FCV_COL1 == 1 | FCV_COL3 == 1)
0167  01CD  	CLRF CompTempVar2218
0168  1842  	BTFSC gbl_FCV_COL1,0
0169  0ACD  	INCF CompTempVar2218, F
016A  01CC  	CLRF CompTempVar2217
016B  1942  	BTFSC gbl_FCV_COL3,2
016C  0ACC  	INCF CompTempVar2217, F
016D  084C  	MOVF CompTempVar2217, W
016E  044D  	IORWF CompTempVar2218, W
016F  1903  	BTFSC STATUS,Z
0170  297F  	GOTO	label8
017F        label8

				{

					//Call Component Macro
					//Call Component Macro: LEDOn()
					FCD_LED0_LEDOn();
0171  2115  	CALL FCD_LED0_L_00054


					//Output
					//Output: 1 -> C7
					trisc = trisc & 0x7F;
0172  307F  	MOVLW 0x7F
0173  1683  	BSF STATUS, RP0
0174  0507  	ANDWF gbl_trisc, W
0175  0087  	MOVWF gbl_trisc

					if ((1))
						portc = (portc & 0x7F) | 0x80;
0176  307F  	MOVLW 0x7F
0177  1283  	BCF STATUS, RP0
0178  0507  	ANDWF gbl_portc, W
0179  00CE  	MOVWF CompTempVar2219
017A  3080  	MOVLW 0x80
017B  044E  	IORWF CompTempVar2219, W
017C  0087  	MOVWF gbl_portc

					else
						portc = portc & 0x7F;

					//Calculation
					//Calculation:
					//  check = 0
					FCV_CHECK = 0;
017D  01C5  	CLRF gbl_FCV_CHECK


				} else {
017E  2928  	GOTO	label3


					//Decision
					//Decision: col2 = 1?
					if (FCV_COL2 == 1)
017F  1CC2  	BTFSS gbl_FCV_COL2,1
0180  2984  	GOTO	label9
0184        label9

					{

						//Calculation
						//Calculation:
						//  check = check + 1
						FCV_CHECK = FCV_CHECK + 1;
0181  0A45  	INCF gbl_FCV_CHECK, W
0182  00C5  	MOVWF gbl_FCV_CHECK


					} else {
0183  2985  	GOTO	label10
0185        label10


						//Calculation
						//Calculation:
						//  check = 0
						FCV_CHECK = 0;
0184  01C5  	CLRF gbl_FCV_CHECK


					}

					//Call Component Macro
					//Call Component Macro: LEDOff()
					FCD_LED0_LEDOff();
0185  210F  	CALL FCD_LED0_L_00055


					//Output
					//Output: 0 -> C7
					trisc = trisc & 0x7F;
0186  307F  	MOVLW 0x7F
0187  1683  	BSF STATUS, RP0
0188  0507  	ANDWF gbl_trisc, W
0189  0087  	MOVWF gbl_trisc

					if ((0))
						portc = (portc & 0x7F) | 0x80;
					else
						portc = portc & 0x7F;
018A  307F  	MOVLW 0x7F
018B  1283  	BCF STATUS, RP0
018C  0507  	ANDWF gbl_portc, W
018D  0087  	MOVWF gbl_portc


					//Decision
					//Decision: check = 2?
					if (FCV_CHECK == 2)
018E  0845  	MOVF gbl_FCV_CHECK, W
018F  3A02  	XORLW 0x02
0190  1D03  	BTFSS STATUS,Z
0191  299F  	GOTO	label11
019F        label11

					{

						//Call Component Macro
						//Call Component Macro: LEDOn()
						FCD_LED1_LEDOn();
0192  2109  	CALL FCD_LED1_L_00056


						//Output
						//Output: 1 -> C6
						trisc = trisc & 0xBF;
0193  30BF  	MOVLW 0xBF
0194  1683  	BSF STATUS, RP0
0195  0507  	ANDWF gbl_trisc, W
0196  0087  	MOVWF gbl_trisc

						if ((1))
							portc = (portc & 0xBF) | 0x40;
0197  30BF  	MOVLW 0xBF
0198  1283  	BCF STATUS, RP0
0199  0507  	ANDWF gbl_portc, W
019A  00CE  	MOVWF CompTempVar2220
019B  3040  	MOVLW 0x40
019C  044E  	IORWF CompTempVar2220, W
019D  0087  	MOVWF gbl_portc

						else
							portc = portc & 0xBF;

					} else {
019E  2928  	GOTO	label3


						//Call Component Macro
						//Call Component Macro: LEDOff()
						FCD_LED1_LEDOff();
019F  2103  	CALL FCD_LED1_L_00057


						//Output
						//Output: 0 -> C6
						trisc = trisc & 0xBF;
01A0  30BF  	MOVLW 0xBF
01A1  1683  	BSF STATUS, RP0
01A2  0507  	ANDWF gbl_trisc, W
01A3  0087  	MOVWF gbl_trisc

						if ((0))
							portc = (portc & 0xBF) | 0x40;
						else
							portc = portc & 0xBF;
01A4  30BF  	MOVLW 0xBF
01A5  1283  	BCF STATUS, RP0
01A6  0507  	ANDWF gbl_portc, W
01A7  0087  	MOVWF gbl_portc


					}

				}

			}

		}


	}

	mainendloop: goto mainendloop;
}


void MX_INTERRUPT_MACRO(void)

{
}
01DC  1283  	BCF STATUS, RP0
01DD  1303  	BCF STATUS, RP1
01DE  0E36  	SWAPF Int1BContext+D'2', W
01DF  0084  	MOVWF FSR
01E0  0E35  	SWAPF Int1BContext+D'1', W
01E1  008A  	MOVWF PCLATH
01E2  0E34  	SWAPF Int1BContext, W
01E3  0083  	MOVWF STATUS
01E4  0EFF  	SWAPF Int1Context, F
01E5  0E7F  	SWAPF Int1Context, W
01E6  0009  	RETFIE





////////////////////////////////////////
// Code with no source :-)
////////////////////////////////////////
0000  29A9  	GOTO	_startup

0004  00FF  	MOVWF Int1Context
0005  0E03  	SWAPF STATUS, W
0006  1283  	BCF STATUS, RP0
0007  1303  	BCF STATUS, RP1
0008  00B4  	MOVWF Int1BContext
0009  0E0A  	SWAPF PCLATH, W
000A  00B5  	MOVWF Int1BContext+D'1'
000B  0E04  	SWAPF FSR, W
000C  00B6  	MOVWF Int1BContext+D'2'
000D  118A  	BCF PCLATH,3
000E  120A  	BCF PCLATH,4
000F  29DC  	GOTO	interrupt
0010        delay_ms_00000
0010        ; { delay_ms ; function begin
0010  08CE  	MOVF delay_ms_00000_arg_del, F
0011  1D03  	BTFSS STATUS,Z
0012  2814  	GOTO	label1
0013  0008  	RETURN
0014        label1
0014  30F9  	MOVLW 0xF9
0015        label2
0015  3EFF  	ADDLW 0xFF
0016  1D03  	BTFSS STATUS,Z
0017  2815  	GOTO	label2
0018  0000  	NOP
0019  0BCE  	DECFSZ delay_ms_00000_arg_del, F
001A  2814  	GOTO	label1
001B  0008  	RETURN
001C        ; } delay_ms function end


01A9        _startup
01A9  30D5  	MOVLW 0xD5
01AA  1283  	BCF STATUS, RP0
01AB  1303  	BCF STATUS, RP1
01AC  00A0  	MOVWF gbl_14_LSR
01AD  30C4  	MOVLW 0xC4
01AE  00A1  	MOVWF gbl_14_LSR+D'1'
01AF  30BB  	MOVLW 0xBB
01B0  00A2  	MOVWF gbl_14_LSR+D'2'
01B1  30DC  	MOVLW 0xDC
01B2  00A3  	MOVWF gbl_14_LSR+D'3'
01B3  01A4  	CLRF gbl_15_gbl_aSig
01B4  01A5  	CLRF gbl_15_gbl_aSig+D'1'
01B5  01A6  	CLRF gbl_15_gbl_aSig+D'2'
01B6  01A7  	CLRF gbl_15_gbl_aSig+D'3'
01B7  01A8  	CLRF gbl_15_gbl_bSig
01B8  01A9  	CLRF gbl_15_gbl_bSig+D'1'
01B9  01AA  	CLRF gbl_15_gbl_bSig+D'2'
01BA  01AB  	CLRF gbl_15_gbl_bSig+D'3'
01BB  01AC  	CLRF gbl_15_gbl_zSig
01BC  01AD  	CLRF gbl_15_gbl_zSig+D'1'
01BD  01AE  	CLRF gbl_15_gbl_zSig+D'2'
01BE  01AF  	CLRF gbl_15_gbl_zSig+D'3'
01BF  01BC  	CLRF gbl_15_gbl_aExp
01C0  01BD  	CLRF gbl_15_gbl_bExp
01C1  01B7  	CLRF gbl_15_gbl_zExp
01C2  01B8  	CLRF gbl_15_gbl_zExp+D'1'
01C3  01BE  	CLRF gbl_15_gbl_aSign
01C4  01BF  	CLRF gbl_15_gbl_bSign
01C5  01C0  	CLRF gbl_15_gbl_zSign
01C6  01C1  	CLRF gbl_15_gbl_zSigZero
01C7  01B0  	CLRF gbl_15_gbl_ret
01C8  01B1  	CLRF gbl_15_gbl_ret+D'1'
01C9  01B2  	CLRF gbl_15_gbl_ret+D'2'
01CA  01B3  	CLRF gbl_15_gbl_ret+D'3'
01CB  01BA  	CLRF gbl_float_rounding_mode
01CC  01BB  	CLRF gbl_float_exception_flags
01CD  01B9  	CLRF gbl_float_detect_tininess

01D9  118A  	BCF PCLATH,3
01DA  120A  	BCF PCLATH,4
01DB  291B  	GOTO	main

2007  30D4  	DW 0x30D4
