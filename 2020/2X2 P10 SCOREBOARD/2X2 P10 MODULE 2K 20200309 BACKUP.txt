;******************************************************************************
;                                                                             *
;    FILENAME:     2X2 P10 MODULE SCOREBOARD                                  *
;    DATE:         FEBRUARY 29, 2020                                          *
;    FILE VERSION: V1.0                                                       *
;                                                                             *
;    AUTHOR:       KENNYNEUTRON                                               *
;    COMPANY:      GER-PER ENGINEERING                                        *
;                                                                             * 
;******************************************************************************
;                                                                             *
;    FILES REQUIRED: P18F4620.INC                                             *
;                                                                             *
;******************************************************************************

	LIST P=18F4620			;DIRECTIVE TO DEFINE PROCESSOR
	#INCLUDE <P18F4620.INC>	;PROCESSOR SPECIFIC VARIABLE DEFINITIONS


;******************************************************************************
;CONFIGURATION BITS
;MICROCHIP HAS CHANGED THE FORMAT FOR DEFINING THE CONFIGURATION BITS, PLEASE 
;SEE THE .INC FILE FOR FUTHER DETAILS ON NOTATION.  BELOW ARE A FEW EXAMPLES.


;CONFIG



CONFIG	OSC		=	HSPLL	;OSCILLATOR
CONFIG	FCMEN	=	OFF		;FAIL-SAFE CLOCK MONITOR
CONFIG	IESO	=	OFF		;INTERNAL/EXTERNAL SWITCH-OVER
CONFIG	PWRT	=	OFF		;POWER-UP TIMER
CONFIG	BOREN	=	OFF		;BROWN OUT RESET ENABLE
CONFIG	PBADEN 	= 	OFF 	;PORTB A/D ENABLE
CONFIG	LPT1OSC =	OFF		;LOW-POWER TIMER1 OSCILLATOR
CONFIG	MCLRE 	= 	OFF		;MEMORY CLEAR EXTERNAL
CONFIG	STVREN 	= 	OFF		;STACK FULL/UNDERFLOW RESET ENABLE
CONFIG	LVP 	= 	OFF		;SINGLE	SUPPLY ICSP
CONFIG	XINST 	= 	OFF		;EXTENDED INSTRUCTION SET
CONFIG	DEBUG 	= 	OFF		;BACKGROUND DEBUGGERS
CONFIG	CP0 	= 	OFF		;CODE PROTECT


CONFIG	WDT		=	OFF		;WATCHDOG TIMER
;CONFIG	WDTPS	=	4	;WATCHDOG TIMER POSTSCALER 1:1= 4MSECONDS
;******************************************************************************
;VARIABLE DEFINITIONS
; THESE VARIABLES ARE ONLY NEEDED IF LOW PRIORITY INTERRUPTS ARE USED. 
; MORE VARIABLES MAY BE NEEDED TO STORE OTHER SPECIAL FUNCTION REGISTERS USED
; IN THE INTERRUPT ROUTINES.

		#DEFINE		OE_ON		BSF	LATD,7,0
		#DEFINE		OE_OFF		BCF	LATD,7,0


		#DEFINE		LAT_ON		BSF	LATD,5,0
		#DEFINE		LAT_OFF		BCF	LATD,5,0

		#DEFINE		CLK_ON		BSF	LATD,6,0
		#DEFINE		CLK_OFF		BCF	LATD,6,0

		#DEFINE		DAT_1		BSF	LATD,4,0
		#DEFINE		DAT_0		BCF	LATD,4,0

		#DEFINE		A_1			BSF	LATD,0,0
		#DEFINE		A_0			BCF	LATD,0,0

		#DEFINE		B_1			BSF	LATD,1,0
		#DEFINE		B_0			BCF LATD,1,0


		CBLOCK	0X16C
		W_TEMP	;VARIABLE USED FOR CONTEXT SAVING 
		STATUS_TEMP	;VARIABLE USED FOR CONTEXT SAVING
		BSR_TEMP	;VARIABLE USED FOR CONTEXT SAVING
		PCLATH_TEMP
		ENDC

		CBLOCK	0X000
			EXAMPLE		;EXAMPLE OF A VARIABLE IN ACCESS RAM
		ENDC

		CBLOCK	0X100
			DELAYUS, DELAYMS,  SPI_DATAIN, SEC,DELAYS,	;DELAY VARIABLES
			;=======================================================
			LOOP,DREGCOUNT,BYTECOUNT,TRAMCOUNT,TRAM_SHIFT
			BTCOUNT,POINTER,DATAHOLD,LINESCAN
			CHAR,FONT,RAM_STPT,REG_STPT

			CURSORX,CURSORY,CURSORY_TEMP,CURSORX_TEMP
			WIDTH,HEIGHT

			COUNT0,COUNT1,WREG_TEMP
		ENDC


		CBLOCK	0X120
			TEMPRAM:.48	
			HEADER0,HEADER1				;HEADERS
			SC_TENS,SC_ONES,SC_MSEC		;SHOTCLOCK
			GTM_TENS,GTM_ONES			;GAME TIME MINUTES
			GTS_TENS,GTS_ONES,GT_MSEC	;GAME TIME SECONDS
			POS							;BALL POSSESION
			PERIOD
			HS_H,HS_T,HS_O				;HOME SCORE
			GS_H,GS_T,GS_O				;GUEST SCORE
			FOUL_H,FOUL_G				;FOULS
			TO_H,TO_G					;TIME-OUTS
			FOOTER
			RS_REC
			TXREG_T ;TXREG TEMP

		ENDC


		CBLOCK	0X170
			GPU_REG:.52
			GPR_LOOP,GPREG_TEMP,GP_COUNTER
			GPSTARTBIT,HEADERBIT,FOOTERBIT
		ENDC

		CBLOCK	0X200
			DRAM: 0XFE
		ENDC

;******************************************************************************
;EEPROM DATA
; DATA TO BE PROGRAMMED INTO THE DATA EEPROM IS DEFINED HERE

		ORG	0XF00000
			
	;	DE	"TEST DATA",0,1,2,3,4,5

;******************************************************************************
;RESET VECTOR
; THIS CODE WILL START EXECUTING WHEN A RESET OCCURS.

		ORG	0X0000

 		GOTO	INIT		;GO TO START OF MAIN CODE

;******************************************************************************
;HIGH PRIORITY INTERRUPT VECTOR
; THIS CODE WILL START EXECUTING WHEN A HIGH PRIORITY INTERRUPT OCCURS OR
; WHEN ANY INTERRUPT OCCURS IF INTERRUPT PRIORITIES ARE NOT ENABLED.

		ORG	0X0008

		CALL	INTERRUPT		;GO TO HIGH PRIORITY INTERRUPT ROUTINE
		RETFIE
;******************************************************************************
;LOW PRIORITY INTERRUPT VECTOR AND ROUTINE
; THIS CODE WILL START EXECUTING WHEN A LOW PRIORITY INTERRUPT OCCURS.
; THIS CODE CAN BE REMOVED IF LOW PRIORITY INTERRUPTS ARE NOT USED.

		ORG	0X0018

;		GOTO	INTERRUPT
		RETFIE
		MOVFF	STATUS,STATUS_TEMP	;SAVE STATUS REGISTER
		MOVFF	WREG,W_TEMP		;SAVE WORKING REGISTER
		MOVFF	BSR,BSR_TEMP		;SAVE BSR REGISTER

;	*** LOW PRIORITY INTERRUPT CODE GOES HERE ***


		MOVFF	BSR_TEMP,BSR		;RESTORE BSR REGISTER
		MOVFF	W_TEMP,WREG			;RESTORE WORKING REGISTER
		MOVFF	STATUS_TEMP,STATUS	;RESTORE STATUS REGISTER



;******************************************************************************
				;HIGH PRIORITY INTERRUPT ROUTINE
				; THE HIGH PRIORITY INTERRUPT CODE IS PLACED HERE TO AVOID CONFLICTING WITH
				; THE LOW PRIORITY INTERRUPT VECTOR.

;$$$$$$$$$$$$$$$$$$$$$$$$	INITIALIZE		$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
INIT
;========================= INITIALIZE PORTA =================================
CLRF PORTA 		; INITIALIZE PORTA BY
				; CLEARING OUTPUT
				; DATA LATCHES
CLRF LATA 		; ALTERNATE METHOD
				; TO CLEAR OUTPUT
				; DATA LATCHES
MOVLW 07H 		; CONFIGURE A/D
MOVWF ADCON1	; FOR DIGITAL INPUTS
MOVWF 07H 		; CONFIGURE COMPARATORS
MOVWF CMCON 	; FOR DIGITAL INPUT
MOVLW 0CFH 		; VALUE USED TO
				; INITIALIZE DATA
				; DIRECTION
MOVWF TRISA 	; SET RA<7:6,3:0> AS INPUTS
				; RA<5:4> AS OUTPUTS
;============================================================================


;========================= INITIALIZE PORTB =================================
CLRF PORTB 		; INITIALIZE PORTB BY
				; CLEARING OUTPUT
				; DATA LATCHES
CLRF LATB 		; ALTERNATE METHOD
				; TO CLEAR OUTPUT
				; DATA LATCHES
MOVLW 0FH 		; SET RB<4:0> AS
MOVWF ADCON1 	; DIGITAL I/O PINS
				; (REQUIRED IF CONFIG BIT
				; PBADEN IS SET)
MOVLW 0			; VALUE USED TO
				; INITIALIZE DATA
				; DIRECTION
MOVWF TRISB 	; SET RB<3:0> AS INPUTS
				; RB<7:0> AS INPUTS
;============================================================================



;========================= INITIALIZE PORTD =================================
CLRF 	PORTD 		; INITIALIZE PORTD BY
				; CLEARING OUTPUT
				; DATA LATCHES
CLRF 	LATD 		; ALTERNATE METHOD
				; TO CLEAR OUTPUT
				; DATA LATCHES
MOVLW 	0 		; VALUE USED TO
				; INITIALIZE DATA
				; DIRECTION
MOVWF 	TRISD 	; SET RD<3:0> AS INPUTS
				; RD<5:4> AS OUTPUTS
				; RD<7:6> AS INPUTS
;============================================================================

;========================= INITIALIZE PORTE =================================
CLRF PORTE 		; INITIALIZE PORTE BY
				; CLEARING OUTPUT
				; DATA LATCHES
CLRF LATE 		; ALTERNATE METHOD
				; TO CLEAR OUTPUT
				; DATA LATCHES
MOVLW 0AH 		; CONFIGURE A/D
MOVWF ADCON1 	; FOR DIGITAL INPUTS
MOVLW 0X07 		; VALUE USED TO
				; INITIALIZE DATA
				; DIRECTION
MOVWF TRISE,0 	; SET RE<0> AS INPUTS
				; RE<1> AS OUTPUTS
				; RE<2> AS INPUTS
;============================================================================


;========================= INITIALIZE PORTC =================================
CLRF 	PORTC
CLRF 	LATC
MOVLW 	0XFF
MOVWF 	TRISC

MOVLB	0X0F

	;---CONFIGURE GENERAL INTERRUPTS
	MOVLW B'11000000' ;DISABLE ALL INTERRUPTS EXCEPT PERIPHERAL
	MOVWF INTCON ;INTERRUPT CONTROL REGISTERE


	;---CONFIGURE PERIPHERAL INTERRUPTS
	MOVLW B'00100000' ;DISABLE ALL PERIPHERAL INTERRUPTS EXCEPT RECEIVER
	MOVWF PIE1 ;PERIPHERAL INTERRUPT ENABLE/DISABLE
	MOVLW	0
	MOVWF	PIE2
	MOVWF	IPR1
	MOVWF	IPR2





	;---CONFIGURE SPBRG FOR DESIRED BAUD RATE
	MOVLW	0X05
	MOVWF	SPBRGH
	MOVLW 	.255
	MOVWF 	SPBRG

	BSF		BAUDCON,3


	MOVLW B'00100100' ;CONFIGURE TXSTA AS :
	MOVWF TXSTA ;


	MOVLW B'10000000' ;ENABLE SERIAL PORT
	MOVWF RCSTA ;RECEIVE STATUS REG


	BSF RCSTA,4 ;ENABLE USART RECEIVE
;============================================================================ 



MOVLB	0X01

OE_ON
LAT_OFF
CLK_OFF

CALL	CLR_DRAM
CALL	CLR_TEMPRAM
CALL	DATAREG

MOVLW	2
MOVWF	SC_TENS

MOVLW	4
MOVWF	SC_ONES

MOVLW	1
MOVWF	GTM_TENS

MOVLW	0
MOVWF	GTM_ONES

MOVLW	0
MOVWF	GTS_TENS

MOVLW	0
MOVWF	GTS_ONES

MOVLW	0
MOVWF	GT_MSEC

MOVLW	B'00000110'
MOVWF	POS

MOVLW	1
MOVWF	PERIOD

MOVLW	0X0A
MOVWF	HS_H

MOVLW	0X0A
MOVWF	HS_T

MOVLW	0
MOVWF	HS_O

MOVLW	0X0A
MOVWF	GS_H

MOVLW	0X0A
MOVWF	GS_T

MOVLW	0
MOVWF	GS_O


MOVLW	0
MOVWF	TO_H

MOVLW	0
MOVWF	TO_G

MOVLW	0X00
MOVWF	RS_REC




	MOVLW 0XAA
	MOVWF TXREG_T ;TO TXREG

MOVLW	.48
MOVWF	GP_COUNTER
MOVLW	0
MOVWF	HEADERBIT
MOVLW	0
MOVWF	FOOTERBIT


MOVLW	.48
MOVWF	GPR_LOOP

BCF LATD,2,0
BCF		INTCON,7
;#######################	MAIN PROGRAM  ###########################
MAIN
	CALL	DISPLAY



GOTO	MAIN

;####################################################################




TRSMITSAMP
	MOVFF TXREG_T,TXREG ;TO TXREG



WTHERE:
	BTFSS TXSTA, TRMT
    GOTO WTHERE


	CALL DELAY_US
RETURN


;==========	DELAY USEC =========
DELAY_US

	MOVWF	DELAYUS

USEC

	NOP
 	NOP
	NOP
	NOP
DECFSZ	DELAYUS,F

GOTO	USEC

RETURN
;=================================



;=========== DELAY ONE MS ========
DELAY_ONEMS

	MOVLW	.5
	MOVWF	LOOP

MSEC
	MOVLW	.200
	CALL	DELAY_US
	DECFSZ	LOOP,F
	GOTO	MSEC

RETURN
;==================================


;=========== DELAY MS	==========
DELAY_MS
	
	MOVWF	DELAYMS
MSEC0
	CALL	DELAY_ONEMS
	DECFSZ	DELAYMS,F
	GOTO	MSEC0
RETURN
;=================================

;=========== DELAY	ONE	SECOND ===
DELAY_ONESEC

	MOVLW	.5
	MOVWF	SEC
SEC0
	MOVLW	.200
	CALL	DELAY_MS
	DECFSZ	SEC,F
	GOTO	SEC0
RETURN
;=================================

;==========	DELAY SEC ============
DELAY_SEC

	MOVWF	DELAYS
SEC1
	CALL	DELAY_ONESEC
	DECFSZ	DELAYS,F
	GOTO	SEC1
RETURN
;=================================

;=======================	CLEAR	RAM		===================
CLR_DRAM
	MOVLB		0X01	;BANK2
	MOVLW		0XFF
	MOVWF		POINTER

	MOVLW		0X02
	MOVWF		FSR0H,0

	MOVLW		0X00
	MOVWF		FSR0L,0  

	MOVLW		0XFF

CLR_DRAM0
	MOVWF		INDF0

	INCF		FSR0L
	DECFSZ		POINTER, F
	GOTO		CLR_DRAM0
	MOVWF		INDF0
	
	RETURN
;==============================================================

;=======================	CLEAR	TEMP	RAM		===========
CLR_TEMPRAM
	MOVLB		0X01	;BANK2
	MOVLW		0X1F
	MOVWF		POINTER

	MOVLW		0X01
	MOVWF		FSR0H,0

	MOVLW		0X20
	MOVWF		FSR0L,0  

	MOVLW		0XFF

CLR_TRAM0
	MOVWF		INDF0

	INCF		FSR0L
	DECFSZ		POINTER, F
	GOTO		CLR_TRAM0
	MOVWF		INDF0
	
	RETURN
;==============================================================

;=======================	DISPLAY	===========================
DISPLAY

	MOVLW	0X00
	MOVWF	LINESCAN
CALL	CLR_DRAM
	CALL	TRNSDATA_CPU2GPU
CALL	COMMAND


	MOVLW	0X98
	MOVWF	REG_STPT

	CALL	DATAREG
	OE_OFF
	LAT_ON
	LAT_OFF


	A_0
	B_0
	OE_ON


	MOVLW	0X04
	MOVWF	LINESCAN
CALL	CLR_DRAM
	CALL	TRNSDATA_CPU2GPU
CALL	COMMAND

	MOVLW	0X90
	MOVWF	REG_STPT

	CALL	DATAREG
	OE_OFF
	LAT_ON
	LAT_OFF

	A_1
	B_0
	OE_ON


	MOVLW	0X06
	MOVWF	LINESCAN
CALL	CLR_DRAM
	CALL	TRNSDATA_CPU2GPU
CALL	COMMAND

	MOVLW	0X88
	MOVWF	REG_STPT

	CALL	DATAREG
	OE_OFF
	LAT_ON
	LAT_OFF

	A_0
	B_1
	OE_ON



	MOVLW	0X0C
	MOVWF	LINESCAN
CALL	CLR_DRAM
CALL	TRNSDATA_CPU2GPU
CALL	COMMAND

	MOVLW	0X80
	MOVWF	REG_STPT

	CALL	DATAREG
	OE_OFF
	LAT_ON
	LAT_OFF


	A_1
	B_1
	OE_ON



RETURN
;==============================================================	


;=======================	REGISTER DATA	===================
DATAREG

	MOVLW	0X02
	MOVWF	FSR0H,0


	MOVFF	REG_STPT,FSR0L
	
	CALL	DATAREG_SUB		;P10 MODULE 03

	MOVLW	0X04
	ADDWF	REG_STPT

	MOVFF	REG_STPT,FSR0L
	
	CALL	DATAREG_SUB		;P10 MODULE 02
	
	MOVLW	0X84
	SUBWF	REG_STPT

	MOVFF	REG_STPT,FSR0L
	
	CALL	DATAREG_SUB		;P10 MODULE 01

	MOVLW	0X04
	ADDWF	REG_STPT

	MOVFF	REG_STPT,FSR0L
	
	CALL	DATAREG_SUB		;P10 MODULE 00
	

RETURN

DATAREG_SUB


	MOVLW	0X04
	MOVWF	COUNT0

DTR_ST1

	MOVLW	0X04
	MOVWF	DREGCOUNT

DTR0
	MOVLW	0X08
	MOVWF	BYTECOUNT

	MOVFF	INDF0,DATAHOLD
DTR1
	RLCF	DATAHOLD
	
	BTFSS	STATUS,C
	GOTO	DTR1_BIT0
	GOTO	DTR1_BIT1

DTR1_BIT0
	DAT_0
	GOTO	DTR2

DTR1_BIT1
	DAT_1
	GOTO	DTR2
NOP
DTR2
	CLK_ON
	CLK_OFF
	DECFSZ	BYTECOUNT,F
	GOTO	DTR1

	MOVLW	0X20
	ADDWF	FSR0L
	
	DECFSZ	DREGCOUNT,F
	GOTO	DTR0

	MOVLW	0X80
	ADDWF	FSR0L
	INCF	FSR0L

	DECFSZ	COUNT0,F
	GOTO	DTR_ST1

RETURN
;==========================================================




;=======================	DUMP	===================
DUMPDATA


DMP0


	MOVLW	0
	MOVWF	PCLATU,0

	MOVLW	03
	MOVWF	PCLATH,0


	MOVFF	FONT,W_TEMP

	BCF		STATUS,C

	RLCF	W_TEMP


	MOVLW	0X02
	ADDWF	W_TEMP
	MOVFF	W_TEMP,WREG

	GOTO	ADDFONT

ORG	0X0300
ADDFONT	


		
	MOVFF	FONT,WREG




	BCF		STATUS,C
	RLCF	WREG,0
	BCF		STATUS,C
	RLCF	WREG,0


	ADDWF	PCL
	GOTO	DMP_FONT0
	
	GOTO	DMP_FONT1

	GOTO	DMP_FONT2

;==========	DUMP FONT 0X00 ===========
DMP_FONT0

	MOVLW		0X01
	MOVWF		FSR1H,0

	MOVLW		0X20
	MOVWF		FSR1L,0

	MOVLW		0
	MOVWF		BTCOUNT	

	MOVLW		.32
	MOVWF		TRAMCOUNT

DMP_F00


	CALL	DUMP_FONT0

	MOVFF	WREG,INDF1

	INCF	FSR1L
	INCF	BTCOUNT
	DECFSZ	TRAMCOUNT,F
	GOTO	DMP_F00
	
	CALL	ADJ_CURSORX
	CALL	ADJ_CURSORY
	CALL	MOV_TEMPRAM2DRAM
	CALL	CLR_TEMPRAM

RETURN
;=====================================

;==========	DUMP FONT 0X01 ===========
DMP_FONT1

	MOVLW		0X01
	MOVWF		FSR1H,0

	MOVLW		0X20
	MOVWF		FSR1L,0

	MOVLW		0
	MOVWF		BTCOUNT	

	MOVLW		.32
	MOVWF		TRAMCOUNT

DMP_F10


	CALL	DUMP_FONT01

	MOVFF	WREG,INDF1

	INCF	FSR1L
	INCF	BTCOUNT
	DECFSZ	TRAMCOUNT,F
	GOTO	DMP_F10
	
	CALL	ADJ_CURSORX
	CALL	ADJ_CURSORY
	CALL	MOV_TEMPRAM2DRAM
	CALL	CLR_TEMPRAM

RETURN
;=====================================


;==========	DUMP FONT 0X02===========
DMP_FONT2

	MOVLW		0X01
	MOVWF		FSR1H,0

	MOVLW		0X20
	MOVWF		FSR1L,0

	MOVLW		0
	MOVWF		BTCOUNT	

	MOVLW		.32
	MOVWF		TRAMCOUNT

DMP_F20


	CALL	DUMP_FONT02

	MOVFF	WREG,INDF1

	INCF	FSR1L
	INCF	BTCOUNT
	DECFSZ	TRAMCOUNT,F
	GOTO	DMP_F20
	
	CALL	ADJ_CURSORX
	CALL	ADJ_CURSORY
	CALL	MOV_TEMPRAM2DRAM
	CALL	CLR_TEMPRAM

RETURN
;=====================================


RETURN
;==========================================================



;===================	TEMPRAM TO DRAM 	===============
MOV_TEMPRAM2DRAM
	MOVLW	.32
	MOVWF	POINTER


	;CURSOR X AND Y CHECK	FOR RAM_STPT (STARTING POINT OF RAM)

	MOVLW	0X01		;TEMP_RAM
	MOVWF	FSR1H
	
	MOVLW	0X3E
	MOVWF	FSR1L

	MOVLW	0X02		;DATA_RAM
	MOVWF	FSR0H

	;MOVLW	0X00
	;MOVWF	FSR0L
	MOVFF	RAM_STPT,FSR0L
	
	MOVLW	.16
	MOVWF	TRAMCOUNT

MOV_TR2DR0
	MOVFF	INDF1,WREG
	ANDWF	INDF0
	INCF	FSR1L
	INCF	FSR0L
	MOVFF	INDF1,WREG
	ANDWF	INDF0
	
	MOVLW	0X03
	SUBWF	FSR1L

	MOVLW	0X07
	ADDWF	FSR0L
	DECFSZ	TRAMCOUNT,F
	GOTO	MOV_TR2DR0
	
	





RETURN
;==========================================================

;===================	CURSOR X ADJUST	===============
ADJ_CURSORX
	MOVFF	CURSORX,W_TEMP
	MOVLW	.8
	CPFSGT	W_TEMP
	GOTO	CSRX_LTEQ8
	GOTO	CSRX_GTEQ8

CSRX_LTEQ8
	MOVLW	0X00
	MOVWF	RAM_STPT

	MOVFF	CURSORX,TRAM_SHIFT
	CALL	TRAMSHIFT

	RETURN



CSRX_GTEQ8
	MOVFF	CURSORX,W_TEMP
	MOVLW	.16
	CPFSGT	W_TEMP
	GOTO	CSRX_LTEQ16
	GOTO	CSRX_GTEQ16

CSRX_LTEQ16
	MOVLW	0X01
	MOVWF	RAM_STPT

	MOVFF	CURSORX,TRAM_SHIFT
	MOVLW	.8
	SUBWF	TRAM_SHIFT
	CALL	TRAMSHIFT

	RETURN

CSRX_GTEQ16
	MOVFF	CURSORX,W_TEMP
	MOVLW	.24
	CPFSGT	W_TEMP
	GOTO	CSRX_LTEQ24
	GOTO	CSRX_GTEQ24

CSRX_LTEQ24
	MOVLW	0X02
	MOVWF	RAM_STPT

	MOVFF	CURSORX,TRAM_SHIFT
	MOVLW	.16
	SUBWF	TRAM_SHIFT
	CALL	TRAMSHIFT

	RETURN	
CSRX_GTEQ24
	MOVFF	CURSORX,W_TEMP
	MOVLW	.32
	CPFSGT	W_TEMP
	GOTO	CSRX_LTEQ32
	GOTO	CSRX_GTEQ32

CSRX_LTEQ32
	MOVLW	0X03
	MOVWF	RAM_STPT

	MOVFF	CURSORX,TRAM_SHIFT
	MOVLW	.24
	SUBWF	TRAM_SHIFT
	CALL	TRAMSHIFT

	RETURN	
CSRX_GTEQ32
	MOVFF	CURSORX,W_TEMP
	MOVLW	.40
	CPFSGT	W_TEMP
	GOTO	CSRX_LTEQ40
	GOTO	CSRX_GTEQ40

CSRX_LTEQ40
	MOVLW	0X04
	MOVWF	RAM_STPT

	MOVFF	CURSORX,TRAM_SHIFT
	MOVLW	.32
	SUBWF	TRAM_SHIFT
	CALL	TRAMSHIFT

	RETURN	
CSRX_GTEQ40
	MOVFF	CURSORX,W_TEMP
	MOVLW	.48
	CPFSGT	W_TEMP
	GOTO	CSRX_LTEQ48
	GOTO	CSRX_GTEQ48

CSRX_LTEQ48
	MOVLW	0X05
	MOVWF	RAM_STPT

	MOVFF	CURSORX,TRAM_SHIFT
	MOVLW	.40
	SUBWF	TRAM_SHIFT
	CALL	TRAMSHIFT

	RETURN	
CSRX_GTEQ48
	MOVFF	CURSORX,W_TEMP
	MOVLW	.56
	CPFSGT	W_TEMP
	GOTO	CSRX_LTEQ56
	GOTO	CSRX_GTEQ56

CSRX_LTEQ56
	MOVLW	0X06
	MOVWF	RAM_STPT

	MOVFF	CURSORX,TRAM_SHIFT
	MOVLW	.48
	SUBWF	TRAM_SHIFT
	CALL	TRAMSHIFT

	RETURN	
CSRX_GTEQ56
	MOVLW	0X07
	MOVWF	RAM_STPT

	MOVFF	CURSORX,TRAM_SHIFT
	MOVLW	.56
	SUBWF	TRAM_SHIFT
	CALL	TRAMSHIFT

	RETURN



RETURN

TRAMSHIFT
;		DECF	TRAM_SHIFT
TRS0

		BSF		STATUS,C
		RRCF	TEMPRAM+00
		RRCF	TEMPRAM+01
		BSF		STATUS,C
		RRCF	TEMPRAM+02
		RRCF	TEMPRAM+03
		BSF		STATUS,C
		RRCF	TEMPRAM+04
		RRCF	TEMPRAM+05
		BSF		STATUS,C
		RRCF	TEMPRAM+06
		RRCF	TEMPRAM+07
		BSF		STATUS,C
		RRCF	TEMPRAM+08
		RRCF	TEMPRAM+09
		BSF		STATUS,C
		RRCF	TEMPRAM+0A
		RRCF	TEMPRAM+0B
		BSF		STATUS,C
		RRCF	TEMPRAM+0C
		RRCF	TEMPRAM+0D
		BSF		STATUS,C
		RRCF	TEMPRAM+0E
		RRCF	TEMPRAM+0F


		BSF		STATUS,C
		RRCF	TEMPRAM+10
		RRCF	TEMPRAM+11
		BSF		STATUS,C
		RRCF	TEMPRAM+12
		RRCF	TEMPRAM+13
		BSF		STATUS,C
		RRCF	TEMPRAM+14
		RRCF	TEMPRAM+15
		BSF		STATUS,C
		RRCF	TEMPRAM+16
		RRCF	TEMPRAM+17
		BSF		STATUS,C
		RRCF	TEMPRAM+18
		RRCF	TEMPRAM+19
		BSF		STATUS,C
		RRCF	TEMPRAM+1A
		RRCF	TEMPRAM+1B
		BSF		STATUS,C
		RRCF	TEMPRAM+1C
		RRCF	TEMPRAM+1D
		BSF		STATUS,C
		RRCF	TEMPRAM+1E
		RRCF	TEMPRAM+1F
	DECFSZ	TRAM_SHIFT,F
	GOTO	TRS0


RETURN

;======================================================


;===================	CURSOR Y ADJUST		===============
ADJ_CURSORY
	MOVFF	CURSORY,W_TEMP
	MOVLW	0
	CPFSEQ	W_TEMP
	GOTO	CSRY_NEQ0_ST
	RETURN

CSRY_NEQ0_ST
	MOVFF	CURSORY,LOOP
CSRY_NEQ0
	MOVLW	0X08
	ADDWF	RAM_STPT
	DECFSZ	LOOP,F
	GOTO	CSRY_NEQ0


	

RETURN
;==========================================================






ORG 0X1D00

DUMP_FONT01

	MOVLW	0
	MOVWF	PCLATU,0
	MOVLW	0X1D
	MOVWF	PCLATH,0


	MOVFF	CHAR,W_TEMP
	MOVLW	0X00
	CPFSEQ	W_TEMP
	GOTO	DMPF1_0		;IF CHAR!=0
	GOTO	DMPF1_1		;IF CHAR=0


DMPF1_0

	MOVFF	CHAR,WREG




	BCF		STATUS,C
	RLCF	WREG,0
	BCF		STATUS,C
	RLCF	WREG,0




DMPF1_1


	ADDWF	PCL
	GOTO	FONT1_0		;CHAR= 0X00			"0"

	GOTO	FONT1_1		;CHAR= 0X01			"1"

	GOTO	FONT1_2		;CHAR= 0X02			"2"

	GOTO	FONT1_3		;CHAR= 0X03			"3"

	GOTO	FONT1_4		;CHAR= 0X04			"4"

	GOTO	FONT1_5		;CHAR= 0X05			"5"

	GOTO	FONT1_6		;CHAR= 0X06			"6"

	GOTO	FONT1_7		;CHAR= 0X07			"7"		

	GOTO	FONT1_8		;CHAR= 0X08			"8"

	GOTO	FONT1_9		;CHAR= 0X09			"9"
	
	GOTO	FONT1_A		;CHAR= 0X0A			":"

	GOTO	FONT1_B		;CHAR= 0X0B			"."

	GOTO	FONT1_C		;CHAR= 0X0C			"<"

	GOTO	FONT1_D		;CHAR= 0X0D			">"

	GOTO	FONT1_E		;CHAR= 0X0E			"::"
	
	GOTO	FONT1_F		;CHAR= 0X0F			":: ::"

	GOTO	FONT1_10	;CHAR= 0X10			":: :: ::"

	GOTO	FONT1_11	;CHAR= 0X11			":: :: :: ::"

	GOTO	FONT1_12	;CHAR= 0X11			":: :: :: ::"

ORG 0X1E00

DUMP_FONT02

	MOVLW	0
	MOVWF	PCLATU,0
	MOVLW	0X1E
	MOVWF	PCLATH,0


	MOVFF	CHAR,W_TEMP
	MOVLW	0X00
	CPFSEQ	W_TEMP
	GOTO	DMPF2_0		;IF CHAR!=0
	GOTO	DMPF2_1		;IF CHAR=0


DMPF2_0

	MOVFF	CHAR,WREG




	BCF		STATUS,C
	RLCF	WREG,0
	BCF		STATUS,C
	RLCF	WREG,0




DMPF2_1


	ADDWF	PCL
	GOTO	FONT2_0		;CHAR= 0X00			"0"

	GOTO	FONT2_1		;CHAR= 0X01			"1"

	GOTO	FONT2_2		;CHAR= 0X02			"2"

	GOTO	FONT2_3		;CHAR= 0X03			"3"

	GOTO	FONT2_4		;CHAR= 0X04			"4"

	GOTO	FONT2_5		;CHAR= 0X05			"5"

	GOTO	FONT2_6		;CHAR= 0X06			"6"

	GOTO	FONT2_7		;CHAR= 0X07			"7"		

	GOTO	FONT2_8		;CHAR= 0X08			"8"

	GOTO	FONT2_9		;CHAR= 0X09			"9"
	
;	GOTO	FONT1_A		;CHAR= 0X0A			":"
;
;	GOTO	FONT1_B		;CHAR= 0X0B			"."
;
;	GOTO	FONT1_C		;CHAR= 0X0C			"<"
;
;	GOTO	FONT1_D		;CHAR= 0X0D			">"
;

ORG 0X1F00

DUMP_FONT0

	MOVLW	0
	MOVWF	PCLATU,0
	MOVLW	0X1F
	MOVWF	PCLATH,0


	MOVFF	CHAR,W_TEMP
	MOVLW	0X00
	CPFSEQ	W_TEMP
	GOTO	DMPF0_0		;IF CHAR!=0
	GOTO	DMPF0_1		;IF CHAR=0


DMPF0_0

	MOVFF	CHAR,WREG




	BCF		STATUS,C
	RLCF	WREG,0
	BCF		STATUS,C
	RLCF	WREG,0




DMPF0_1


	ADDWF	PCL
	GOTO	FONT0_0		;CHAR= 0X00			"0"

	GOTO	FONT0_1		;CHAR= 0X01			"1"

	GOTO	FONT0_2		;CHAR= 0X02			"2"

	GOTO	FONT0_3		;CHAR= 0X03			"3"

	GOTO	FONT0_4		;CHAR= 0X04			"4"

	GOTO	FONT0_5		;CHAR= 0X05			"5"

	GOTO	FONT0_6		;CHAR= 0X06			"6"

	GOTO	FONT0_7		;CHAR= 0X07			"7"		

	GOTO	FONT0_8		;CHAR= 0X08			"8"

	GOTO	FONT0_9		;CHAR= 0X09			"9"
	
	GOTO	FONT0_A		;CHAR= 0X09			"OT"

ORG 0X2000
FONT0_0
			MOVLW	0
			MOVWF	PCLATU,0
			MOVLW	0X20
			MOVWF	PCLATH,0

			MOVFF	BTCOUNT,WREG
			BCF		STATUS,C
			RLCF	WREG

		
			ADDWF	PCL,1,0
			DT	B'10001111',B'11111111';BTC=00
			DT	B'01110111',B'11111111';BTC=01
			DT	B'01110111',B'11111111';BTC=02
			DT	B'01110111',B'11111111';BTC=03
			DT	B'01110111',B'11111111';BTC=04
			DT	B'01110111',B'11111111';BTC=05
			DT	B'10001111',B'11111111';BTC=06
			DT	B'11111111',B'11111111';BTC=07
			DT	B'11111111',B'11111111';BTC=08
			DT	B'11111111',B'11111111';BTC=09
			DT	B'11111111',B'11111111';BTC=0A
			DT	B'11111111',B'11111111';BTC=0B
			DT	B'11111111',B'11111111';BTC=0C
			DT	B'11111111',B'11111111';BTC=0D
			DT	B'11111111',B'11111111';BTC=0E
			DT	B'11111111',B'11111111';BTC=0F


FONT1_0
			MOVLW	0
			MOVWF	PCLATU,0
			MOVLW	0X20
			MOVWF	PCLATH,0

			MOVFF	BTCOUNT,WREG
			BCF		STATUS,C
			RLCF	WREG

		
			ADDWF	PCL,1,0

			DT	B'11111111',B'11111111';BTC=00
			DT	B'11111111',B'11111111';BTC=01
			DT	B'11111111',B'11111111';BTC=02
			DT	B'11111111',B'11111111';BTC=03
			DT	B'11111111',B'11111111';BTC=04
			DT	B'11111111',B'11111111';BTC=05
			DT	B'10000111',B'11111111';BTC=06
			DT	B'01111011',B'11111111';BTC=07
			DT	B'01111011',B'11111111';BTC=08
			DT	B'01111011',B'11111111';BTC=09
			DT	B'01111011',B'11111111';BTC=0A
			DT	B'01111011',B'11111111';BTC=0B
			DT	B'01111011',B'11111111';BTC=0C
			DT	B'01111011',B'11111111';BTC=0D
			DT	B'01111011',B'11111111';BTC=0E
			DT	B'10000111',B'11111111';BTC=0F



ORG 0X2100
FONT0_1
			MOVLW	0
			MOVWF	PCLATU,0
			MOVLW	0X21
			MOVWF	PCLATH,0

			MOVFF	BTCOUNT,WREG
			BCF		STATUS,C
			RLCF	WREG

		
			ADDWF	PCL,1,0

			DT	B'10111111',B'11111111';BTC=00
			DT	B'00111111',B'11111111';BTC=01
			DT	B'10111111',B'11111111';BTC=02
			DT	B'10111111',B'11111111';BTC=03
			DT	B'10111111',B'11111111';BTC=04
			DT	B'10111111',B'11111111';BTC=05
			DT	B'00011111',B'11111111';BTC=06
			DT	B'11111111',B'11111111';BTC=07
			DT	B'11111111',B'11111111';BTC=08
			DT	B'11111111',B'11111111';BTC=09
			DT	B'11111111',B'11111111';BTC=0A
			DT	B'11111111',B'11111111';BTC=0B
			DT	B'11111111',B'11111111';BTC=0C
			DT	B'11111111',B'11111111';BTC=0D
			DT	B'11111111',B'11111111';BTC=0E
			DT	B'11111111',B'11111111';BTC=0F

FONT1_1
			MOVLW	0
			MOVWF	PCLATU,0
			MOVLW	0X21
			MOVWF	PCLATH,0

			MOVFF	BTCOUNT,WREG
			BCF		STATUS,C
			RLCF	WREG

		
			ADDWF	PCL,1,0
			DT	B'11111111',B'11111111';BTC=00
			DT	B'11111111',B'11111111';BTC=01
			DT	B'11111111',B'11111111';BTC=02
			DT	B'11111111',B'11111111';BTC=03
			DT	B'11111111',B'11111111';BTC=04
			DT	B'11111111',B'11111111';BTC=05
			DT	B'10111111',B'11111111';BTC=06
			DT	B'00111111',B'11111111';BTC=07
			DT	B'10111111',B'11111111';BTC=08
			DT	B'10111111',B'11111111';BTC=09
			DT	B'10111111',B'11111111';BTC=0A
			DT	B'10111111',B'11111111';BTC=0B
			DT	B'10111111',B'11111111';BTC=0C
			DT	B'10111111',B'11111111';BTC=0D
			DT	B'10111111',B'11111111';BTC=0E
			DT	B'00011111',B'11111111';BTC=0F




ORG 0X2200
FONT0_2
			MOVLW	0
			MOVWF	PCLATU,0
			MOVLW	0X22
			MOVWF	PCLATH,0

			MOVFF	BTCOUNT,WREG
			BCF		STATUS,C
			RLCF	WREG

		
			ADDWF	PCL,1,0
			DT	B'10001111',B'11111111';BTC=00
			DT	B'01110111',B'11111111';BTC=01
			DT	B'11110111',B'11111111';BTC=02
			DT	B'10001111',B'11111111';BTC=03
			DT	B'01111111',B'11111111';BTC=04
			DT	B'01110111',B'11111111';BTC=05
			DT	B'00000111',B'11111111';BTC=06
			DT	B'11111111',B'11111111';BTC=07
			DT	B'11111111',B'11111111';BTC=08
			DT	B'11111111',B'11111111';BTC=09
			DT	B'11111111',B'11111111';BTC=0A
			DT	B'11111111',B'11111111';BTC=0B
			DT	B'11111111',B'11111111';BTC=0C
			DT	B'11111111',B'11111111';BTC=0D
			DT	B'11111111',B'11111111';BTC=0E
			DT	B'11111111',B'11111111';BTC=0F


FONT1_2
			MOVLW	0
			MOVWF	PCLATU,0
			MOVLW	0X22
			MOVWF	PCLATH,0

			MOVFF	BTCOUNT,WREG
			BCF		STATUS,C
			RLCF	WREG

		
			ADDWF	PCL,1,0
			DT	B'11111111',B'11111111';BTC=00
			DT	B'11111111',B'11111111';BTC=01
			DT	B'11111111',B'11111111';BTC=02
			DT	B'11111111',B'11111111';BTC=03
			DT	B'11111111',B'11111111';BTC=04
			DT	B'11111111',B'11111111';BTC=05
			DT	B'10000111',B'11111111';BTC=06
			DT	B'01111011',B'11111111';BTC=07
			DT	B'11111011',B'11111111';BTC=08
			DT	B'11111011',B'11111111';BTC=09
			DT	B'11111011',B'11111111';BTC=0A
			DT	B'10000111',B'11111111';BTC=0B
			DT	B'01111111',B'11111111';BTC=0C
			DT	B'01111111',B'11111111';BTC=0D
			DT	B'01111011',B'11111111';BTC=0E
			DT	B'00000011',B'11111111';BTC=0F

ORG 0X2300
FONT0_3
			MOVLW	0
			MOVWF	PCLATU,0
			MOVLW	0X23
			MOVWF	PCLATH,0

			MOVFF	BTCOUNT,WREG
			BCF		STATUS,C
			RLCF	WREG

		
			ADDWF	PCL,1,0
			DT	B'10001111',B'11111111';BTC=00
			DT	B'01110111',B'11111111';BTC=01
			DT	B'11110111',B'11111111';BTC=02
			DT	B'10001111',B'11111111';BTC=03
			DT	B'11110111',B'11111111';BTC=04
			DT	B'01110111',B'11111111';BTC=05
			DT	B'10001111',B'11111111';BTC=06
			DT	B'11111111',B'11111111';BTC=07
			DT	B'11111111',B'11111111';BTC=08
			DT	B'11111111',B'11111111';BTC=09
			DT	B'11111111',B'11111111';BTC=0A
			DT	B'11111111',B'11111111';BTC=0B
			DT	B'11111111',B'11111111';BTC=0C
			DT	B'11111111',B'11111111';BTC=0D
			DT	B'11111111',B'11111111';BTC=0E
			DT	B'11111111',B'11111111';BTC=0F
FONT1_3
			MOVLW	0
			MOVWF	PCLATU,0
			MOVLW	0X23
			MOVWF	PCLATH,0

			MOVFF	BTCOUNT,WREG
			BCF		STATUS,C
			RLCF	WREG

		
			ADDWF	PCL,1,0
			DT	B'11111111',B'11111111';BTC=00
			DT	B'11111111',B'11111111';BTC=01
			DT	B'11111111',B'11111111';BTC=02
			DT	B'11111111',B'11111111';BTC=03
			DT	B'11111111',B'11111111';BTC=04
			DT	B'11111111',B'11111111';BTC=05
			DT	B'10000111',B'11111111';BTC=06
			DT	B'01111011',B'11111111';BTC=07
			DT	B'11111011',B'11111111';BTC=08
			DT	B'11111011',B'11111111';BTC=09
			DT	B'11111011',B'11111111';BTC=0A
			DT	B'10000111',B'11111111';BTC=0B
			DT	B'11111011',B'11111111';BTC=0C
			DT	B'11111011',B'11111111';BTC=0D
			DT	B'01111011',B'11111111';BTC=0E
			DT	B'10000111',B'11111111';BTC=0F

ORG 0X2400
FONT0_4
			MOVLW	0
			MOVWF	PCLATU,0
			MOVLW	0X24
			MOVWF	PCLATH,0

			MOVFF	BTCOUNT,WREG
			BCF		STATUS,C
			RLCF	WREG

		
			ADDWF	PCL,1,0
			DT	B'11101111',B'11111111';BTC=00
			DT	B'11001111',B'11111111';BTC=01
			DT	B'10101111',B'11111111';BTC=02
			DT	B'01101111',B'11111111';BTC=03
			DT	B'00000111',B'11111111';BTC=04
			DT	B'11101111',B'11111111';BTC=05
			DT	B'11101111',B'11111111';BTC=06
			DT	B'11111111',B'11111111';BTC=07
			DT	B'11111111',B'11111111';BTC=08
			DT	B'11111111',B'11111111';BTC=09
			DT	B'11111111',B'11111111';BTC=0A
			DT	B'11111111',B'11111111';BTC=0B
			DT	B'11111111',B'11111111';BTC=0C
			DT	B'11111111',B'11111111';BTC=0D
			DT	B'11111111',B'11111111';BTC=0E
			DT	B'11111111',B'11111111';BTC=0F

FONT1_4
			MOVLW	0
			MOVWF	PCLATU,0
			MOVLW	0X24
			MOVWF	PCLATH,0

			MOVFF	BTCOUNT,WREG
			BCF		STATUS,C
			RLCF	WREG

		
			ADDWF	PCL,1,0
			DT	B'11111111',B'11111111';BTC=00
			DT	B'11111111',B'11111111';BTC=01
			DT	B'11111111',B'11111111';BTC=02
			DT	B'11111111',B'11111111';BTC=03
			DT	B'11111111',B'11111111';BTC=04
			DT	B'11111111',B'11111111';BTC=05
			DT	B'11111011',B'11111111';BTC=06
			DT	B'11011011',B'11111111';BTC=07
			DT	B'11011011',B'11111111';BTC=08
			DT	B'10111011',B'11111111';BTC=09
			DT	B'01111011',B'11111111';BTC=0A
			DT	B'00000011',B'11111111';BTC=0B
			DT	B'11111011',B'11111111';BTC=0C
			DT	B'11111011',B'11111111';BTC=0D
			DT	B'11111011',B'11111111';BTC=0E
			DT	B'11111011',B'11111111';BTC=0F

ORG 0X2500
FONT0_5
			MOVLW	0
			MOVWF	PCLATU,0
			MOVLW	0X25
			MOVWF	PCLATH,0

			MOVFF	BTCOUNT,WREG
			BCF		STATUS,C
			RLCF	WREG

		
			ADDWF	PCL,1,0
			DT	B'00000111',B'11111111';BTC=00
			DT	B'01111111',B'11111111';BTC=01
			DT	B'01111111',B'11111111';BTC=02
			DT	B'00001111',B'11111111';BTC=03
			DT	B'11110111',B'11111111';BTC=04
			DT	B'11110111',B'11111111';BTC=05
			DT	B'00001111',B'11111111';BTC=06
			DT	B'11111111',B'11111111';BTC=07
			DT	B'11111111',B'11111111';BTC=08
			DT	B'11111111',B'11111111';BTC=09
			DT	B'11111111',B'11111111';BTC=0A
			DT	B'11111111',B'11111111';BTC=0B
			DT	B'11111111',B'11111111';BTC=0C
			DT	B'11111111',B'11111111';BTC=0D
			DT	B'11111111',B'11111111';BTC=0E
			DT	B'11111111',B'11111111';BTC=0F

FONT1_5
			MOVLW	0
			MOVWF	PCLATU,0
			MOVLW	0X25
			MOVWF	PCLATH,0

			MOVFF	BTCOUNT,WREG
			BCF		STATUS,C
			RLCF	WREG

		
			ADDWF	PCL,1,0
			DT	B'11111111',B'11111111';BTC=00
			DT	B'11111111',B'11111111';BTC=01
			DT	B'11111111',B'11111111';BTC=02
			DT	B'11111111',B'11111111';BTC=03
			DT	B'11111111',B'11111111';BTC=04
			DT	B'11111111',B'11111111';BTC=05
			DT	B'00000011',B'11111111';BTC=06
			DT	B'01111011',B'11111111';BTC=07
			DT	B'01111111',B'11111111';BTC=08
			DT	B'01111111',B'11111111';BTC=09
			DT	B'00000111',B'11111111';BTC=0A
			DT	B'11111011',B'11111111';BTC=0B
			DT	B'11111011',B'11111111';BTC=0C
			DT	B'11111011',B'11111111';BTC=0D
			DT	B'11111011',B'11111111';BTC=0E
			DT	B'00000111',B'11111111';BTC=0F

ORG 0X2600
FONT0_6
			MOVLW	0
			MOVWF	PCLATU,0
			MOVLW	0X26
			MOVWF	PCLATH,0

			MOVFF	BTCOUNT,WREG
			BCF		STATUS,C
			RLCF	WREG

		
			ADDWF	PCL,1,0
			DT	B'10001111',B'11111111';BTC=00
			DT	B'01110111',B'11111111';BTC=01
			DT	B'01111111',B'11111111';BTC=02
			DT	B'00001111',B'11111111';BTC=03
			DT	B'01110111',B'11111111';BTC=04
			DT	B'01110111',B'11111111';BTC=05
			DT	B'10001111',B'11111111';BTC=06
			DT	B'11111111',B'11111111';BTC=07
			DT	B'11111111',B'11111111';BTC=08
			DT	B'11111111',B'11111111';BTC=09
			DT	B'11111111',B'11111111';BTC=0A
			DT	B'11111111',B'11111111';BTC=0B
			DT	B'11111111',B'11111111';BTC=0C
			DT	B'11111111',B'11111111';BTC=0D
			DT	B'11111111',B'11111111';BTC=0E
			DT	B'11111111',B'11111111';BTC=0F

FONT1_6
			MOVLW	0
			MOVWF	PCLATU,0
			MOVLW	0X26
			MOVWF	PCLATH,0

			MOVFF	BTCOUNT,WREG
			BCF		STATUS,C
			RLCF	WREG

		
			ADDWF	PCL,1,0
			DT	B'11111111',B'11111111';BTC=00
			DT	B'11111111',B'11111111';BTC=01
			DT	B'11111111',B'11111111';BTC=02
			DT	B'11111111',B'11111111';BTC=03
			DT	B'11111111',B'11111111';BTC=04
			DT	B'11111111',B'11111111';BTC=05
			DT	B'10000111',B'11111111';BTC=06
			DT	B'01111011',B'11111111';BTC=07
			DT	B'01111111',B'11111111';BTC=08
			DT	B'01111111',B'11111111';BTC=09
			DT	B'00000111',B'11111111';BTC=0A
			DT	B'01111011',B'11111111';BTC=0B
			DT	B'01111011',B'11111111';BTC=0C
			DT	B'01111011',B'11111111';BTC=0D
			DT	B'01111011',B'11111111';BTC=0E
			DT	B'10000111',B'11111111';BTC=0F

ORG	0X2700
FONT0_7
			MOVLW	0
			MOVWF	PCLATU,0
			MOVLW	0X27
			MOVWF	PCLATH,0

			MOVFF	BTCOUNT,WREG
			BCF		STATUS,C
			RLCF	WREG

		
			ADDWF	PCL,1,0
			DT	B'00000111',B'11111111';BTC=00
			DT	B'11110111',B'11111111';BTC=01
			DT	B'11101111',B'11111111';BTC=02
			DT	B'11011111',B'11111111';BTC=03
			DT	B'11011111',B'11111111';BTC=04
			DT	B'11011111',B'11111111';BTC=05
			DT	B'11011111',B'11111111';BTC=06
			DT	B'11111111',B'11111111';BTC=07
			DT	B'11111111',B'11111111';BTC=08
			DT	B'11111111',B'11111111';BTC=09
			DT	B'11111111',B'11111111';BTC=0A
			DT	B'11111111',B'11111111';BTC=0B
			DT	B'11111111',B'11111111';BTC=0C
			DT	B'11111111',B'11111111';BTC=0D
			DT	B'11111111',B'11111111';BTC=0E
			DT	B'11111111',B'11111111';BTC=0F

FONT1_7
			MOVLW	0
			MOVWF	PCLATU,0
			MOVLW	0X27
			MOVWF	PCLATH,0

			MOVFF	BTCOUNT,WREG
			BCF		STATUS,C
			RLCF	WREG

		
			ADDWF	PCL,1,0
			DT	B'11111111',B'11111111';BTC=00
			DT	B'11111111',B'11111111';BTC=01
			DT	B'11111111',B'11111111';BTC=02
			DT	B'11111111',B'11111111';BTC=03
			DT	B'11111111',B'11111111';BTC=04
			DT	B'11111111',B'11111111';BTC=05
			DT	B'00000011',B'11111111';BTC=06
			DT	B'11111011',B'11111111';BTC=07
			DT	B'11111011',B'11111111';BTC=08
			DT	B'11110111',B'11111111';BTC=09
			DT	B'11101111',B'11111111';BTC=0A
			DT	B'11011111',B'11111111';BTC=0B
			DT	B'11011111',B'11111111';BTC=0C
			DT	B'11011111',B'11111111';BTC=0D
			DT	B'11011111',B'11111111';BTC=0E
			DT	B'11011111',B'11111111';BTC=0F


ORG 0X2800
FONT0_8
			MOVLW	0
			MOVWF	PCLATU,0
			MOVLW	0X28
			MOVWF	PCLATH,0

			MOVFF	BTCOUNT,WREG
			BCF		STATUS,C
			RLCF	WREG

		
			ADDWF	PCL,1,0
			DT	B'10001111',B'11111111';BTC=00
			DT	B'01110111',B'11111111';BTC=01
			DT	B'01110111',B'11111111';BTC=02
			DT	B'10001111',B'11111111';BTC=03
			DT	B'01110111',B'11111111';BTC=04
			DT	B'01110111',B'11111111';BTC=05
			DT	B'10001111',B'11111111';BTC=06
			DT	B'11111111',B'11111111';BTC=07
			DT	B'11111111',B'11111111';BTC=08
			DT	B'11111111',B'11111111';BTC=09
			DT	B'11111111',B'11111111';BTC=0A
			DT	B'11111111',B'11111111';BTC=0B
			DT	B'11111111',B'11111111';BTC=0C
			DT	B'11111111',B'11111111';BTC=0D
			DT	B'11111111',B'11111111';BTC=0E
			DT	B'11111111',B'11111111';BTC=0F


FONT1_8
			MOVLW	0
			MOVWF	PCLATU,0
			MOVLW	0X28
			MOVWF	PCLATH,0

			MOVFF	BTCOUNT,WREG
			BCF		STATUS,C
			RLCF	WREG

		
			ADDWF	PCL,1,0
			DT	B'11111111',B'11111111';BTC=00
			DT	B'11111111',B'11111111';BTC=01
			DT	B'11111111',B'11111111';BTC=02
			DT	B'11111111',B'11111111';BTC=03
			DT	B'11111111',B'11111111';BTC=04
			DT	B'11111111',B'11111111';BTC=05
			DT	B'10000111',B'11111111';BTC=06
			DT	B'01111011',B'11111111';BTC=07
			DT	B'01111011',B'11111111';BTC=08
			DT	B'01111011',B'11111111';BTC=09
			DT	B'01111011',B'11111111';BTC=0A
			DT	B'10000111',B'11111111';BTC=0B
			DT	B'01111011',B'11111111';BTC=0C
			DT	B'01111011',B'11111111';BTC=0D
			DT	B'01111011',B'11111111';BTC=0E
			DT	B'10000111',B'11111111';BTC=0F

ORG 0X2900
FONT0_9
			MOVLW	0
			MOVWF	PCLATU,0
			MOVLW	0X29
			MOVWF	PCLATH,0

			MOVFF	BTCOUNT,WREG
			BCF		STATUS,C
			RLCF	WREG

		
			ADDWF	PCL,1,0
			DT	B'10001111',B'11111111';BTC=00
			DT	B'01110111',B'11111111';BTC=01
			DT	B'01110111',B'11111111';BTC=02
			DT	B'10000111',B'11111111';BTC=03
			DT	B'11110111',B'11111111';BTC=04
			DT	B'01110111',B'11111111';BTC=05
			DT	B'10001111',B'11111111';BTC=06
			DT	B'11111111',B'11111111';BTC=07
			DT	B'11111111',B'11111111';BTC=08
			DT	B'11111111',B'11111111';BTC=09
			DT	B'11111111',B'11111111';BTC=0A
			DT	B'11111111',B'11111111';BTC=0B
			DT	B'11111111',B'11111111';BTC=0C
			DT	B'11111111',B'11111111';BTC=0D
			DT	B'11111111',B'11111111';BTC=0E
			DT	B'11111111',B'11111111';BTC=0F
FONT1_9
			MOVLW	0
			MOVWF	PCLATU,0
			MOVLW	0X29
			MOVWF	PCLATH,0

			MOVFF	BTCOUNT,WREG
			BCF		STATUS,C
			RLCF	WREG

		
			ADDWF	PCL,1,0
			DT	B'11111111',B'11111111';BTC=00
			DT	B'11111111',B'11111111';BTC=01
			DT	B'11111111',B'11111111';BTC=02
			DT	B'11111111',B'11111111';BTC=03
			DT	B'11111111',B'11111111';BTC=04
			DT	B'11111111',B'11111111';BTC=05
			DT	B'10000111',B'11111111';BTC=06
			DT	B'01111011',B'11111111';BTC=07
			DT	B'01111011',B'11111111';BTC=08
			DT	B'01111011',B'11111111';BTC=09
			DT	B'01111011',B'11111111';BTC=0A
			DT	B'10000011',B'11111111';BTC=0B
			DT	B'11111011',B'11111111';BTC=0C
			DT	B'11111011',B'11111111';BTC=0D
			DT	B'01111011',B'11111111';BTC=0E
			DT	B'10000111',B'11111111';BTC=0F


ORG 0X2A00
FONT0_A
			MOVLW	0
			MOVWF	PCLATU,0
			MOVLW	0X2A
			MOVWF	PCLATH,0

			MOVFF	BTCOUNT,WREG
			BCF		STATUS,C
			RLCF	WREG

		
			ADDWF	PCL,1,0
			DT	B'10001111',B'11111111';BTC=00
			DT	B'01110111',B'11111111';BTC=01
			DT	B'01110111',B'11111111';BTC=02
			DT	B'10001111',B'11111111';BTC=03
			DT	B'11111111',B'11111111';BTC=04
			DT	B'00000111',B'11111111';BTC=05
			DT	B'11011111',B'11111111';BTC=06
			DT	B'11011111',B'11111111';BTC=07
			DT	B'11011111',B'11111111';BTC=08
			DT	B'11111111',B'11111111';BTC=09
			DT	B'11111111',B'11111111';BTC=0A
			DT	B'11111111',B'11111111';BTC=0B
			DT	B'11111111',B'11111111';BTC=0C
			DT	B'11111111',B'11111111';BTC=0D
			DT	B'11111111',B'11111111';BTC=0E
			DT	B'11111111',B'11111111';BTC=0F
FONT1_A
			MOVLW	0
			MOVWF	PCLATU,0
			MOVLW	0X2A
			MOVWF	PCLATH,0

			MOVFF	BTCOUNT,WREG
			BCF		STATUS,C
			RLCF	WREG

		
			ADDWF	PCL,1,0
			DT	B'11111111',B'11111111';BTC=00
			DT	B'11111111',B'11111111';BTC=01
			DT	B'11111111',B'11111111';BTC=02
			DT	B'11111111',B'11111111';BTC=03
			DT	B'11111111',B'11111111';BTC=04
			DT	B'11111111',B'11111111';BTC=05
			DT	B'11111111',B'11111111';BTC=06
			DT	B'11111111',B'11111111';BTC=07
			DT	B'00111111',B'11111111';BTC=08
			DT	B'00111111',B'11111111';BTC=09
			DT	B'11111111',B'11111111';BTC=0A
			DT	B'11111111',B'11111111';BTC=0B
			DT	B'00111111',B'11111111';BTC=0C
			DT	B'00111111',B'11111111';BTC=0D
			DT	B'11111111',B'11111111';BTC=0E
			DT	B'11111111',B'11111111';BTC=0F

ORG 0X2B00

FONT1_B
			MOVLW	0
			MOVWF	PCLATU,0
			MOVLW	0X2B
			MOVWF	PCLATH,0

			MOVFF	BTCOUNT,WREG
			BCF		STATUS,C
			RLCF	WREG

		
			ADDWF	PCL,1,0
			DT	B'11111111',B'11111111';BTC=00
			DT	B'11111111',B'11111111';BTC=01
			DT	B'11111111',B'11111111';BTC=02
			DT	B'11111111',B'11111111';BTC=03
			DT	B'11111111',B'11111111';BTC=04
			DT	B'11111111',B'11111111';BTC=05
			DT	B'11111111',B'11111111';BTC=06
			DT	B'11111111',B'11111111';BTC=07
			DT	B'11111111',B'11111111';BTC=08
			DT	B'11111111',B'11111111';BTC=09
			DT	B'11111111',B'11111111';BTC=0A
			DT	B'11111111',B'11111111';BTC=0B
			DT	B'11111111',B'11111111';BTC=0C
			DT	B'11111111',B'11111111';BTC=0D
			DT	B'00111111',B'11111111';BTC=0E
			DT	B'00111111',B'11111111';BTC=0F



ORG 0X2C00

FONT1_C
			MOVLW	0
			MOVWF	PCLATU,0
			MOVLW	0X2C
			MOVWF	PCLATH,0

			MOVFF	BTCOUNT,WREG
			BCF		STATUS,C
			RLCF	WREG

		
			ADDWF	PCL,1,0
			DT	B'11111111',B'11111111';BTC=02
			DT	B'11111111',B'11111111';BTC=03
			DT	B'11111111',B'11111111';BTC=04
			DT	B'11111111',B'11111111';BTC=05
			DT	B'11111111',B'11111111';BTC=06
			DT	B'11111111',B'11111111';BTC=07
			DT	B'11110111',B'11111111';BTC=08
			DT	B'11100111',B'11111111';BTC=09
			DT	B'11000111',B'11111111';BTC=0A
			DT	B'10000111',B'11111111';BTC=0B
			DT	B'00000111',B'11111111';BTC=0C
			DT	B'10000111',B'11111111';BTC=0D
			DT	B'11000111',B'11111111';BTC=0E
			DT	B'11100111',B'11111111';BTC=0F
			DT	B'11110111',B'11111111';BTC=00
			DT	B'11111111',B'11111111';BTC=01
ORG	0X2D00

FONT1_D
			MOVLW	0
			MOVWF	PCLATU,0
			MOVLW	0X2D
			MOVWF	PCLATH,0

			MOVFF	BTCOUNT,WREG
			BCF		STATUS,C
			RLCF	WREG

		
			ADDWF	PCL,1,0
			DT	B'11111111',B'11111111';BTC=02
			DT	B'11111111',B'11111111';BTC=03
			DT	B'11111111',B'11111111';BTC=04
			DT	B'11111111',B'11111111';BTC=05
			DT	B'11111111',B'11111111';BTC=06
			DT	B'11111111',B'11111111';BTC=07
			DT	B'01111111',B'11111111';BTC=08
			DT	B'00111111',B'11111111';BTC=09
			DT	B'00011111',B'11111111';BTC=0A
			DT	B'00001111',B'11111111';BTC=0B
			DT	B'00000111',B'11111111';BTC=0C
			DT	B'00001111',B'11111111';BTC=0D
			DT	B'00011111',B'11111111';BTC=0E
			DT	B'00111111',B'11111111';BTC=0F
			DT	B'01111111',B'11111111';BTC=00
			DT	B'11111111',B'11111111';BTC=01


ORG	0X2E00

FONT1_E
			MOVLW	0
			MOVWF	PCLATU,0
			MOVLW	0X2E
			MOVWF	PCLATH,0

			MOVFF	BTCOUNT,WREG
			BCF		STATUS,C
			RLCF	WREG

		
			ADDWF	PCL,1,0
			DT	B'11111111',B'11111111';BTC=00
			DT	B'11111111',B'11111111';BTC=01
			DT	B'11111111',B'11111111';BTC=02
			DT	B'11111111',B'11111111';BTC=03
			DT	B'11111111',B'11111111';BTC=04
			DT	B'11111111',B'11111111';BTC=05
			DT	B'11111111',B'11111111';BTC=06
			DT	B'11111111',B'11111111';BTC=07
			DT	B'11111111',B'11111111';BTC=08
			DT	B'11111111',B'11111111';BTC=09
			DT	B'11111111',B'11111111';BTC=0A
			DT	B'11111111',B'11111111';BTC=0B
			DT	B'11111111',B'11111111';BTC=0C
			DT	B'11111111',B'11111111';BTC=0D
			DT	B'00111111',B'11111111';BTC=0E
			DT	B'00111111',B'11111111';BTC=0F


ORG	0X2F00

FONT1_F
			MOVLW	0
			MOVWF	PCLATU,0
			MOVLW	0X2F
			MOVWF	PCLATH,0

			MOVFF	BTCOUNT,WREG
			BCF		STATUS,C
			RLCF	WREG

		
			ADDWF	PCL,1,0
			DT	B'11111111',B'11111111';BTC=00
			DT	B'11111111',B'11111111';BTC=01
			DT	B'11111111',B'11111111';BTC=02
			DT	B'11111111',B'11111111';BTC=03
			DT	B'11111111',B'11111111';BTC=04
			DT	B'11111111',B'11111111';BTC=05
			DT	B'11111111',B'11111111';BTC=06
			DT	B'11111111',B'11111111';BTC=07
			DT	B'11111111',B'11111111';BTC=08
			DT	B'11111111',B'11111111';BTC=09
			DT	B'11111111',B'11111111';BTC=0A
			DT	B'11111111',B'11111111';BTC=0B
			DT	B'11111111',B'11111111';BTC=0C
			DT	B'11111111',B'11111111';BTC=0D
			DT	B'00100111',B'11111111';BTC=0E
			DT	B'00100111',B'11111111';BTC=0F

ORG	0X3000
FONT1_10
			MOVLW	0
			MOVWF	PCLATU,0
			MOVLW	0X30
			MOVWF	PCLATH,0

			MOVFF	BTCOUNT,WREG
			BCF		STATUS,C
			RLCF	WREG

		
			ADDWF	PCL,1,0
			DT	B'11111111',B'11111111';BTC=00
			DT	B'11111111',B'11111111';BTC=01
			DT	B'11111111',B'11111111';BTC=02
			DT	B'11111111',B'11111111';BTC=03
			DT	B'11111111',B'11111111';BTC=04
			DT	B'11111111',B'11111111';BTC=05
			DT	B'11111111',B'11111111';BTC=06
			DT	B'11111111',B'11111111';BTC=07
			DT	B'11111111',B'11111111';BTC=08
			DT	B'11111111',B'11111111';BTC=09
			DT	B'11111111',B'11111111';BTC=0A
			DT	B'11111111',B'11111111';BTC=0B
			DT	B'11111111',B'11111111';BTC=0C
			DT	B'11111111',B'11111111';BTC=0D
			DT	B'00100100',B'11111111';BTC=0E
			DT	B'00100100',B'11111111';BTC=0F

ORG	0X3100
FONT1_11
			MOVLW	0
			MOVWF	PCLATU,0
			MOVLW	0X31
			MOVWF	PCLATH,0

			MOVFF	BTCOUNT,WREG
			BCF		STATUS,C
			RLCF	WREG

		
			ADDWF	PCL,1,0
			DT	B'11111111',B'11111111';BTC=00
			DT	B'11111111',B'11111111';BTC=01
			DT	B'11111111',B'11111111';BTC=02
			DT	B'11111111',B'11111111';BTC=03
			DT	B'11111111',B'11111111';BTC=04
			DT	B'11111111',B'11111111';BTC=05
			DT	B'11111111',B'11111111';BTC=06
			DT	B'11111111',B'11111111';BTC=07
			DT	B'11111111',B'11111111';BTC=08
			DT	B'11111111',B'11111111';BTC=09
			DT	B'11111111',B'11111111';BTC=0A
			DT	B'11111111',B'11111111';BTC=0B
			DT	B'11111111',B'11111111';BTC=0C
			DT	B'11111111',B'11111111';BTC=0D
			DT	B'00100100',B'10011111';BTC=0E
			DT	B'00100100',B'10011111';BTC=0F

ORG	0X3200
FONT1_12
			MOVLW	0
			MOVWF	PCLATU,0
			MOVLW	0X32
			MOVWF	PCLATH,0

			MOVFF	BTCOUNT,WREG
			BCF		STATUS,C
			RLCF	WREG

		
			ADDWF	PCL,1,0
			DT	B'11111111',B'11111111';BTC=00
			DT	B'11111111',B'11111111';BTC=01
			DT	B'11111111',B'11111111';BTC=02
			DT	B'11111111',B'11111111';BTC=03
			DT	B'11111111',B'11111111';BTC=04
			DT	B'11111111',B'11111111';BTC=05
			DT	B'11111111',B'11111111';BTC=06
			DT	B'11111111',B'11111111';BTC=07
			DT	B'11111111',B'11111111';BTC=08
			DT	B'11111111',B'11111111';BTC=09
			DT	B'11111111',B'11111111';BTC=0A
			DT	B'11111111',B'11111111';BTC=0B
			DT	B'11111111',B'11111111';BTC=0C
			DT	B'11111111',B'11111111';BTC=0D
			DT	B'00000000',B'00011111';BTC=0E
			DT	B'00000000',B'00011111';BTC=0F



ORG 0X4000

FONT2_0
			MOVLW	0
			MOVWF	PCLATU,0
			MOVLW	0X40
			MOVWF	PCLATH,0

			MOVFF	BTCOUNT,WREG
			BCF		STATUS,C
			RLCF	WREG

		
			ADDWF	PCL,1,0
			DT	B'11000000',B'11111111'
			DT	B'10000000',B'01111111'
			DT	B'00011110',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00111111',B'00111111'
			DT	B'00011110',B'00111111'
			DT	B'10000000',B'01111111'
			DT	B'11000000',B'11111111'
			DT	B'11111111',B'11111111'

ORG	0X4100

FONT2_1
			MOVLW	0
			MOVWF	PCLATU,0
			MOVLW	0X41
			MOVWF	PCLATH,0

			MOVFF	BTCOUNT,WREG
			BCF		STATUS,C
			RLCF	WREG

		
			ADDWF	PCL,1,0
			DT	B'11100111',B'11111111';BTC=00
			DT	B'11100111',B'11111111';BTC=01
			DT	B'11000111',B'11111111';BTC=02
			DT	B'10000111',B'11111111';BTC=03
			DT	B'00100111',B'11111111';BTC=04
			DT	B'11100111',B'11111111';BTC=05
			DT	B'11100111',B'11111111';BTC=06
			DT	B'11100111',B'11111111';BTC=07
			DT	B'11100111',B'11111111';BTC=08
			DT	B'11100111',B'11111111';BTC=09
			DT	B'11100111',B'11111111';BTC=0A
			DT	B'11100111',B'11111111';BTC=0B
			DT	B'11100111',B'11111111';BTC=0C
			DT	B'00000000',B'11111111';BTC=0D
			DT	B'00000000',B'11111111';BTC=0E
			DT	B'11111111',B'11111111';BTC=0F



ORG	0X4200

FONT2_2
			MOVLW	0
			MOVWF	PCLATU,0
			MOVLW	0X42
			MOVWF	PCLATH,0

			MOVFF	BTCOUNT,WREG
			BCF		STATUS,C
			RLCF	WREG

		
			ADDWF	PCL,1,0
			DT	B'11000000',B'11111111'	;BTC=00
			DT	B'10000000',B'01111111'	;BTC=01
			DT	B'00111110',B'00111111'	;BTC=02
			DT	B'11111111',B'00111111'	;BTC=03
			DT	B'11111111',B'00111111'	;BTC=04
			DT	B'11111111',B'00111111'	;BTC=05
			DT	B'11111110',B'00111111'	;BTC=06
			DT	B'11000000',B'01111111'	;BTC=07
			DT	B'10000000',B'11111111'	;BTC=08
			DT	B'00011111',B'11111111'	;BTC=09
			DT	B'00111111',B'11111111'	;BTC=0A
			DT	B'00111111',B'11111111'	;BTC=0B
			DT	B'00111111',B'00111111'	;BTC=0C
			DT	B'00000000',B'00111111'	;BTC=0D
			DT	B'00000000',B'00111111'	;BTC=0E
			DT	B'11111111',B'11111111'	;BTC=0F


ORG	0X4300



FONT2_3
			MOVLW	0
			MOVWF	PCLATU,0
			MOVLW	0X43
			MOVWF	PCLATH,0

			MOVFF	BTCOUNT,WREG
			BCF		STATUS,C
			RLCF	WREG

		
			ADDWF	PCL,1,0
			DT	B'11000000',B'11111111'	;BTC=00
			DT	B'10000000',B'01111111'	;BTC=01
			DT	B'00011110',B'00111111'	;BTC=02
			DT	B'00111111',B'00111111'	;BTC=03
			DT	B'11111111',B'00111111'	;BTC=04
			DT	B'11111111',B'00111111'	;BTC=05
			DT	B'11111110',B'00111111'	;BTC=06
			DT	B'11100000',B'01111111'	;BTC=07
			DT	B'11100000',B'01111111'	;BTC=08
			DT	B'11111110',B'00111111'	;BTC=09
			DT	B'11111111',B'00111111'	;BTC=0A
			DT	B'00111111',B'00111111'	;BTC=0B
			DT	B'00011110',B'00111111'	;BTC=0C
			DT	B'10000000',B'01111111'	;BTC=0D
			DT	B'11000000',B'11111111'	;BTC=0E
			DT	B'11111111',B'11111111'	;BTC=0F




ORG	0X4400

FONT2_4
			MOVLW	0
			MOVWF	PCLATU,0
			MOVLW	0X44
			MOVWF	PCLATH,0

			MOVFF	BTCOUNT,WREG
			BCF		STATUS,C
			RLCF	WREG

		
			ADDWF	PCL,1,0
			DT	B'11111111',B'10111111'	;BTC=00
			DT	B'11111101',B'00111111'	;BTC=01
			DT	B'11111001',B'00111111'	;BTC=02
			DT	B'11111001',B'00111111'	;BTC=03
			DT	B'11110011',B'00111111'	;BTC=04
			DT	B'11100111',B'00111111'	;BTC=05
			DT	B'11001111',B'00111111'	;BTC=06
			DT	B'10011111',B'00111111'	;BTC=07
			DT	B'00111111',B'00111111'	;BTC=08
			DT	B'00000000',B'00111111'	;BTC=09
			DT	B'00000000',B'00111111'	;BTC=0A
			DT	B'11111111',B'00111111'	;BTC=0B
			DT	B'11111111',B'00111111'	;BTC=0C
			DT	B'11111111',B'00111111'	;BTC=0D
			DT	B'11111111',B'01111111'	;BTC=0E
			DT	B'11111111',B'11111111'	;BTC=0F


ORG	0X4500

FONT2_5
			MOVLW	0
			MOVWF	PCLATU,0
			MOVLW	0X45
			MOVWF	PCLATH,0

			MOVFF	BTCOUNT,WREG
			BCF		STATUS,C
			RLCF	WREG

		
			ADDWF	PCL,1,0
			DT	B'00000000',B'00111111'	;BTC=00
			DT	B'00000000',B'00111111'	;BTC=01
			DT	B'00111111',B'01111111'	;BTC=02
			DT	B'00111111',B'11111111'	;BTC=03
			DT	B'00111111',B'11111111'	;BTC=04
			DT	B'00111111',B'11111111'	;BTC=05
			DT	B'00000000',B'11111111'	;BTC=06
			DT	B'00000000',B'01111111'	;BTC=07
			DT	B'11111110',B'00111111'	;BTC=08
			DT	B'11111111',B'00111111'	;BTC=09
			DT	B'11111111',B'00111111'	;BTC=0A
			DT	B'00111111',B'00111111'	;BTC=0B
			DT	B'00011110',B'00111111'	;BTC=0C
			DT	B'10000000',B'01111111'	;BTC=0D
			DT	B'11000000',B'11111111'	;BTC=0E
			DT	B'11111111',B'11111111'	;BTC=0F


ORG	0X4600

FONT2_6
			MOVLW	0
			MOVWF	PCLATU,0
			MOVLW	0X46
			MOVWF	PCLATH,0

			MOVFF	BTCOUNT,WREG
			BCF		STATUS,C
			RLCF	WREG

		
			ADDWF	PCL,1,0
			DT	B'11000000',B'01111111'	;BTC=00
			DT	B'10000000',B'00111111'	;BTC=01
			DT	B'00011110',B'00111111'	;BTC=02
			DT	B'00111111',B'00111111'	;BTC=03
			DT	B'00111111',B'11111111'	;BTC=04
			DT	B'00011111',B'11111111'	;BTC=05
			DT	B'00000000',B'11111111'	;BTC=06
			DT	B'00000000',B'01111111'	;BTC=07
			DT	B'00011110',B'00111111'	;BTC=08
			DT	B'00111111',B'00111111'	;BTC=09
			DT	B'00111111',B'00111111'	;BTC=0A
			DT	B'00111111',B'00111111'	;BTC=0B
			DT	B'00011110',B'00111111'	;BTC=0C
			DT	B'10000000',B'01111111'	;BTC=0D
			DT	B'11000000',B'11111111'	;BTC=0E
			DT	B'11111111',B'11111111'	;BTC=0F

ORG	0X4700

FONT2_7
			MOVLW	0
			MOVWF	PCLATU,0
			MOVLW	0X47
			MOVWF	PCLATH,0

			MOVFF	BTCOUNT,WREG
			BCF		STATUS,C
			RLCF	WREG

		
			ADDWF	PCL,1,0
			DT	B'00000000',B'00111111' ;BTC=00
			DT	B'00000000',B'00111111' ;BTC=01
			DT	B'00111111',B'00111111' ;BTC=02
			DT	B'00111111',B'00111111' ;BTC=03
			DT	B'11111111',B'00111111' ;BTC=04
			DT	B'11111111',B'00111111' ;BTC=05
			DT	B'11111110',B'00111111' ;BTC=06
			DT	B'11111100',B'01111111' ;BTC=07
			DT	B'11111000',B'11111111' ;BTC=08
			DT	B'11110001',B'11111111' ;BTC=09
			DT	B'11100011',B'11111111' ;BTC=0A
			DT	B'11100111',B'11111111' ;BTC=0B
			DT	B'11100111',B'11111111' ;BTC=0C
			DT	B'11100111',B'11111111' ;BTC=0D
			DT	B'11100111',B'11111111' ;BTC=0E
			DT	B'11111111',B'11111111'	;BTC=0F


ORG	0X4800

FONT2_8
			MOVLW	0
			MOVWF	PCLATU,0
			MOVLW	0X48
			MOVWF	PCLATH,0

			MOVFF	BTCOUNT,WREG
			BCF		STATUS,C
			RLCF	WREG

		
			ADDWF	PCL,1,0
			DT	B'11000000',B'11111111'	;BTC=00
			DT	B'10000000',B'01111111'	;BTC=01
			DT	B'00011110',B'00111111'	;BTC=02
			DT	B'00111111',B'00111111'	;BTC=03
			DT	B'00111111',B'00111111'	;BTC=04
			DT	B'00011110',B'00111111'	;BTC=05
			DT	B'10000000',B'01111111'	;BTC=06
			DT	B'10000000',B'01111111'	;BTC=07
			DT	B'00011110',B'00111111'	;BTC=08
			DT	B'00111111',B'00111111'	;BTC=09
			DT	B'00111111',B'00111111'	;BTC=0A
			DT	B'00111111',B'00111111'	;BTC=0B
			DT	B'00011110',B'00111111'	;BTC=0C
			DT	B'10000000',B'01111111'	;BTC=0D
			DT	B'11000000',B'11111111'	;BTC=0E
			DT	B'11111111',B'11111111'	;BTC=0F


ORG	0X4900

FONT2_9
			MOVLW	0
			MOVWF	PCLATU,0
			MOVLW	0X49
			MOVWF	PCLATH,0

			MOVFF	BTCOUNT,WREG
			BCF		STATUS,C
			RLCF	WREG

		
			ADDWF	PCL,1,0
			DT	B'11000000',B'11111111'	;BTC=00
			DT	B'10000000',B'01111111'	;BTC=01
			DT	B'00011110',B'00111111'	;BTC=02
			DT	B'00111111',B'00111111'	;BTC=03
			DT	B'00111111',B'00111111'	;BTC=04
			DT	B'00111111',B'00111111'	;BTC=05
			DT	B'00011110',B'00111111'	;BTC=06
			DT	B'10000000',B'00111111'	;BTC=07
			DT	B'11000000',B'00111111'	;BTC=08
			DT	B'11111110',B'00111111'	;BTC=09
			DT	B'11111111',B'00111111'	;BTC=0A
			DT	B'00111111',B'00111111'	;BTC=0B
			DT	B'00011110',B'00111111'	;BTC=0C
			DT	B'10000000',B'01111111'	;BTC=0D
			DT	B'11000000',B'11111111'	;BTC=0E
			DT	B'11111111',B'11111111'	;BTC=0F
	


ORG 0X5000
;=======================	COMMANDS	===================
COMMAND
	CALL	TRNSDATA_CPU2GPU
	BTFSS	POS,0
	GOTO	CMD_BUZZOFF
	GOTO	CMD_BUZZON

CMD_BUZZOFF
	BCF LATD,2,0
GOTO	CMD_ST

CMD_BUZZON
	BSF LATD,2,0

CMD_ST
	MOVLW	0X00
	MOVWF	FONT

	MOVLW	0X05
	CPFSEQ	PERIOD
	GOTO	SHOW_PERIOD
	MOVLW	0X0A
	MOVWF	PERIOD
	
SHOW_PERIOD
	MOVFF	PERIOD,CHAR
	MOVLW	.30			;PERIOD
	MOVWF	CURSORX
	MOVLW	.1
	MOVWF	CURSORY
	CALL	DUMPDATA



	

	MOVFF	GT_MSEC,CHAR;MS
	MOVLW	.32
	MOVWF	CURSORX
	MOVLW	.16
	MOVWF	CURSORY
	CALL	DUMPDATA

	MOVLW	0X02
	MOVWF	FONT

;---------	SHOTCLOCK -------------

	MOVLW	.16
	MOVWF	CURSORY
	
	MOVLW	0X0A
	CPFSEQ	SC_TENS
	GOTO	SHOW_SCTENS
	GOTO	SKIP_SCTENS

SHOW_SCTENS

	MOVLW	0X01
	CPFSEQ	SC_TENS
	GOTO	SCT_N1


	MOVFF	SC_TENS,CHAR
	MOVLW	.43
	MOVWF	CURSORX
	CALL	DUMPDATA
	GOTO	SKIP_SCTENS

SCT_N1
	MOVFF	SC_TENS,CHAR
	MOVLW	.41
	MOVWF	CURSORX
	CALL	DUMPDATA

SKIP_SCTENS

	MOVLW	0X0A
	CPFSEQ	SC_ONES
	GOTO	SHOW_SCONES
	GOTO	SKIP_SCONES

SHOW_SCONES
	MOVFF	SC_ONES,CHAR
	MOVLW	.53
	MOVWF	CURSORX
	CALL	DUMPDATA
SKIP_SCONES
;---------------------------------


	MOVLW	0X01
	MOVWF	FONT

;---------	FOUL OUT -------------

	MOVLW	.12
	MOVWF	CURSORY
	
	MOVLW	0X00
	CPFSEQ	FOUL_H
	GOTO	SHOW_FH
	GOTO	SKIP_FH


SHOW_FH

	MOVFF	FOUL_H,CHAR
	MOVLW	0X0D
	ADDWF	CHAR
	MOVLW	.1
	MOVWF	CURSORX
	CALL	DUMPDATA
SKIP_FH

	MOVLW	0X00
	CPFSEQ	FOUL_G
	GOTO	SHOW_FG
	GOTO	SKIP_FG

SHOW_FG
	MOVLW	.12
	MOVWF	CURSORY
	MOVFF	FOUL_G,CHAR
	MOVLW	0X0D
	ADDWF	CHAR
	MOVLW	.49
	MOVWF	CURSORX
	CALL	DUMPDATA
SKIP_FG
;---------------------------------


;------------- TIME --------------
	MOVLW	.22
	MOVWF	CURSORY

	MOVLW	0X0A
	CPFSEQ	GTM_TENS
	GOTO	SHOW_GTMTENS
	GOTO	SKIP_GTMTENS
	
SHOW_GTMTENS	
	MOVFF	GTM_TENS,CHAR
	MOVLW	.1
	MOVWF	CURSORX
	CALL	DUMPDATA
SKIP_GTMTENS

	MOVLW	0X0A
	CPFSEQ	GTM_ONES
	GOTO	SHOW_GTMONES
	GOTO	SKIP_GTMONES


SHOW_GTMONES
	MOVFF	GTM_ONES,CHAR
	MOVLW	.5
	MOVWF	CURSORX
	CALL	DUMPDATA
SKIP_GTMONES


	MOVLW	0X0A
	MOVWF	CHAR
	MOVLW	.12
	MOVWF	CURSORX
	CALL	DUMPDATA


	MOVLW	0X0A
	CPFSEQ	GTS_TENS
	GOTO	SHOW_GTSTENS
	GOTO	SKIP_GTSTENS

SHOW_GTSTENS
	MOVFF	GTS_TENS,CHAR
	MOVLW	.15
	MOVWF	CURSORX
	CALL	DUMPDATA
SKIP_GTSTENS



	MOVLW	0X0A
	CPFSEQ	GTS_ONES
	GOTO	SHOW_GTSONES
	GOTO	SKIP_GTSONES

SHOW_GTSONES
	MOVFF	GTS_ONES,CHAR
	MOVLW	.22
	MOVWF	CURSORX
	CALL	DUMPDATA
SKIP_GTSONES

	MOVLW	0X0B		;DOT
	MOVWF	CHAR
	MOVLW	.29
	MOVWF	CURSORX
	CALL	DUMPDATA



;---------------------------------	



;-----------	GUEST SCORE	-------
	MOVLW	0X01
	MOVWF	FONT

	MOVLW	0
	MOVWF	CURSORY

	MOVLW	0X0A
	CPFSEQ	GS_H
	GOTO	SHOW_GSH
	GOTO	SKIP_GSH

SHOW_GSH
	MOVFF	GS_H,CHAR	
	MOVLW	.46
	MOVWF	CURSORX
	CALL	DUMPDATA
SKIP_GSH

	MOVLW	0X0A
	CPFSEQ	GS_T
	GOTO	SHOW_GST
	GOTO	SKIP_GST

SHOW_GST
	MOVFF	GS_T,CHAR
	MOVLW	.50
	MOVWF	CURSORX
	CALL	DUMPDATA
SKIP_GST

	MOVLW	0X0A
	CPFSEQ	GS_O
	GOTO	SHOW_GSO
	GOTO	SKIP_GSO

SHOW_GSO
	MOVFF	GS_O,CHAR
	MOVLW	.57
	MOVWF	CURSORX
	CALL	DUMPDATA
SKIP_GSO



;-----------------------------------
;-----------	BALL POSS	---------
	BTFSC	POS,1
	GOTO	SHOW_HPOS
	GOTO	SKIP_HPOS


SHOW_HPOS
	MOVLW	0X0C
	MOVWF	CHAR
	MOVLW	.21			;<
	MOVWF	CURSORX
	CALL	DUMPDATA
	GOTO	POS_END
SKIP_HPOS
	BTFSC	POS,2
	GOTO	SHOW_GPOS
	GOTO	SKIP_GPOS	


SHOW_GPOS
	MOVLW	0X0D		;>
	MOVWF	CHAR
	MOVLW	.39
	MOVWF	CURSORX
	CALL	DUMPDATA
SKIP_GPOS
	NOP

POS_END
NOP
;-----------------------------------
;-----------	HOME SCORE	---------

	MOVLW	0X0A
	CPFSEQ	HS_H
	GOTO	SHOW_HSH
	GOTO	SKIP_HSH


SHOW_HSH
	MOVFF	HS_H,CHAR
	MOVLW	.1
	MOVWF	CURSORX
	CALL	DUMPDATA
SKIP_HSH


	MOVLW	0X0A
	CPFSEQ	HS_T
	GOTO	SHOW_HST
	GOTO	SKIP_HST


SHOW_HST
	MOVFF	HS_T,CHAR
	MOVLW	.5
	MOVWF	CURSORX
	CALL	DUMPDATA
SKIP_HST

	MOVLW	0X0A
	CPFSEQ	HS_O
	GOTO	SHOW_HSO
	GOTO	SKIP_HSO


SHOW_HSO
	MOVFF	HS_O,CHAR
	MOVLW	.12
	MOVWF	CURSORX
	CALL	DUMPDATA
SKIP_HSO
;--------------------------------------

	CALL	TRNSDATA_CPU2GPU
RETURN
;==========================================================

TRNSDATA_CPU2GPU
	BTFSC	HEADERBIT,0
	GOTO	END_TRD

BCF		INTCON,7
	MOVFF	GPU_REG+00,W_TEMP
	MOVLW	0XAA
	CPFSEQ	W_TEMP
	GOTO	END_TRD

	MOVFF	GPU_REG+01,W_TEMP
	MOVLW	0X55
	CPFSEQ	W_TEMP
	GOTO	END_TRD

	MOVFF	GPU_REG+16,W_TEMP
	MOVLW	0XAB
	CPFSEQ	W_TEMP
	GOTO	END_TRD

	MOVLW	.20
	MOVWF	GPR_LOOP

	MOVLW	0X01
	MOVWF	FSR0H
	
	MOVLW	0X52
	MOVWF	FSR0L

	MOVLW	0X01
	MOVWF	FSR1H
	
	MOVLW	0X72
	MOVWF	FSR1L


TDCG0
	MOVFF	INDF1,INDF0

	INCF	FSR0L
	INCF	FSR1L
	DECFSZ	GPR_LOOP,F
	GOTO	TDCG0

END_TRD	

BSF		INTCON,7
	
RETURN	



INTERRUPT:
;================== INIT INT ==============================
;INITIALIZE	INTERRUPT
		MOVFF	STATUS,STATUS_TEMP	;SAVE STATUS REGISTER
		MOVFF	WREG,WREG_TEMP		;SAVE WORKING REGISTER
		MOVFF	BSR,BSR_TEMP		;SAVE BSR REGISTER
;==========================================================
	

	BCF		INTCON,7
	BTFSS	PIR1,5
	GOTO	END_INT

	INCF	FSR2L

	BTFSC	HEADERBIT,0
	GOTO	BUS_STARTED

	MOVFF	RCREG,GPREG_TEMP
	BCF		PIR1,5
	
	MOVLW	0XAA	;HEADER
	CPFSEQ	GPREG_TEMP
	GOTO	END_INT

	

	BSF		HEADERBIT,0

	MOVLW	0X01		;TEMP_RAM
	MOVWF	FSR2H
	
	MOVLW	0X70
	MOVWF	FSR2L

	MOVFF	GPREG_TEMP,INDF2
	GOTO	END_INT

BUS_STARTED
	MOVFF	RCREG,GPREG_TEMP
	BCF		PIR1,5

	
	MOVLW	0XAB
	CPFSEQ	GPREG_TEMP
	GOTO	BUS_IN

	MOVLW	0XAB
	MOVFF	WREG,INDF2
	BSF		FOOTERBIT,0
	BCF		HEADERBIT,0


	GOTO	END_INT

BUS_IN
	MOVFF	GPREG_TEMP,INDF2


END_INT
	BSF		INTCON,7


;================== PRERET INT ============================
;PREPARE TO RETURN
	MOVFF	STATUS_TEMP,STATUS	;RESTORE STATUS REGISTER
	MOVFF	WREG_TEMP,WREG		;RESTORE WORKING REGISTER
	MOVFF	BSR_TEMP,BSR		;RESTORE BSR REGISTER
	MOVFF	BSR,BSR_TEMP		;SAVE BSR REGISTER
;==========================================================
RETFIE
























END