;******************************************************************************
;                                                                             *
;    FILENAME:     2X2 P10 MODULE SCOREBOARD                                  *
;    DATE:         FEBRUARY 29, 2020                                          *
;    FILE VERSION: V1.0                                                       *
;                                                                             *
;    AUTHOR:       KENNYNEUTRON                                               *
;    COMPANY:      GER-PER ENGINEERING                                        *
;                                                                             * 
;******************************************************************************
;                                                                             *
;    FILES REQUIRED: P18F2620.INC                                             *
;                                                                             *
;******************************************************************************

	LIST P=18F4620			;DIRECTIVE TO DEFINE PROCESSOR
	#INCLUDE <P18F4620.INC>	;PROCESSOR SPECIFIC VARIABLE DEFINITIONS


;******************************************************************************
;CONFIGURATION BITS
;MICROCHIP HAS CHANGED THE FORMAT FOR DEFINING THE CONFIGURATION BITS, PLEASE 
;SEE THE .INC FILE FOR FUTHER DETAILS ON NOTATION.  BELOW ARE A FEW EXAMPLES.


;CONFIG



CONFIG	OSC		=	HSPLL	;OSCILLATOR
CONFIG	FCMEN	=	OFF		;FAIL-SAFE CLOCK MONITOR
CONFIG	IESO	=	OFF		;INTERNAL/EXTERNAL SWITCH-OVER
CONFIG	PWRT	=	OFF		;POWER-UP TIMER
CONFIG	BOREN	=	OFF		;BROWN OUT RESET ENABLE
CONFIG	PBADEN 	= 	OFF 	;PORTB A/D ENABLE
CONFIG	LPT1OSC =	OFF		;LOW-POWER TIMER1 OSCILLATOR
CONFIG	MCLRE 	= 	OFF		;MEMORY CLEAR EXTERNAL
CONFIG	STVREN 	= 	OFF		;STACK FULL/UNDERFLOW RESET ENABLE
CONFIG	LVP 	= 	OFF		;SINGLE	SUPPLY ICSP
CONFIG	XINST 	= 	OFF		;EXTENDED INSTRUCTION SET
CONFIG	DEBUG 	= 	OFF		;BACKGROUND DEBUGGERS
CONFIG	CP0 	= 	OFF		;CODE PROTECT


CONFIG	WDT		=	OFF		;WATCHDOG TIMER
;CONFIG	WDTPS	=	512		;WATCHDOG TIMER POSTSCALER 1:1= 4MSECONDS
;******************************************************************************
;VARIABLE DEFINITIONS
; THESE VARIABLES ARE ONLY NEEDED IF LOW PRIORITY INTERRUPTS ARE USED. 
; MORE VARIABLES MAY BE NEEDED TO STORE OTHER SPECIAL FUNCTION REGISTERS USED
; IN THE INTERRUPT ROUTINES.

		#DEFINE		OE_ON		BSF	LATD,7,0
		#DEFINE		OE_OFF		BCF	LATD,7,0


		#DEFINE		LAT_ON		BSF	LATD,5,0
		#DEFINE		LAT_OFF		BCF	LATD,5,0

		#DEFINE		CLK_ON		BSF	LATD,6,0
		#DEFINE		CLK_OFF		BCF	LATD,6,0

		#DEFINE		DAT_1		BSF	LATD,4,0
		#DEFINE		DAT_0		BCF	LATD,4,0

		#DEFINE		A_1			BSF	LATD,0,0
		#DEFINE		A_0			BCF	LATD,0,0

		#DEFINE		B_1			BSF	LATD,1,0
		#DEFINE		B_0			BCF LATD,1,0


		CBLOCK	0X16C
		W_TEMP	;VARIABLE USED FOR CONTEXT SAVING 
		STATUS_TEMP	;VARIABLE USED FOR CONTEXT SAVING
		BSR_TEMP	;VARIABLE USED FOR CONTEXT SAVING
		PCLATH_TEMP
		ENDC

		CBLOCK	0X000
			EXAMPLE		;EXAMPLE OF A VARIABLE IN ACCESS RAM
		ENDC

		CBLOCK	0X100
			DELAYUS, DELAYMS,  SPI_DATAIN, SEC,DELAYS,	;DELAY VARIABLES
			;=======================================================
			LOOP,DREGCOUNT,BYTECOUNT,TRAMCOUNT
			BTCOUNT,POINTER,DATAHOLD,LINESCAN
			CHAR,FONT,RAM_STPT

			CURSORX,CURSORY,CURSORY_TEMP,CURSORX_TEMP
			WIDTH,HEIGHT
		ENDC
		CBLOCK	0X120
			TEMPRAM:.32
		ENDC
		CBLOCK	0X200
			DRAM: 0XFE
		ENDC

;******************************************************************************
;EEPROM DATA
; DATA TO BE PROGRAMMED INTO THE DATA EEPROM IS DEFINED HERE

		ORG	0XF00000
			
	;	DE	"TEST DATA",0,1,2,3,4,5

;******************************************************************************
;RESET VECTOR
; THIS CODE WILL START EXECUTING WHEN A RESET OCCURS.

		ORG	0X0000

		GOTO	INIT		;GO TO START OF MAIN CODE

;******************************************************************************
;HIGH PRIORITY INTERRUPT VECTOR
; THIS CODE WILL START EXECUTING WHEN A HIGH PRIORITY INTERRUPT OCCURS OR
; WHEN ANY INTERRUPT OCCURS IF INTERRUPT PRIORITIES ARE NOT ENABLED.

		ORG	0X0008

		BRA	HIGHINT		;GO TO HIGH PRIORITY INTERRUPT ROUTINE

;******************************************************************************
;LOW PRIORITY INTERRUPT VECTOR AND ROUTINE
; THIS CODE WILL START EXECUTING WHEN A LOW PRIORITY INTERRUPT OCCURS.
; THIS CODE CAN BE REMOVED IF LOW PRIORITY INTERRUPTS ARE NOT USED.

		ORG	0X0018

		MOVFF	STATUS,STATUS_TEMP	;SAVE STATUS REGISTER
		MOVFF	WREG,W_TEMP		;SAVE WORKING REGISTER
		MOVFF	BSR,BSR_TEMP		;SAVE BSR REGISTER

;	*** LOW PRIORITY INTERRUPT CODE GOES HERE ***


		MOVFF	BSR_TEMP,BSR		;RESTORE BSR REGISTER
		MOVFF	W_TEMP,WREG				;RESTORE WORKING REGISTER
		MOVFF	STATUS_TEMP,STATUS	;RESTORE STATUS REGISTER
		RETFIE

;******************************************************************************
				;HIGH PRIORITY INTERRUPT ROUTINE
				; THE HIGH PRIORITY INTERRUPT CODE IS PLACED HERE TO AVOID CONFLICTING WITH
				; THE LOW PRIORITY INTERRUPT VECTOR.

HIGHINT:

				;	*** HIGH PRIORITY INTERRUPT CODE GOES HERE ***


		RETFIE	FAST

;$$$$$$$$$$$$$$$$$$$$$$$$	INITIALIZE		$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
INIT
;========================= INITIALIZE PORTA =================================
CLRF PORTA 		; INITIALIZE PORTA BY
				; CLEARING OUTPUT
				; DATA LATCHES
CLRF LATA 		; ALTERNATE METHOD
				; TO CLEAR OUTPUT
				; DATA LATCHES
MOVLW 07H 		; CONFIGURE A/D
MOVWF ADCON1	; FOR DIGITAL INPUTS
MOVWF 07H 		; CONFIGURE COMPARATORS
MOVWF CMCON 	; FOR DIGITAL INPUT
MOVLW 0CFH 		; VALUE USED TO
				; INITIALIZE DATA
				; DIRECTION
MOVWF TRISA 	; SET RA<7:6,3:0> AS INPUTS
				; RA<5:4> AS OUTPUTS
;============================================================================


;========================= INITIALIZE PORTB =================================
CLRF PORTB 		; INITIALIZE PORTB BY
				; CLEARING OUTPUT
				; DATA LATCHES
CLRF LATB 		; ALTERNATE METHOD
				; TO CLEAR OUTPUT
				; DATA LATCHES
MOVLW 0FH 		; SET RB<4:0> AS
MOVWF ADCON1 	; DIGITAL I/O PINS
				; (REQUIRED IF CONFIG BIT
				; PBADEN IS SET)
MOVLW 0			; VALUE USED TO
				; INITIALIZE DATA
				; DIRECTION
MOVWF TRISB 	; SET RB<3:0> AS INPUTS
				; RB<7:0> AS INPUTS
;============================================================================


;========================= INITIALIZE PORTC =================================
CLRF 	PORTC
CLRF 	LATC
MOVLW 	0XFF
MOVWF 	TRISC

;============================================================================ 


;========================= INITIALIZE PORTD =================================
CLRF 	PORTD 		; INITIALIZE PORTD BY
				; CLEARING OUTPUT
				; DATA LATCHES
CLRF 	LATD 		; ALTERNATE METHOD
				; TO CLEAR OUTPUT
				; DATA LATCHES
MOVLW 	0 		; VALUE USED TO
				; INITIALIZE DATA
				; DIRECTION
MOVWF 	TRISD 	; SET RD<3:0> AS INPUTS
				; RD<5:4> AS OUTPUTS
				; RD<7:6> AS INPUTS
;============================================================================

;========================= INITIALIZE PORTE =================================
CLRF PORTE 		; INITIALIZE PORTE BY
				; CLEARING OUTPUT
				; DATA LATCHES
CLRF LATE 		; ALTERNATE METHOD
				; TO CLEAR OUTPUT
				; DATA LATCHES
MOVLW 0AH 		; CONFIGURE A/D
MOVWF ADCON1 	; FOR DIGITAL INPUTS
MOVLW 0X07 		; VALUE USED TO
				; INITIALIZE DATA
				; DIRECTION
MOVWF TRISE,0 	; SET RE<0> AS INPUTS
				; RE<1> AS OUTPUTS
				; RE<2> AS INPUTS
;============================================================================




MOVLB	0X01


OE_ON
LAT_OFF
CLK_OFF


CALL	CLR_DRAM
CALL	CLR_TEMPRAM

CALL	PUTRAM

;#######################	MAIN PROGRAM  ###########################
MAIN

	CALL	DISPLAY
	



GOTO	MAIN

;####################################################################




MN_SUB

	MOVLW	.64
	MOVWF	LOOP
MN0
	BCF	LATD,4,0
	CLK_ON
	CLK_OFF
	
	BSF	LATD,4,0
	CLK_ON
	CLK_OFF
	DECFSZ	LOOP,F
	GOTO	MN0
	LAT_ON
	LAT_OFF

RETURN
;==========	DELAY USEC =========
DELAY_US

	MOVWF	DELAYUS

USEC

	NOP
 	NOP
	NOP
	NOP
DECFSZ	DELAYUS,F

GOTO	USEC

RETURN
;=================================



;=========== DELAY ONE MS ========
DELAY_ONEMS

	MOVLW	.5
	MOVWF	LOOP

MSEC
	MOVLW	.200
	CALL	DELAY_US
	DECFSZ	LOOP,F
	GOTO	MSEC

RETURN
;==================================


;=========== DELAY MS	==========
DELAY_MS
	
	MOVWF	DELAYMS
MSEC0
	CALL	DELAY_ONEMS
	DECFSZ	DELAYMS,F
	GOTO	MSEC0
RETURN
;=================================

;=========== DELAY	ONE	SECOND ===
DELAY_ONESEC

	MOVLW	.5
	MOVWF	SEC
SEC0
	MOVLW	.200
	CALL	DELAY_MS
	DECFSZ	SEC,F
	GOTO	SEC0
RETURN
;=================================

;==========	DELAY SEC ============
DELAY_SEC

	MOVWF	DELAYS
SEC1
	CALL	DELAY_ONESEC
	DECFSZ	DELAYS,F
	GOTO	SEC1
RETURN
;=================================

;=======================	CLEAR	RAM		===================
CLR_DRAM
	MOVLB		0X01	;BANK2
	MOVLW		0XFF
	MOVWF		POINTER

	MOVLW		0X02
	MOVWF		FSR0H,0

	MOVLW		0X00
	MOVWF		FSR0L,0  

	MOVLW		0XFF

CLR_DRAM0
	MOVWF		INDF0

	INCF		FSR0L
	DECFSZ		POINTER, F
	GOTO		CLR_DRAM0
	MOVWF		INDF0
	
	RETURN
;==============================================================

;=======================	CLEAR	TEMP	RAM		===================
CLR_TEMPRAM
	MOVLB		0X01	;BANK2
	MOVLW		0X1F
	MOVWF		POINTER

	MOVLW		0X01
	MOVWF		FSR0H,0

	MOVLW		0X20
	MOVWF		FSR0L,0  

	MOVLW		0XFF

CLR_TRAM0
	MOVWF		INDF0

	INCF		FSR0L
	DECFSZ		POINTER, F
	GOTO		CLR_TRAM0
	MOVWF		INDF0
	
	RETURN
;==============================================================

;=======================	DISPLAY	===========================
DISPLAY

	MOVLW	0X00
	MOVWF	LINESCAN
	MOVLW	0X02
	MOVWF	FSR0H,0
	MOVLW	0X00
	MOVWF	FSR0L,0
;CALL	COMMAND
	CALL	DATAREG
	OE_OFF
	LAT_ON
	LAT_OFF


	A_0
	B_0
	OE_ON
	MOVLW	.1
	CALL	DELAY_MS


	MOVLW	0X06
	MOVWF	LINESCAN
	MOVLW	0X02
	MOVWF	FSR0H,0
	MOVLW	0X40
	MOVWF	FSR0L,0
;	CALL	COMMAND
	CALL	DATAREG
	OE_OFF
	LAT_ON
	LAT_OFF


	A_1
	B_0
	OE_ON
	MOVLW	.1
	CALL	DELAY_MS


	MOVLW	0X0A
	MOVWF	LINESCAN
	MOVLW	0X02
	MOVWF	FSR0H,0
	MOVLW	0X80
	MOVWF	FSR0L,0
;CALL	COMMAND
	CALL	DATAREG
	OE_OFF
	LAT_ON
	LAT_OFF


	A_0
	B_1
	OE_ON
	MOVLW	.1
	CALL	DELAY_MS


	MOVLW	0X0E
	MOVWF	LINESCAN
	MOVLW	0X02
	MOVWF	FSR0H,0
	MOVLW	0XC0
	MOVWF	FSR0L,0
;CALL	COMMAND
	CALL	DATAREG
	OE_OFF
	LAT_ON
	LAT_OFF


	A_1
	B_1
	OE_ON
	MOVLW	.1
	CALL	DELAY_MS	


	OE_OFF
	MOVLW	.1
	CALL	DELAY_MS

RETURN
;==============================================================	


;=======================	REGISTER DATA	===================
DATAREG
	MOVLW	.64
	MOVWF	DREGCOUNT

DTR0
	MOVLW	0X08
	MOVWF	BYTECOUNT

	MOVFF	INDF0,DATAHOLD
DTR1
	RLCF	DATAHOLD
	
	BTFSS	STATUS,C
	GOTO	DTR1_BIT0
	GOTO	DTR1_BIT1

DTR1_BIT0
	DAT_0
	GOTO	DTR2

DTR1_BIT1
	DAT_1
	GOTO	DTR2
NOP
DTR2
	CLK_ON
	CLK_OFF
	DECFSZ	BYTECOUNT,F
	GOTO	DTR1

	INCF	FSR0L
	DECFSZ	DREGCOUNT,F
	GOTO	DTR0


RETURN
;==========================================================

;=======================	COMMANDS	===================
COMMAND
	MOVLW	0X01
	MOVWF	FONT

	MOVLW	2
	MOVWF	CHAR
	CALL	DUMPDATA

;CURSORX
;CURSORY


RETURN
;==========================================================



;=======================	DUMP	===================
DUMPDATA

	MOVLW	.32
	MOVWF	TRAMCOUNT

DMP0


	MOVLW	0
	MOVWF	PCLATU,0

	MOVLW	02
	MOVWF	PCLATH,0


	MOVFF	FONT,W_TEMP

	BCF		STATUS,C

	RLCF	W_TEMP


	MOVLW	0X02
	ADDWF	W_TEMP
	MOVFF	W_TEMP,WREG

ORG	0X0270
	
	ADDWF	PCL


	GOTO	DMP_FONT0
	
	GOTO	DMP_FONT1

	GOTO	DMP_FONT2

DMP_FONT0
	NOP

;==========	DUMP FONT 0X01 ===========
DMP_FONT1

	MOVLW		0X01
	MOVWF		FSR1H,0

	MOVLW		0X20
	MOVWF		FSR1L,0

	MOVLW	0
	MOVWF	BTCOUNT	

	MOVLW		.32
	MOVWF		POINTER

DMP_F10


	CALL	DUMP_FONT01

	MOVFF	WREG,INDF1

	INCF	FSR1L
	INCF	BTCOUNT
	DECFSZ	POINTER,F
	GOTO	DMP_F10
	

	NOP


RETURN
;=====================================


DMP_FONT2
	NOP

	

RETURN
;==========================================================





ORG 0X2000

DUMP_FONT01

	MOVLW	0
	MOVWF	PCLATU,0
	MOVLW	20
	MOVWF	PCLATH,0



	MOVFF	CHAR,W_TEMP

	BCF		STATUS,C

	RLCF	W_TEMP

	MOVLW	0X04
	ADDWF	W_TEMP
	MOVFF	W_TEMP,WREG

	ADDWF	PCL

	GOTO	FONT1_0		;CHAR= 0X00

	GOTO	FONT1_1		;CHAR= 0X01

	GOTO	FONT1_2		;CHAR= 0X02

	GOTO	FONT1_3		;CHAR= 0X03






FONT1_0
			MOVFF	BTCOUNT,WREG
			BCF		STATUS,C
			RLCF	WREG

		
			ADDWF	PCL,1,0
			DT	B'11111111',B'11111111';BTC=00
			DT	B'11111111',B'11111111';BTC=01
			DT	B'11111111',B'11111111';BTC=02
			DT	B'11111111',B'11111111';BTC=03
			DT	B'11111111',B'11111111';BTC=04
			DT	B'11111111',B'11111111';BTC=05
			DT	B'11111111',B'11111111';BTC=06
			DT	B'10000001',B'11111111';BTC=07
			DT	B'00000000',B'11111111';BTC=08
			DT	B'00111100',B'11111111';BTC=09
			DT	B'00111100',B'11111111';BTC=0A
			DT	B'00111100',B'11111111';BTC=0B
			DT	B'00111100',B'11111111';BTC=0C
			DT	B'00111100',B'11111111';BTC=0D
			DT	B'00000000',B'11111111';BTC=0E
			DT	B'10000001',B'11111111';BTC=0F


FONT1_1

			MOVFF	BTCOUNT,WREG
			BCF		STATUS,C
			RLCF	WREG

		
			ADDWF	PCL,1,0
			DT	B'11111111',B'11111111';BTC=00
			DT	B'11111111',B'11111111';BTC=01
			DT	B'11111111',B'11111111';BTC=02
			DT	B'11111111',B'11111111';BTC=03
			DT	B'11111111',B'11111111';BTC=04
			DT	B'11111111',B'11111111';BTC=05
			DT	B'11111111',B'11111111';BTC=06
			DT	B'11111111',B'11111111';BTC=07
			DT	B'00111111',B'11111111';BTC=08
			DT	B'00111111',B'11111111';BTC=09
			DT	B'00111111',B'11111111';BTC=0A
			DT	B'00111111',B'11111111';BTC=0B
			DT	B'00111111',B'11111111';BTC=0C
			DT	B'00111111',B'11111111';BTC=0D
			DT	B'00111111',B'11111111';BTC=0E
			DT	B'00111111',B'11111111';BTC=0F

FONT1_2

			MOVFF	BTCOUNT,WREG
			BCF		STATUS,C
			RLCF	WREG

		
			ADDWF	PCL,1,0
			DT	B'00111111',B'11111100';BTC=00
			DT	B'01010101',B'10101010';BTC=01
			DT	B'11111111',B'11111111';BTC=02
			DT	B'11111111',B'11111111';BTC=03
			DT	B'11111111',B'11111111';BTC=04
			DT	B'11111111',B'11111111';BTC=05
			DT	B'11111111',B'11111111';BTC=06
			DT	B'11111111',B'11111111';BTC=07
			DT	B'00111111',B'11111111';BTC=08
			DT	B'00111111',B'11111111';BTC=09
			DT	B'00111111',B'11111111';BTC=0A
			DT	B'00111111',B'11111111';BTC=0B
			DT	B'00111111',B'11111111';BTC=0C
			DT	B'00111111',B'11111111';BTC=0D
			DT	B'00000000',B'11111111';BTC=0E
			DT	B'00000000',B'11111111';BTC=0F

FONT1_3
	NOP

RETURN

ORG 0X3000

PUTRAM
MOVLB	0X02
;TIME
;1
	MOVLW	B'11001111'
	MOVWF	DRAM+0X03
	MOVLW	B'10001111'
	MOVWF	DRAM+0X43
	MOVLW	B'11001111'
	MOVWF	DRAM+0X83
	MOVLW	B'11001111'
	MOVWF	DRAM+0XC3
	MOVLW	B'11001111'
	MOVWF	DRAM+0X02
	MOVLW	B'11001111'
	MOVWF	DRAM+0X42
	MOVLW	B'11001111'
	MOVWF	DRAM+0X82
	MOVLW	B'11001111'
	MOVWF	DRAM+0XC2
	MOVLW	B'00000011'
	MOVWF	DRAM+0X01
	MOVLW	B'00000011'
	MOVWF	DRAM+0X41
;0
	MOVLW	B'10000011'
	MOVWF	DRAM+0X07
	MOVLW	B'00000001'
	MOVWF	DRAM+0X47
	MOVLW	B'00111001'
	MOVWF	DRAM+0X87
	MOVLW	B'00111001'
	MOVWF	DRAM+0XC7
	MOVLW	B'00111001'
	MOVWF	DRAM+0X06
	MOVLW	B'00111001'
	MOVWF	DRAM+0X46
	MOVLW	B'00111001'
	MOVWF	DRAM+0X86
	MOVLW	B'00111001'
	MOVWF	DRAM+0XC6
	MOVLW	B'00000001'
	MOVWF	DRAM+0X05
	MOVLW	B'10000011'
	MOVWF	DRAM+0X45
;:0
	MOVLW	B'11111100'
	MOVWF	DRAM+0X0B
	MOVLW	B'11111000'
	MOVWF	DRAM+0X4B
	MOVLW	B'10011001'
	MOVWF	DRAM+0X8B
	MOVLW	B'10011001'
	MOVWF	DRAM+0XCB
	MOVLW	B'11111001'
	MOVWF	DRAM+0X0A
	MOVLW	B'11111001'
	MOVWF	DRAM+0X4A
	MOVLW	B'10011001'
	MOVWF	DRAM+0X8A
	MOVLW	B'10011001'
	MOVWF	DRAM+0XCA
	MOVLW	B'11111000'
	MOVWF	DRAM+0X09
	MOVLW	B'11111100'
	MOVWF	DRAM+0X49

;0
	MOVLW	B'00011110'
	MOVWF	DRAM+0X0F
	MOVLW	B'00001100'
	MOVWF	DRAM+0X4F
	MOVLW	B'11001100'
	MOVWF	DRAM+0X8F
	MOVLW	B'11001100'
	MOVWF	DRAM+0XCF
	MOVLW	B'11001100'
	MOVWF	DRAM+0X0E
	MOVLW	B'11001100'
	MOVWF	DRAM+0X4E
	MOVLW	B'11001100'
	MOVWF	DRAM+0X8E
	MOVLW	B'11001100'
	MOVWF	DRAM+0XCE
	MOVLW	B'00001100'
	MOVWF	DRAM+0X0D
	MOVLW	B'00011110'
	MOVWF	DRAM+0X4D


;0
	MOVLW	B'00001111'
	MOVWF	DRAM+0X13
	MOVLW	B'00000111'
	MOVWF	DRAM+0X53
	MOVLW	B'11100111'
	MOVWF	DRAM+0X93
	MOVLW	B'11100111'
	MOVWF	DRAM+0XD3
	MOVLW	B'11100111'
	MOVWF	DRAM+0X12
	MOVLW	B'11100111'
	MOVWF	DRAM+0X52
	MOVLW	B'11100111'
	MOVWF	DRAM+0X92
	MOVLW	B'11100111'
	MOVWF	DRAM+0XD2
	MOVLW	B'00000110'
	MOVWF	DRAM+0X11
	MOVLW	B'00001110'
	MOVWF	DRAM+0X51


;.0
	MOVLW	B'11110000'
	MOVWF	DRAM+0X17
	MOVLW	B'11100111'
	MOVWF	DRAM+0X57
	MOVLW	B'11100111'
	MOVWF	DRAM+0X97
	MOVLW	B'11100111'
	MOVWF	DRAM+0XD7
	MOVLW	B'11100111'
	MOVWF	DRAM+0X16
	MOVLW	B'11110000'
	MOVWF	DRAM+0X56
	MOVLW	B'11111111'
	MOVWF	DRAM+0X96
	MOVLW	B'11111111'
	MOVWF	DRAM+0XD6
	MOVLW	B'01111111'
	MOVWF	DRAM+0X15
	MOVLW	B'01111111'
	MOVWF	DRAM+0X55

;.0
	MOVLW	B'01111111'
	MOVWF	DRAM+0X1B
	MOVLW	B'00111110'
	MOVWF	DRAM+0X5B
	MOVLW	B'00111110'
	MOVWF	DRAM+0X9B
	MOVLW	B'00111110'
	MOVWF	DRAM+0XDB
	MOVLW	B'00111111'
	MOVWF	DRAM+0X1A
	MOVLW	B'01111111'
	MOVWF	DRAM+0X5A
	MOVLW	B'11111110'
	MOVWF	DRAM+0X9A
	MOVLW	B'11111110'
	MOVWF	DRAM+0XDA
	MOVLW	B'11111110'
	MOVWF	DRAM+0X19
	MOVLW	B'11111111'
	MOVWF	DRAM+0X59

; PERIOD

	MOVLW	B'11111111'
	MOVWF	DRAM+0X1F
	MOVLW	B'00110001'
	MOVWF	DRAM+0X5F
	MOVLW	B'00110001'
	MOVWF	DRAM+0X9F
	MOVLW	B'00110001'
	MOVWF	DRAM+0XDF
	MOVLW	B'11111111'
	MOVWF	DRAM+0X1E
	MOVLW	B'11111111'
	MOVWF	DRAM+0X5E
	MOVLW	B'00110001'
	MOVWF	DRAM+0X9E
	MOVLW	B'00110001'
	MOVWF	DRAM+0XDE
	MOVLW	B'00110001'
	MOVWF	DRAM+0X1D
	MOVLW	B'11111111'
	MOVWF	DRAM+0X5D


;FOUL
	MOVLW	B'11000111'
	MOVWF	DRAM+0X80
	MOVWF	DRAM+0X40
	MOVWF	DRAM+0XC1







;LOWER HALF
	MOVLW	B'11000111'
	MOVWF	DRAM+0X23	
	MOVLW	B'11000111'
	MOVWF	DRAM+0X63	
	MOVLW	B'11111111'
	MOVWF	DRAM+0XA3	
	MOVLW	B'11000111'
	MOVWF	DRAM+0XE3	
	MOVLW	B'11000111'
	MOVWF	DRAM+0X22	
	

		
	MOVLW	B'11110000'
	MOVWF	DRAM+0X26
	MOVWF	DRAM+0XA7
	MOVWF	DRAM+0X27
	MOVWF	DRAM+0X84
	MOVWF	DRAM+0X04



	MOVLW	B'00111110'
	MOVWF	DRAM+0X2B	
	MOVLW	B'11111110'
	MOVWF	DRAM+0X6B	
	MOVLW	B'00111110'
	MOVWF	DRAM+0XAB	
	MOVLW	B'11111110'
	MOVWF	DRAM+0XEB	
	MOVLW	B'00111110'
	MOVWF	DRAM+0X2A

	MOVLW	B'0111111'
	MOVWF	DRAM+0X88




	MOVLW	B'11100011'	
	MOVWF	DRAM+0XFF
	MOVWF	DRAM+0X3E
	MOVWF	DRAM+0X3F
	MOVWF	DRAM+0X7F	
	MOVWF	DRAM+0X9C
	MOVWF	DRAM+0X5C
	MOVWF	DRAM+0XDD	


	MOVLW	B'00001111'
	MOVWF	DRAM+0X3A
	MOVWF	DRAM+0XBB
	MOVWF	DRAM+0X3B
	MOVWF	DRAM+0X18
	MOVWF	DRAM+0X98

;HOME SCORE
	MOVLW	B'11001111'
	MOVWF	DRAM+0XA2
	MOVLW	B'10001111'
	MOVWF	DRAM+0XE2
	MOVLW	B'11001111'
	MOVWF	DRAM+0X21
	MOVLW	B'11001111'
	MOVWF	DRAM+0X61
	MOVLW	B'11001111'
	MOVWF	DRAM+0XA1
	MOVLW	B'11001111'
	MOVWF	DRAM+0XE1
	MOVLW	B'11001111'
	MOVWF	DRAM+0X20
	MOVLW	B'11001111'
	MOVWF	DRAM+0X60
	MOVLW	B'00000011'
	MOVWF	DRAM+0XA0
	MOVLW	B'00000011'
	MOVWF	DRAM+0XE0

	MOVLW	B'10000001'
	MOVWF	DRAM+0XA6
	MOVLW	B'00000000'
	MOVWF	DRAM+0XE6
	MOVLW	B'00111100'
	MOVWF	DRAM+0X25
	MOVLW	B'11111001'
	MOVWF	DRAM+0X65
	MOVLW	B'11110011'
	MOVWF	DRAM+0XA5
	MOVLW	B'11100111'
	MOVWF	DRAM+0XE5
	MOVLW	B'11001111'
	MOVWF	DRAM+0X24
	MOVLW	B'10011111'
	MOVWF	DRAM+0X64
	MOVLW	B'00000000'
	MOVWF	DRAM+0XA4
	MOVLW	B'00000000'
	MOVWF	DRAM+0XE4

	

	MOVLW	B'11000000'
	MOVWF	DRAM+0XAA
	MOVLW	B'11000000'
	MOVWF	DRAM+0XEA
	MOVLW	B'11111111'
	MOVWF	DRAM+0X29
	MOVLW	B'11111111'
	MOVWF	DRAM+0X69
	MOVLW	B'11111000'
	MOVWF	DRAM+0XA9
	MOVLW	B'11111000'
	MOVWF	DRAM+0XE9
	MOVLW	B'11111111'
	MOVWF	DRAM+0X28
	MOVLW	B'11111111'
	MOVWF	DRAM+0X68
	MOVLW	B'11000000'
	MOVWF	DRAM+0XA8
	MOVLW	B'11000000'
	MOVWF	DRAM+0XE8


	MOVLW	B'01111111'
	MOVWF	DRAM+0XAE
	MOVLW	B'00111111'
	MOVWF	DRAM+0XEE
	MOVLW	B'00111110'
	MOVWF	DRAM+0X2D
	MOVLW	B'00111100'
	MOVWF	DRAM+0X6D
	MOVLW	B'01111000'
	MOVWF	DRAM+0XAD
	MOVLW	B'01111100'
	MOVWF	DRAM+0XED
	MOVLW	B'00111110'
	MOVWF	DRAM+0X2C
	MOVLW	B'00111111'
	MOVWF	DRAM+0X6C
	MOVLW	B'00111111'
	MOVWF	DRAM+0XAC
	MOVLW	B'01111111'
	MOVWF	DRAM+0XEC
	

;GUEST SCORE
	MOVLW	B'10011111'
	MOVWF	DRAM+0XB2
	MOVLW	B'00011100'
	MOVWF	DRAM+0XF2
	MOVLW	B'00011100'
	MOVWF	DRAM+0X31
	MOVLW	B'00011111'
	MOVWF	DRAM+0X71
	MOVLW	B'00011111'
	MOVWF	DRAM+0XB1
	MOVLW	B'00011111'
	MOVWF	DRAM+0XF1
	MOVLW	B'00011111'
	MOVWF	DRAM+0X30
	MOVLW	B'00011111'
	MOVWF	DRAM+0X70
	MOVLW	B'10011100'
	MOVWF	DRAM+0XB0
	MOVLW	B'11111100'
	MOVWF	DRAM+0XF0


	MOVLW	B'00111111'
	MOVWF	DRAM+0XB6
	MOVLW	B'00111110'
	MOVWF	DRAM+0XF6
	MOVLW	B'00111110'
	MOVWF	DRAM+0X35
	MOVLW	B'00111111'
	MOVWF	DRAM+0X75
	MOVLW	B'00111111'
	MOVWF	DRAM+0XB5
	MOVLW	B'00111111'
	MOVWF	DRAM+0XF5
	MOVLW	B'00111111'
	MOVWF	DRAM+0X34
	MOVLW	B'00111110'
	MOVWF	DRAM+0X74
	MOVLW	B'00001110'
	MOVWF	DRAM+0XB4
	MOVLW	B'00001110'
	MOVWF	DRAM+0XF4


	MOVLW	B'00000111'
	MOVWF	DRAM+0XBA
	MOVLW	B'00000011'
	MOVWF	DRAM+0XFA
	MOVLW	B'01110011'
	MOVWF	DRAM+0X39
	MOVLW	B'11100111'
	MOVWF	DRAM+0X79
	MOVLW	B'11001111'
	MOVWF	DRAM+0XB9
	MOVLW	B'10011111'
	MOVWF	DRAM+0XF9
	MOVLW	B'00111111'
	MOVWF	DRAM+0X38
	MOVLW	B'01111111'
	MOVWF	DRAM+0X78
	MOVLW	B'00000011'
	MOVWF	DRAM+0XB8
	MOVLW	B'00000011'
	MOVWF	DRAM+0XF8


	MOVLW	B'10000001'
	MOVWF	DRAM+0XBE
	MOVLW	B'00000000'
	MOVWF	DRAM+0XFE
	MOVLW	B'00111100'
	MOVWF	DRAM+0X3D
	MOVLW	B'11111001'
	MOVWF	DRAM+0X7D
	MOVLW	B'11110011'
	MOVWF	DRAM+0XBD
	MOVLW	B'11100111'
	MOVWF	DRAM+0XFD
	MOVLW	B'11001111'
	MOVWF	DRAM+0X3C
	MOVLW	B'10011111'
	MOVWF	DRAM+0X7C
	MOVLW	B'00000000'
	MOVWF	DRAM+0XBC
	MOVLW	B'00000000'
	MOVWF	DRAM+0XFC

;SHOTCLOCK

	MOVLW	B'00000011'
	MOVWF	DRAM+0X2F
	MOVLW	B'01111111'
	MOVWF	DRAM+0X6F
	MOVLW	B'01111111'
	MOVWF	DRAM+0XAF
	MOVLW	B'00000001'
	MOVWF	DRAM+0XEF
	MOVLW	B'00000001'
	MOVWF	DRAM+0X2E

	MOVLW	B'00000011'
	MOVWF	DRAM+0XCD
	MOVLW	B'00000001'
	MOVWF	DRAM+0X0C
	MOVLW	B'11111001'
	MOVWF	DRAM+0X4C
	MOVLW	B'11111001'
	MOVWF	DRAM+0X8C
	MOVLW	B'00000001'
	MOVWF	DRAM+0XCC

	MOVLW	B'11111110'
	MOVWF	DRAM+0XC9
	MOVLW	B'00111111'
	MOVWF	DRAM+0X08

;SC 4

	MOVLW	B'10000000'
	MOVWF	DRAM+0X33
	MOVLW	B'10000000'
	MOVWF	DRAM+0X73
	MOVLW	B'11111110'
	MOVWF	DRAM+0XB3
	MOVLW	B'11111110'
	MOVWF	DRAM+0XF3
	MOVLW	B'11111110'
	MOVWF	DRAM+0X32


	MOVLW	B'01111100'
	MOVWF	DRAM+0X37
	MOVWF	DRAM+0XB7
	MOVWF	DRAM+0X36
	MOVLW	B'01111111'
	MOVWF	DRAM+0X77
	MOVWF	DRAM+0XF7
	MOVWF	DRAM+0X94
	MOVWF	DRAM+0X14

	MOVLW	B'11111110'
	MOVWF	DRAM+0XD1
	MOVLW	B'11100110'
	MOVWF	DRAM+0X10
	MOVLW	B'11100110'
	MOVWF	DRAM+0X50
	MOVLW	B'11001110'
	MOVWF	DRAM+0X90
	MOVLW	B'10011110'
	MOVWF	DRAM+0XD0


	MOVLW	B'01111111'
	MOVWF	DRAM+0XD5
	MOVLW	B'01111100'
	MOVWF	DRAM+0X14
	MOVLW	B'01111111'
	MOVWF	DRAM+0X54
	MOVLW	B'01111100'
	MOVWF	DRAM+0X94
	MOVLW	B'01111111'
	MOVWF	DRAM+0XD4

	




MOVLB	0X01

RETURN
END