;/////////////////////////////////////////////////////////////////////////////////
;// Code Generator: BoostC Compiler - http://www.sourceboost.com
;// Version       : 7.03
;// License Type  : Pro License
;// Limitations   : PIC12,PIC16 max code size:Unlimited, max RAM banks:Unlimited
;/////////////////////////////////////////////////////////////////////////////////

//************************************************************************************
//**  
//**  File name:     C:\Users\gerpe\OneDrive\GER-PER 2016\Documents\KennyNeutron\EDICE\EDICE.c
//**  Title:         
//**  Description:   
//**  
//**  Generated by:  Flowcode v5.2.0.0
//**  Date:          Friday, April 03, 2020 19:49:03
//**  Licence:       Professional
//**  Registered to: xyz
//**  Licence key:   WUK7B9
//**  
//**  
//**  http://www.matrixmultimedia.com
//**  
//************************************************************************************


#define MX_PIC

#define MX_USES_UINT8 1
#define MX_USES_SINT16 0
#define MX_USES_CHAR 0
#define MX_USES_FLOAT 0
#define MX_USES_SINT32 0
#define MX_USES_BOOL 1
#define MX_USES_UINT16 0
#define MX_USES_UINT32 0
//Defines for microcontroller
#define P16F690
#define FC_CAL_PIC
#define MX_ADC
#define MX_ADC_TYPE_3
#define MX_ADC_BITS_10
#define MX_EE
#define MX_EE_TYPE2
#define MX_EE_SIZE 256
#define MX_SPI_1
#define MX_SPI_1_MISO_PORT portb
#define MX_SPI_1_MISO_TRIS trisb
#define MX_SPI_1_MISO_PIN 4
#define MX_SPI_1_MOSI_PORT portc
#define MX_SPI_1_MOSI_TRIS trisc
#define MX_SPI_1_MOSI_PIN 7
#define MX_SPI_1_CLK_PORT portb
#define MX_SPI_1_CLK_TRIS trisb
#define MX_SPI_1_CLK_PIN 6
#define MX_SPI_1_SS_PORT portb
#define MX_SPI_1_SS_TRIS trisb
#define MX_UART_1
#define MX_UART_1_TX_PORT portb
#define MX_UART_1_TX_TRIS trisb
#define MX_UART_1_TX_PIN 7
#define MX_UART_1_RX_PORT portb
#define MX_UART_1_RX_TRIS trisb
#define MX_UART_1_RX_PIN 5
#define MX_I2C
#define MX_MI2C
#define MX_I2C_1
#define MX_I2C_1_SDA_PORT portb
#define MX_I2C_1_SDA_TRIS trisb
#define MX_I2C_1_SDA_PIN 4
#define MX_I2C_1_SCL_PORT portb
#define MX_I2C_1_SCL_TRIS trisb
#define MX_I2C_1_SCL_PIN 6
#define MX_PWM
#define MX_PWM_CNT 1
#define MX_PWM_PSCA1
#define MX_PWM_PSCA4
#define MX_PWM_PSCA16
#define MX_PWM_1_PORT portc
#define MX_PWM_1_TRIS trisc
#define MX_PWM_1_PIN 5

//Functions
#define MX_CLK_SPEED 4000000
#ifdef _BOOSTC
#include <system.h>
#endif
#ifdef HI_TECH_C
#include <pic.h>
#endif

//Configuration data
#ifdef _BOOSTC
#pragma DATA 0x2007, 0x30d4
#endif
#ifdef HI_TECH_C
__CONFIG(0x30d4);
#endif

//Internal functions
#include "C:\Program Files (x86)\Flowcode\v5\FCD\internals.c"

//Macro function declarations
void FCM_RANDOMIZER();


//Variable declarations
#define FCV_TRUE (1)
#define FCV_FALSE (0)
MX_BOOL FCV_FLAG0 = (0);
0223  1042  	BCF gbl_FCV_FLAG0,0

MX_UINT8 FCV_R_BYTE = (0x0);
0224  01C3  	CLRF gbl_FCV_R_BYTE

MX_UINT8 FCV_SHOW_DIG;
MX_UINT8 FCV_DIGIT = (0x0);
0225  01C5  	CLRF gbl_FCV_DIGIT

MX_BOOL FCV_SW0 = (1);
0226  14C2  	BSF gbl_FCV_SW0,1

MX_UINT8 FCV_COUNTER0 = (0x0);
0227  01C6  	CLRF gbl_FCV_COUNTER0


MX_UINT8 FCLV_LOOP1;
MX_UINT8 FCLV_LOOP2;
MX_UINT8 FCLV_LOOP3;
MX_UINT8 FCLV_LOOP4;
MX_UINT8 FCLV_LOOP5;
MX_UINT8 FCLV_LOOP6;



//led7seg(0): //Defines:

/**** Macro Substitutions ****
a = Unique Reference
b = Segment Port letter
c = Common Port letter
d = Segment Pin 0
e = Segment Pin 1
f = Segment Pin 2
g = Segment Pin 3
h = Segment Pin 4
i = Segment Pin 5
j = Segment Pin 6
k = Segment Pin 7
l = Common Pin
m = Display Type 0=Common Cathode, 1=Common Anode
******************************/

#define SEVENSEG1_1_SEG_PORT		portc
#define SEVENSEG1_1_SEG_TRIS		trisc
#define SEVENSEG1_1_COM_PORT		portb
#define SEVENSEG1_1_COM_TRIS		trisb
#define SEVENSEG1_1_SEG_PIN0		0
#define SEVENSEG1_1_SEG_PIN1		1
#define SEVENSEG1_1_SEG_PIN2		2
#define SEVENSEG1_1_SEG_PIN3		3
#define SEVENSEG1_1_SEG_PIN4		4
#define SEVENSEG1_1_SEG_PIN5		5
#define SEVENSEG1_1_SEG_PIN6		6
#define SEVENSEG1_1_SEG_PIN7		7
#define SEVENSEG1_1_COM_PIN		4
#define SEVENSEG1_1_COM_TYPE		1

#ifndef SEVENSEG1_1_ARRAY
 #define SEVENSEG1_1_ARRAY
 ROMARRAY_S SEVENSEG1_1_SegmentArray ROMARRAY_E = {192, 249, 164, 176, 153, 146, 130, 248, 128, 152};		//Create ROM pattern array for the display
0228  3000  	MOVLW 0x00
0229  00CD  	MOVWF gbl_SEVENSEG1_1_SegmentArray

#endif




//led7seg(0): //Macro function declarations

void FCD_led7seg0_ShowDigit(MX_UINT8 Value, MX_UINT8 DecimalPoint);
void FCD_led7seg0_ClearDigit();



//led7seg(0): //Macro implementations


void FCD_led7seg0_ShowDigit(MX_UINT8 Value, MX_UINT8 DecimalPoint)

{
	
		MX_UINT8 cSegmentValue = SEVENSEG1_1_SegmentArray[Value % 10];
0049  084D  	MOVF gbl_SEVENSEG1_1_SegmentArray, W
004A  00DD  	MOVWF __rom_get_00000_arg_objNumb
004B  0858  	MOVF FCD_led7se_00052_arg_Value, W
004C  00DB  	MOVWF __rem_8_8_00000_arg_a
004D  300A  	MOVLW 0x0A
004E  00DC  	MOVWF __rem_8_8_00000_arg_b
004F  2038  	CALL __rem_8_8_00000
0050  0861  	MOVF CompTempVarRet220, W
0051  00DE  	MOVWF __rom_get_00000_arg_idx
0052  201C  	CALL __rom_get_00000
0053  00DA  	MOVWF FCD_led7se_00052_1_cSegmentValue


		if (DecimalPoint)
0054  08D9  	MOVF FCD_led7se_00052_arg_Decim_00053, F
0055  118A  	BCF PCLATH,3
0056  120A  	BCF PCLATH,4
0057  1903  	BTFSC STATUS,Z
0058  285C  	GOTO	label6
005C        label6

			cSegmentValue = cSegmentValue & 0x7F;			//Clear decimal point bit
0059  307F  	MOVLW 0x7F
005A  055A  	ANDWF FCD_led7se_00052_1_cSegmentValue, W
005B  00DA  	MOVWF FCD_led7se_00052_1_cSegmentValue


		//display the digit
	    #if (SEVENSEG1_1_COM_TYPE == 1)						//Common Anode - Low = on, High = off

			if (cSegmentValue & 0x01)
005C  1C5A  	BTFSS FCD_led7se_00052_1_cSegmentValue,0
005D  2863  	GOTO	label7
0063        label7

			{
				FC_CAL_Bit_High_DDR(SEVENSEG1_1_SEG_PORT, SEVENSEG1_1_SEG_TRIS, SEVENSEG1_1_SEG_PIN0);
005E  1683  	BSF STATUS, RP0
005F  1007  	BCF gbl_trisc,0
0060  1283  	BCF STATUS, RP0
0061  1407  	BSF gbl_portc,0

			}
			else
0062  2867  	GOTO	label8
0067        label8

			{
				FC_CAL_Bit_Low_DDR(SEVENSEG1_1_SEG_PORT, SEVENSEG1_1_SEG_TRIS, SEVENSEG1_1_SEG_PIN0);
0063  1683  	BSF STATUS, RP0
0064  1007  	BCF gbl_trisc,0
0065  1283  	BCF STATUS, RP0
0066  1007  	BCF gbl_portc,0

			}

			if (cSegmentValue & 0x02)
0067  1CDA  	BTFSS FCD_led7se_00052_1_cSegmentValue,1
0068  286E  	GOTO	label9
006E        label9

			{
				FC_CAL_Bit_High_DDR(SEVENSEG1_1_SEG_PORT, SEVENSEG1_1_SEG_TRIS, SEVENSEG1_1_SEG_PIN1);
0069  1683  	BSF STATUS, RP0
006A  1087  	BCF gbl_trisc,1
006B  1283  	BCF STATUS, RP0
006C  1487  	BSF gbl_portc,1

			}
			else
006D  2872  	GOTO	label10
0072        label10

			{
				FC_CAL_Bit_Low_DDR(SEVENSEG1_1_SEG_PORT, SEVENSEG1_1_SEG_TRIS, SEVENSEG1_1_SEG_PIN1);
006E  1683  	BSF STATUS, RP0
006F  1087  	BCF gbl_trisc,1
0070  1283  	BCF STATUS, RP0
0071  1087  	BCF gbl_portc,1

			}

			if (cSegmentValue & 0x04)
0072  1D5A  	BTFSS FCD_led7se_00052_1_cSegmentValue,2
0073  2879  	GOTO	label11
0079        label11

			{
				FC_CAL_Bit_High_DDR(SEVENSEG1_1_SEG_PORT, SEVENSEG1_1_SEG_TRIS, SEVENSEG1_1_SEG_PIN2);
0074  1683  	BSF STATUS, RP0
0075  1107  	BCF gbl_trisc,2
0076  1283  	BCF STATUS, RP0
0077  1507  	BSF gbl_portc,2

			}
			else
0078  287D  	GOTO	label12
007D        label12

			{
				FC_CAL_Bit_Low_DDR(SEVENSEG1_1_SEG_PORT, SEVENSEG1_1_SEG_TRIS, SEVENSEG1_1_SEG_PIN2);
0079  1683  	BSF STATUS, RP0
007A  1107  	BCF gbl_trisc,2
007B  1283  	BCF STATUS, RP0
007C  1107  	BCF gbl_portc,2

			}

			if (cSegmentValue & 0x08)
007D  1DDA  	BTFSS FCD_led7se_00052_1_cSegmentValue,3
007E  2884  	GOTO	label13
0084        label13

			{
				FC_CAL_Bit_High_DDR(SEVENSEG1_1_SEG_PORT, SEVENSEG1_1_SEG_TRIS, SEVENSEG1_1_SEG_PIN3);
007F  1683  	BSF STATUS, RP0
0080  1187  	BCF gbl_trisc,3
0081  1283  	BCF STATUS, RP0
0082  1587  	BSF gbl_portc,3

			}
			else
0083  2888  	GOTO	label14
0088        label14

			{
				FC_CAL_Bit_Low_DDR(SEVENSEG1_1_SEG_PORT, SEVENSEG1_1_SEG_TRIS, SEVENSEG1_1_SEG_PIN3);
0084  1683  	BSF STATUS, RP0
0085  1187  	BCF gbl_trisc,3
0086  1283  	BCF STATUS, RP0
0087  1187  	BCF gbl_portc,3

			}

			if (cSegmentValue & 0x10)
0088  1E5A  	BTFSS FCD_led7se_00052_1_cSegmentValue,4
0089  288F  	GOTO	label15
008F        label15

			{
				FC_CAL_Bit_High_DDR(SEVENSEG1_1_SEG_PORT, SEVENSEG1_1_SEG_TRIS, SEVENSEG1_1_SEG_PIN4);
008A  1683  	BSF STATUS, RP0
008B  1207  	BCF gbl_trisc,4
008C  1283  	BCF STATUS, RP0
008D  1607  	BSF gbl_portc,4

			}
			else
008E  2893  	GOTO	label16
0093        label16

			{
				FC_CAL_Bit_Low_DDR(SEVENSEG1_1_SEG_PORT, SEVENSEG1_1_SEG_TRIS, SEVENSEG1_1_SEG_PIN4);
008F  1683  	BSF STATUS, RP0
0090  1207  	BCF gbl_trisc,4
0091  1283  	BCF STATUS, RP0
0092  1207  	BCF gbl_portc,4

			}

			if (cSegmentValue & 0x20)
0093  1EDA  	BTFSS FCD_led7se_00052_1_cSegmentValue,5
0094  289A  	GOTO	label17
009A        label17

			{
				FC_CAL_Bit_High_DDR(SEVENSEG1_1_SEG_PORT, SEVENSEG1_1_SEG_TRIS, SEVENSEG1_1_SEG_PIN5);
0095  1683  	BSF STATUS, RP0
0096  1287  	BCF gbl_trisc,5
0097  1283  	BCF STATUS, RP0
0098  1687  	BSF gbl_portc,5

			}
			else
0099  289E  	GOTO	label18
009E        label18

			{
				FC_CAL_Bit_Low_DDR(SEVENSEG1_1_SEG_PORT, SEVENSEG1_1_SEG_TRIS, SEVENSEG1_1_SEG_PIN5);
009A  1683  	BSF STATUS, RP0
009B  1287  	BCF gbl_trisc,5
009C  1283  	BCF STATUS, RP0
009D  1287  	BCF gbl_portc,5

			}

			if (cSegmentValue & 0x40)
009E  1F5A  	BTFSS FCD_led7se_00052_1_cSegmentValue,6
009F  28A5  	GOTO	label19
00A5        label19

			{
				FC_CAL_Bit_High_DDR(SEVENSEG1_1_SEG_PORT, SEVENSEG1_1_SEG_TRIS, SEVENSEG1_1_SEG_PIN6);
00A0  1683  	BSF STATUS, RP0
00A1  1307  	BCF gbl_trisc,6
00A2  1283  	BCF STATUS, RP0
00A3  1707  	BSF gbl_portc,6

			}
			else
00A4  28A9  	GOTO	label20
00A9        label20

			{
				FC_CAL_Bit_Low_DDR(SEVENSEG1_1_SEG_PORT, SEVENSEG1_1_SEG_TRIS, SEVENSEG1_1_SEG_PIN6);
00A5  1683  	BSF STATUS, RP0
00A6  1307  	BCF gbl_trisc,6
00A7  1283  	BCF STATUS, RP0
00A8  1307  	BCF gbl_portc,6

			}

			if (cSegmentValue & 0x80)
00A9  1FDA  	BTFSS FCD_led7se_00052_1_cSegmentValue,7
00AA  28B0  	GOTO	label21
00B0        label21

			{
				FC_CAL_Bit_High_DDR(SEVENSEG1_1_SEG_PORT, SEVENSEG1_1_SEG_TRIS, SEVENSEG1_1_SEG_PIN7);
00AB  1683  	BSF STATUS, RP0
00AC  1387  	BCF gbl_trisc,7
00AD  1283  	BCF STATUS, RP0
00AE  1787  	BSF gbl_portc,7

			}
			else
00AF  28B4  	GOTO	label22
00B4        label22

			{
				FC_CAL_Bit_Low_DDR(SEVENSEG1_1_SEG_PORT, SEVENSEG1_1_SEG_TRIS, SEVENSEG1_1_SEG_PIN7);
00B0  1683  	BSF STATUS, RP0
00B1  1387  	BCF gbl_trisc,7
00B2  1283  	BCF STATUS, RP0
00B3  1387  	BCF gbl_portc,7

			}

			FC_CAL_Bit_High_DDR(SEVENSEG1_1_COM_PORT, SEVENSEG1_1_COM_TRIS, SEVENSEG1_1_COM_PIN);
00B4  1683  	BSF STATUS, RP0
00B5  1206  	BCF gbl_trisb,4
00B6  1283  	BCF STATUS, RP0
00B7  1606  	BSF gbl_portb,4


		#else												//Common Cathode - Low = off, High = on

			if (cSegmentValue & 0x01)
			{
				FC_CAL_Bit_Low_DDR(SEVENSEG1_1_SEG_PORT, SEVENSEG1_1_SEG_TRIS, SEVENSEG1_1_SEG_PIN0);
			}
			else
			{
				FC_CAL_Bit_High_DDR(SEVENSEG1_1_SEG_PORT, SEVENSEG1_1_SEG_TRIS, SEVENSEG1_1_SEG_PIN0);
			}

			if (cSegmentValue & 0x02)
			{
				FC_CAL_Bit_Low_DDR(SEVENSEG1_1_SEG_PORT, SEVENSEG1_1_SEG_TRIS, SEVENSEG1_1_SEG_PIN1);
			}
			else
			{
				FC_CAL_Bit_High_DDR(SEVENSEG1_1_SEG_PORT, SEVENSEG1_1_SEG_TRIS, SEVENSEG1_1_SEG_PIN1);
			}

			if (cSegmentValue & 0x04)
			{
				FC_CAL_Bit_Low_DDR(SEVENSEG1_1_SEG_PORT, SEVENSEG1_1_SEG_TRIS, SEVENSEG1_1_SEG_PIN2);
			}
			else
			{
				FC_CAL_Bit_High_DDR(SEVENSEG1_1_SEG_PORT, SEVENSEG1_1_SEG_TRIS, SEVENSEG1_1_SEG_PIN2);
			}

			if (cSegmentValue & 0x08)
			{
				FC_CAL_Bit_Low_DDR(SEVENSEG1_1_SEG_PORT, SEVENSEG1_1_SEG_TRIS, SEVENSEG1_1_SEG_PIN3);
			}
			else
			{
				FC_CAL_Bit_High_DDR(SEVENSEG1_1_SEG_PORT, SEVENSEG1_1_SEG_TRIS, SEVENSEG1_1_SEG_PIN3);
			}

			if (cSegmentValue & 0x10)
			{
				FC_CAL_Bit_Low_DDR(SEVENSEG1_1_SEG_PORT, SEVENSEG1_1_SEG_TRIS, SEVENSEG1_1_SEG_PIN4);
			}
			else
			{
				FC_CAL_Bit_High_DDR(SEVENSEG1_1_SEG_PORT, SEVENSEG1_1_SEG_TRIS, SEVENSEG1_1_SEG_PIN4);
			}

			if (cSegmentValue & 0x20)
			{
				FC_CAL_Bit_Low_DDR(SEVENSEG1_1_SEG_PORT, SEVENSEG1_1_SEG_TRIS, SEVENSEG1_1_SEG_PIN5);
			}
			else
			{
				FC_CAL_Bit_High_DDR(SEVENSEG1_1_SEG_PORT, SEVENSEG1_1_SEG_TRIS, SEVENSEG1_1_SEG_PIN5);
			}

			if (cSegmentValue & 0x40)
			{
				FC_CAL_Bit_Low_DDR(SEVENSEG1_1_SEG_PORT, SEVENSEG1_1_SEG_TRIS, SEVENSEG1_1_SEG_PIN6);
			}
			else
			{
				FC_CAL_Bit_High_DDR(SEVENSEG1_1_SEG_PORT, SEVENSEG1_1_SEG_TRIS, SEVENSEG1_1_SEG_PIN6);
			}

			if (cSegmentValue & 0x80)
			{
				FC_CAL_Bit_Low_DDR(SEVENSEG1_1_SEG_PORT, SEVENSEG1_1_SEG_TRIS, SEVENSEG1_1_SEG_PIN7);
			}
			else
			{
				FC_CAL_Bit_High_DDR(SEVENSEG1_1_SEG_PORT, SEVENSEG1_1_SEG_TRIS, SEVENSEG1_1_SEG_PIN7);
			}

			FC_CAL_Bit_Low_DDR(SEVENSEG1_1_COM_PORT, SEVENSEG1_1_COM_TRIS, SEVENSEG1_1_COM_PIN);

		#endif

}
00B8  0008  	RETURN


void FCD_led7seg0_ClearDigit()

{
	
		#if (SEVENSEG1_1_COM_TYPE == 1)
			FC_CAL_Bit_Low_DDR(SEVENSEG1_1_COM_PORT, SEVENSEG1_1_COM_TRIS, SEVENSEG1_1_COM_PIN);		//common anode
0032  1683  	BSF STATUS, RP0
0033  1303  	BCF STATUS, RP1
0034  1206  	BCF gbl_trisb,4
0035  1283  	BCF STATUS, RP0
0036  1206  	BCF gbl_portb,4

		#else
			FC_CAL_Bit_High_DDR(SEVENSEG1_1_COM_PORT, SEVENSEG1_1_COM_TRIS, SEVENSEG1_1_COM_PIN);		//common cathode
		#endif

}
0037  0008  	RETURN


#include "C:\Program Files (x86)\Flowcode\v5\CAL\includes.c"

//Macro implementations


void FCM_RANDOMIZER()

{

	//Calculation
	//Calculation:
	//  COUNTER0 = 0
	FCV_COUNTER0 = 0;
00B9  1283  	BCF STATUS, RP0
00BA  1303  	BCF STATUS, RP1
00BB  01C6  	CLRF gbl_FCV_COUNTER0


	//Loop
	//Loop: While COUNTER0 = 250 AND FLAG0 = 1
	while (1)
00BC        label23
0153  28BC  	GOTO	label23

	{

		//Calculation
		//Calculation:
		//  R_BYTE = R_BYTE + 1
		FCV_R_BYTE = FCV_R_BYTE + 1;
00BC  0A43  	INCF gbl_FCV_R_BYTE, W
00BD  00C3  	MOVWF gbl_FCV_R_BYTE


		//Input
		//Input: A2 -> SW0
		trisa = trisa | 0x04;
00BE  3004  	MOVLW 0x04
00BF  1683  	BSF STATUS, RP0
00C0  0405  	IORWF gbl_trisa, W
00C1  0085  	MOVWF gbl_trisa

		FCV_SW0 = ((porta & 0x04) == 0x04);
00C2  3004  	MOVLW 0x04
00C3  1283  	BCF STATUS, RP0
00C4  0505  	ANDWF gbl_porta, W
00C5  00D5  	MOVWF CompTempVar2190
00C6  01D6  	CLRF CompTempVar2191
00C7  3004  	MOVLW 0x04
00C8  0255  	SUBWF CompTempVar2190, W
00C9  1903  	BTFSC STATUS,Z
00CA  0AD6  	INCF CompTempVar2191, F
00CB  10C2  	BCF gbl_FCV_SW0,1
00CC  0856  	MOVF CompTempVar2191, W
00CD  1D03  	BTFSS STATUS,Z
00CE  14C2  	BSF gbl_FCV_SW0,1


		//Decision
		//Decision: SW0 = 0?
		if (FCV_SW0 == 0)
00CF  18C2  	BTFSC gbl_FCV_SW0,1
00D0  2943  	GOTO	label35
0143        label35

		{

			//Calculation
			//Calculation:
			//  FLAG0 = 1
			//  COUNTER0 = 0
			FCV_FLAG0 = 1;
00D1  1442  	BSF gbl_FCV_FLAG0,0

			FCV_COUNTER0 = 0;
00D2  01C6  	CLRF gbl_FCV_COUNTER0


			//Loop
			//Loop: Loop 10 times
			for (FCLV_LOOP4=0; FCLV_LOOP4<10; FCLV_LOOP4++)
00D3  01CA  	CLRF gbl_FCLV_LOOP4
00D4        label24
00D4  300A  	MOVLW 0x0A
00D5  024A  	SUBWF gbl_FCLV_LOOP4, W
00D6  1803  	BTFSC STATUS,C
00D7  28E9  	GOTO	label26
00E7  0ACA  	INCF gbl_FCLV_LOOP4, F
00E8  28D4  	GOTO	label24
00E9        label26

			{

				//Calculation
				//Calculation:
				//  DIGIT = DIGIT + 1
				FCV_DIGIT = FCV_DIGIT + 1;
00D8  0A45  	INCF gbl_FCV_DIGIT, W
00D9  00C5  	MOVWF gbl_FCV_DIGIT


				//Decision
				//Decision: DIGIT > 6?
				if (FCV_DIGIT > 6)
00DA  0845  	MOVF gbl_FCV_DIGIT, W
00DB  3C06  	SUBLW 0x06
00DC  1803  	BTFSC STATUS,C
00DD  28E0  	GOTO	label25
00E0        label25

				{

					//Calculation
					//Calculation:
					//  DIGIT = 1
					FCV_DIGIT = 1;
00DE  3001  	MOVLW 0x01
00DF  00C5  	MOVWF gbl_FCV_DIGIT


				// } else {

				}

				//Call Component Macro
				//Call Component Macro: ShowDigit(DIGIT, 0)
				FCD_led7seg0_ShowDigit(FCV_DIGIT, 0);
00E0  0845  	MOVF gbl_FCV_DIGIT, W
00E1  00D8  	MOVWF FCD_led7se_00052_arg_Value
00E2  01D9  	CLRF FCD_led7se_00052_arg_Decim_00053
00E3  2049  	CALL FCD_led7se_00052


				//Delay
				//Delay: 20 ms
				delay_ms(20);
00E4  3014  	MOVLW 0x14
00E5  00E2  	MOVWF delay_ms_00000_arg_del
00E6  2010  	CALL delay_ms_00000



			}

			//Loop
			//Loop: Loop 5 times
			for (FCLV_LOOP5=0; FCLV_LOOP5<5; FCLV_LOOP5++)
00E9  01CB  	CLRF gbl_FCLV_LOOP5
00EA        label27
00EA  3005  	MOVLW 0x05
00EB  024B  	SUBWF gbl_FCLV_LOOP5, W
00EC  1803  	BTFSC STATUS,C
00ED  28FF  	GOTO	label29
00FD  0ACB  	INCF gbl_FCLV_LOOP5, F
00FE  28EA  	GOTO	label27
00FF        label29

			{

				//Calculation
				//Calculation:
				//  DIGIT = DIGIT + 1
				FCV_DIGIT = FCV_DIGIT + 1;
00EE  0A45  	INCF gbl_FCV_DIGIT, W
00EF  00C5  	MOVWF gbl_FCV_DIGIT


				//Decision
				//Decision: DIGIT > 6?
				if (FCV_DIGIT > 6)
00F0  0845  	MOVF gbl_FCV_DIGIT, W
00F1  3C06  	SUBLW 0x06
00F2  1803  	BTFSC STATUS,C
00F3  28F6  	GOTO	label28
00F6        label28

				{

					//Calculation
					//Calculation:
					//  DIGIT = 1
					FCV_DIGIT = 1;
00F4  3001  	MOVLW 0x01
00F5  00C5  	MOVWF gbl_FCV_DIGIT


				// } else {

				}

				//Call Component Macro
				//Call Component Macro: ShowDigit(DIGIT, 0)
				FCD_led7seg0_ShowDigit(FCV_DIGIT, 0);
00F6  0845  	MOVF gbl_FCV_DIGIT, W
00F7  00D8  	MOVWF FCD_led7se_00052_arg_Value
00F8  01D9  	CLRF FCD_led7se_00052_arg_Decim_00053
00F9  2049  	CALL FCD_led7se_00052


				//Delay
				//Delay: 50 ms
				delay_ms(50);
00FA  3032  	MOVLW 0x32
00FB  00E2  	MOVWF delay_ms_00000_arg_del
00FC  2010  	CALL delay_ms_00000



			}

			//Loop
			//Loop: Loop 5 times
			for (FCLV_LOOP6=0; FCLV_LOOP6<5; FCLV_LOOP6++)
00FF  01CC  	CLRF gbl_FCLV_LOOP6
0100        label30
0100  3005  	MOVLW 0x05
0101  024C  	SUBWF gbl_FCLV_LOOP6, W
0102  1803  	BTFSC STATUS,C
0103  2915  	GOTO	label32
0113  0ACC  	INCF gbl_FCLV_LOOP6, F
0114  2900  	GOTO	label30
0115        label32

			{

				//Calculation
				//Calculation:
				//  DIGIT = DIGIT + 1
				FCV_DIGIT = FCV_DIGIT + 1;
0104  0A45  	INCF gbl_FCV_DIGIT, W
0105  00C5  	MOVWF gbl_FCV_DIGIT


				//Decision
				//Decision: DIGIT > 6?
				if (FCV_DIGIT > 6)
0106  0845  	MOVF gbl_FCV_DIGIT, W
0107  3C06  	SUBLW 0x06
0108  1803  	BTFSC STATUS,C
0109  290C  	GOTO	label31
010C        label31

				{

					//Calculation
					//Calculation:
					//  DIGIT = 1
					FCV_DIGIT = 1;
010A  3001  	MOVLW 0x01
010B  00C5  	MOVWF gbl_FCV_DIGIT


				// } else {

				}

				//Call Component Macro
				//Call Component Macro: ShowDigit(DIGIT, 0)
				FCD_led7seg0_ShowDigit(FCV_DIGIT, 0);
010C  0845  	MOVF gbl_FCV_DIGIT, W
010D  00D8  	MOVWF FCD_led7se_00052_arg_Value
010E  01D9  	CLRF FCD_led7se_00052_arg_Decim_00053
010F  2049  	CALL FCD_led7se_00052


				//Delay
				//Delay: 100 ms
				delay_ms(100);
0110  3064  	MOVLW 0x64
0111  00E2  	MOVWF delay_ms_00000_arg_del
0112  2010  	CALL delay_ms_00000



			}

			//Loop
			//Loop: While SW0 = 0
			while (1)
012B  2915  	GOTO	label32

			{

				//Input
				//Input: A2 -> SW0
				trisa = trisa | 0x04;
0115  3004  	MOVLW 0x04
0116  1683  	BSF STATUS, RP0
0117  0405  	IORWF gbl_trisa, W
0118  0085  	MOVWF gbl_trisa

				FCV_SW0 = ((porta & 0x04) == 0x04);
0119  3004  	MOVLW 0x04
011A  1283  	BCF STATUS, RP0
011B  0505  	ANDWF gbl_porta, W
011C  00D6  	MOVWF CompTempVar2193
011D  01D7  	CLRF CompTempVar2194
011E  3004  	MOVLW 0x04
011F  0256  	SUBWF CompTempVar2193, W
0120  1903  	BTFSC STATUS,Z
0121  0AD7  	INCF CompTempVar2194, F
0122  10C2  	BCF gbl_FCV_SW0,1
0123  0857  	MOVF CompTempVar2194, W
0124  1D03  	BTFSS STATUS,Z
0125  14C2  	BSF gbl_FCV_SW0,1



				if ((FCV_SW0 == 0) == 0) break;
0126  01D5  	CLRF CompTempVar2192
0127  1CC2  	BTFSS gbl_FCV_SW0,1
0128  0AD5  	INCF CompTempVar2192, F
0129  08D5  	MOVF CompTempVar2192, F
012A  1D03  	BTFSS STATUS,Z

			}

			//Delay
			//Delay: 1 ms
			delay_ms(1);
012C  3001  	MOVLW 0x01
012D  00E2  	MOVWF delay_ms_00000_arg_del
012E  2010  	CALL delay_ms_00000


			//Calculation
			//Calculation:
			//  SHOW_DIG = R_BYTE
			FCV_SHOW_DIG = FCV_R_BYTE;
012F  0843  	MOVF gbl_FCV_R_BYTE, W
0130  00C4  	MOVWF gbl_FCV_SHOW_DIG


			//Calculation
			//Calculation:
			//  SHOW_DIG = SHOW_DIG AND 0b00000111
			FCV_SHOW_DIG = FCV_SHOW_DIG & 7;
0131  3007  	MOVLW 0x07
0132  0544  	ANDWF gbl_FCV_SHOW_DIG, W
0133  00C4  	MOVWF gbl_FCV_SHOW_DIG


			//Decision
			//Decision: SHOW_DIG = 0?
			if (FCV_SHOW_DIG == 0)
0134  08C4  	MOVF gbl_FCV_SHOW_DIG, F
0135  1D03  	BTFSS STATUS,Z
0136  2939  	GOTO	label33
0139        label33

			{

				//Calculation
				//Calculation:
				//  SHOW_DIG = 1
				FCV_SHOW_DIG = 1;
0137  3001  	MOVLW 0x01
0138  00C4  	MOVWF gbl_FCV_SHOW_DIG


			// } else {

			}

			//Decision
			//Decision: SHOW_DIG = 7?
			if (FCV_SHOW_DIG == 7)
0139  0844  	MOVF gbl_FCV_SHOW_DIG, W
013A  3A07  	XORLW 0x07
013B  1D03  	BTFSS STATUS,Z
013C  293F  	GOTO	label34
013F        label34

			{

				//Calculation
				//Calculation:
				//  SHOW_DIG = 6
				FCV_SHOW_DIG = 6;
013D  3006  	MOVLW 0x06
013E  00C4  	MOVWF gbl_FCV_SHOW_DIG


			// } else {

			}

			//Call Component Macro
			//Call Component Macro: ShowDigit(SHOW_DIG, 0)
			FCD_led7seg0_ShowDigit(FCV_SHOW_DIG, 0);
013F  0844  	MOVF gbl_FCV_SHOW_DIG, W
0140  00D8  	MOVWF FCD_led7se_00052_arg_Value
0141  01D9  	CLRF FCD_led7se_00052_arg_Decim_00053
0142  2049  	CALL FCD_led7se_00052


		// } else {

		}

		//Delay
		//Delay: 50 ms
		delay_ms(50);
0143  3032  	MOVLW 0x32
0144  00E2  	MOVWF delay_ms_00000_arg_del
0145  2010  	CALL delay_ms_00000


		//Calculation
		//Calculation:
		//  COUNTER0 = COUNTER0 + 1
		FCV_COUNTER0 = FCV_COUNTER0 + 1;
0146  0A46  	INCF gbl_FCV_COUNTER0, W
0147  00C6  	MOVWF gbl_FCV_COUNTER0



		if ((FCV_COUNTER0 == 250 & FCV_FLAG0 == 1) != 0) break;
0148  01D4  	CLRF CompTempVar2189
0149  30FA  	MOVLW 0xFA
014A  0246  	SUBWF gbl_FCV_COUNTER0, W
014B  1903  	BTFSC STATUS,Z
014C  0AD4  	INCF CompTempVar2189, F
014D  01D3  	CLRF CompTempVar2188
014E  1842  	BTFSC gbl_FCV_FLAG0,0
014F  0AD3  	INCF CompTempVar2188, F
0150  0853  	MOVF CompTempVar2188, W
0151  0554  	ANDWF CompTempVar2189, W
0152  1903  	BTFSC STATUS,Z

	}

	//Call Component Macro
	//Call Component Macro: ClearDigit()
	FCD_led7seg0_ClearDigit();
0154  2032  	CALL FCD_led7se_00054


	//C Code
	//C Code:
	/*
	  Enter C code below this comment
	*/
	sleep();
0155  0063  	SLEEP


}
0156  0008  	RETURN




void main()

{
	//Initialization
	ansel = 0;
0157  1283  	BCF STATUS, RP0
0158  1703  	BSF STATUS, RP1
0159  019E  	CLRF gbl_ansel

anselh = 0;
015A  019F  	CLRF gbl_anselh



	//Interrupt initialization code
	option_reg = 0xC0;
015B  30C0  	MOVLW 0xC0
015C  1683  	BSF STATUS, RP0
015D  1303  	BCF STATUS, RP1
015E  0081  	MOVWF gbl_option_reg



	//Interrupt
	//Interrupt: Enable GP2INT
	st_bit(option_reg,INTEDG);
015F  1701  	BSF gbl_option_reg,6

	st_bit(intcon,GIE);
0160  178B  	BSF gbl_intcon,7

	st_bit(intcon, INTE);
0161  160B  	BSF gbl_intcon,4


	//Loop
	//Loop: While COUNTER0 = 100 AND FLAG0 = 1
	while (1)
0162        label36
01FA  2962  	GOTO	label36

	{

		//Calculation
		//Calculation:
		//  R_BYTE = R_BYTE + 1
		FCV_R_BYTE = FCV_R_BYTE + 1;
0162  1283  	BCF STATUS, RP0
0163  0A43  	INCF gbl_FCV_R_BYTE, W
0164  00C3  	MOVWF gbl_FCV_R_BYTE


		//Input
		//Input: A2 -> SW0
		trisa = trisa | 0x04;
0165  3004  	MOVLW 0x04
0166  1683  	BSF STATUS, RP0
0167  0405  	IORWF gbl_trisa, W
0168  0085  	MOVWF gbl_trisa

		FCV_SW0 = ((porta & 0x04) == 0x04);
0169  3004  	MOVLW 0x04
016A  1283  	BCF STATUS, RP0
016B  0505  	ANDWF gbl_porta, W
016C  00D0  	MOVWF CompTempVar2197
016D  01D1  	CLRF CompTempVar2198
016E  3004  	MOVLW 0x04
016F  0250  	SUBWF CompTempVar2197, W
0170  1903  	BTFSC STATUS,Z
0171  0AD1  	INCF CompTempVar2198, F
0172  10C2  	BCF gbl_FCV_SW0,1
0173  0851  	MOVF CompTempVar2198, W
0174  1D03  	BTFSS STATUS,Z
0175  14C2  	BSF gbl_FCV_SW0,1


		//Decision
		//Decision: SW0 = 0?
		if (FCV_SW0 == 0)
0176  18C2  	BTFSC gbl_FCV_SW0,1
0177  29EA  	GOTO	label48
01EA        label48

		{

			//Calculation
			//Calculation:
			//  FLAG0 = 1
			//  COUNTER0 = 0
			FCV_FLAG0 = 1;
0178  1442  	BSF gbl_FCV_FLAG0,0

			FCV_COUNTER0 = 0;
0179  01C6  	CLRF gbl_FCV_COUNTER0


			//Loop
			//Loop: Loop 10 times
			for (FCLV_LOOP1=0; FCLV_LOOP1<10; FCLV_LOOP1++)
017A  01C7  	CLRF gbl_FCLV_LOOP1
017B        label37
017B  300A  	MOVLW 0x0A
017C  0247  	SUBWF gbl_FCLV_LOOP1, W
017D  1803  	BTFSC STATUS,C
017E  2990  	GOTO	label39
018E  0AC7  	INCF gbl_FCLV_LOOP1, F
018F  297B  	GOTO	label37
0190        label39

			{

				//Calculation
				//Calculation:
				//  DIGIT = DIGIT + 1
				FCV_DIGIT = FCV_DIGIT + 1;
017F  0A45  	INCF gbl_FCV_DIGIT, W
0180  00C5  	MOVWF gbl_FCV_DIGIT


				//Decision
				//Decision: DIGIT > 6?
				if (FCV_DIGIT > 6)
0181  0845  	MOVF gbl_FCV_DIGIT, W
0182  3C06  	SUBLW 0x06
0183  1803  	BTFSC STATUS,C
0184  2987  	GOTO	label38
0187        label38

				{

					//Calculation
					//Calculation:
					//  DIGIT = 1
					FCV_DIGIT = 1;
0185  3001  	MOVLW 0x01
0186  00C5  	MOVWF gbl_FCV_DIGIT


				// } else {

				}

				//Call Component Macro
				//Call Component Macro: ShowDigit(DIGIT, 0)
				FCD_led7seg0_ShowDigit(FCV_DIGIT, 0);
0187  0845  	MOVF gbl_FCV_DIGIT, W
0188  00D8  	MOVWF FCD_led7se_00052_arg_Value
0189  01D9  	CLRF FCD_led7se_00052_arg_Decim_00053
018A  2049  	CALL FCD_led7se_00052


				//Delay
				//Delay: 20 ms
				delay_ms(20);
018B  3014  	MOVLW 0x14
018C  00E2  	MOVWF delay_ms_00000_arg_del
018D  2010  	CALL delay_ms_00000



			}

			//Loop
			//Loop: Loop 5 times
			for (FCLV_LOOP2=0; FCLV_LOOP2<5; FCLV_LOOP2++)
0190  01C8  	CLRF gbl_FCLV_LOOP2
0191        label40
0191  3005  	MOVLW 0x05
0192  0248  	SUBWF gbl_FCLV_LOOP2, W
0193  1803  	BTFSC STATUS,C
0194  29A6  	GOTO	label42
01A4  0AC8  	INCF gbl_FCLV_LOOP2, F
01A5  2991  	GOTO	label40
01A6        label42

			{

				//Calculation
				//Calculation:
				//  DIGIT = DIGIT + 1
				FCV_DIGIT = FCV_DIGIT + 1;
0195  0A45  	INCF gbl_FCV_DIGIT, W
0196  00C5  	MOVWF gbl_FCV_DIGIT


				//Decision
				//Decision: DIGIT > 6?
				if (FCV_DIGIT > 6)
0197  0845  	MOVF gbl_FCV_DIGIT, W
0198  3C06  	SUBLW 0x06
0199  1803  	BTFSC STATUS,C
019A  299D  	GOTO	label41
019D        label41

				{

					//Calculation
					//Calculation:
					//  DIGIT = 1
					FCV_DIGIT = 1;
019B  3001  	MOVLW 0x01
019C  00C5  	MOVWF gbl_FCV_DIGIT


				// } else {

				}

				//Call Component Macro
				//Call Component Macro: ShowDigit(DIGIT, 0)
				FCD_led7seg0_ShowDigit(FCV_DIGIT, 0);
019D  0845  	MOVF gbl_FCV_DIGIT, W
019E  00D8  	MOVWF FCD_led7se_00052_arg_Value
019F  01D9  	CLRF FCD_led7se_00052_arg_Decim_00053
01A0  2049  	CALL FCD_led7se_00052


				//Delay
				//Delay: 50 ms
				delay_ms(50);
01A1  3032  	MOVLW 0x32
01A2  00E2  	MOVWF delay_ms_00000_arg_del
01A3  2010  	CALL delay_ms_00000



			}

			//Loop
			//Loop: Loop 5 times
			for (FCLV_LOOP3=0; FCLV_LOOP3<5; FCLV_LOOP3++)
01A6  01C9  	CLRF gbl_FCLV_LOOP3
01A7        label43
01A7  3005  	MOVLW 0x05
01A8  0249  	SUBWF gbl_FCLV_LOOP3, W
01A9  1803  	BTFSC STATUS,C
01AA  29BC  	GOTO	label45
01BA  0AC9  	INCF gbl_FCLV_LOOP3, F
01BB  29A7  	GOTO	label43
01BC        label45

			{

				//Calculation
				//Calculation:
				//  DIGIT = DIGIT + 1
				FCV_DIGIT = FCV_DIGIT + 1;
01AB  0A45  	INCF gbl_FCV_DIGIT, W
01AC  00C5  	MOVWF gbl_FCV_DIGIT


				//Decision
				//Decision: DIGIT > 6?
				if (FCV_DIGIT > 6)
01AD  0845  	MOVF gbl_FCV_DIGIT, W
01AE  3C06  	SUBLW 0x06
01AF  1803  	BTFSC STATUS,C
01B0  29B3  	GOTO	label44
01B3        label44

				{

					//Calculation
					//Calculation:
					//  DIGIT = 1
					FCV_DIGIT = 1;
01B1  3001  	MOVLW 0x01
01B2  00C5  	MOVWF gbl_FCV_DIGIT


				// } else {

				}

				//Call Component Macro
				//Call Component Macro: ShowDigit(DIGIT, 0)
				FCD_led7seg0_ShowDigit(FCV_DIGIT, 0);
01B3  0845  	MOVF gbl_FCV_DIGIT, W
01B4  00D8  	MOVWF FCD_led7se_00052_arg_Value
01B5  01D9  	CLRF FCD_led7se_00052_arg_Decim_00053
01B6  2049  	CALL FCD_led7se_00052


				//Delay
				//Delay: 100 ms
				delay_ms(100);
01B7  3064  	MOVLW 0x64
01B8  00E2  	MOVWF delay_ms_00000_arg_del
01B9  2010  	CALL delay_ms_00000



			}

			//Loop
			//Loop: While SW0 = 0
			while (1)
01D2  29BC  	GOTO	label45

			{

				//Input
				//Input: A2 -> SW0
				trisa = trisa | 0x04;
01BC  3004  	MOVLW 0x04
01BD  1683  	BSF STATUS, RP0
01BE  0405  	IORWF gbl_trisa, W
01BF  0085  	MOVWF gbl_trisa

				FCV_SW0 = ((porta & 0x04) == 0x04);
01C0  3004  	MOVLW 0x04
01C1  1283  	BCF STATUS, RP0
01C2  0505  	ANDWF gbl_porta, W
01C3  00D1  	MOVWF CompTempVar2200
01C4  01D2  	CLRF CompTempVar2201
01C5  3004  	MOVLW 0x04
01C6  0251  	SUBWF CompTempVar2200, W
01C7  1903  	BTFSC STATUS,Z
01C8  0AD2  	INCF CompTempVar2201, F
01C9  10C2  	BCF gbl_FCV_SW0,1
01CA  0852  	MOVF CompTempVar2201, W
01CB  1D03  	BTFSS STATUS,Z
01CC  14C2  	BSF gbl_FCV_SW0,1



				if ((FCV_SW0 == 0) == 0) break;
01CD  01D0  	CLRF CompTempVar2199
01CE  1CC2  	BTFSS gbl_FCV_SW0,1
01CF  0AD0  	INCF CompTempVar2199, F
01D0  08D0  	MOVF CompTempVar2199, F
01D1  1D03  	BTFSS STATUS,Z

			}

			//Delay
			//Delay: 1 ms
			delay_ms(1);
01D3  3001  	MOVLW 0x01
01D4  00E2  	MOVWF delay_ms_00000_arg_del
01D5  2010  	CALL delay_ms_00000


			//Calculation
			//Calculation:
			//  SHOW_DIG = R_BYTE
			FCV_SHOW_DIG = FCV_R_BYTE;
01D6  0843  	MOVF gbl_FCV_R_BYTE, W
01D7  00C4  	MOVWF gbl_FCV_SHOW_DIG


			//Calculation
			//Calculation:
			//  SHOW_DIG = SHOW_DIG AND 0b00000111
			FCV_SHOW_DIG = FCV_SHOW_DIG & 7;
01D8  3007  	MOVLW 0x07
01D9  0544  	ANDWF gbl_FCV_SHOW_DIG, W
01DA  00C4  	MOVWF gbl_FCV_SHOW_DIG


			//Decision
			//Decision: SHOW_DIG = 0?
			if (FCV_SHOW_DIG == 0)
01DB  08C4  	MOVF gbl_FCV_SHOW_DIG, F
01DC  1D03  	BTFSS STATUS,Z
01DD  29E0  	GOTO	label46
01E0        label46

			{

				//Calculation
				//Calculation:
				//  SHOW_DIG = 1
				FCV_SHOW_DIG = 1;
01DE  3001  	MOVLW 0x01
01DF  00C4  	MOVWF gbl_FCV_SHOW_DIG


			// } else {

			}

			//Decision
			//Decision: SHOW_DIG = 7?
			if (FCV_SHOW_DIG == 7)
01E0  0844  	MOVF gbl_FCV_SHOW_DIG, W
01E1  3A07  	XORLW 0x07
01E2  1D03  	BTFSS STATUS,Z
01E3  29E6  	GOTO	label47
01E6        label47

			{

				//Calculation
				//Calculation:
				//  SHOW_DIG = 6
				FCV_SHOW_DIG = 6;
01E4  3006  	MOVLW 0x06
01E5  00C4  	MOVWF gbl_FCV_SHOW_DIG


			// } else {

			}

			//Call Component Macro
			//Call Component Macro: ShowDigit(SHOW_DIG, 0)
			FCD_led7seg0_ShowDigit(FCV_SHOW_DIG, 0);
01E6  0844  	MOVF gbl_FCV_SHOW_DIG, W
01E7  00D8  	MOVWF FCD_led7se_00052_arg_Value
01E8  01D9  	CLRF FCD_led7se_00052_arg_Decim_00053
01E9  2049  	CALL FCD_led7se_00052


		// } else {

		}

		//Delay
		//Delay: 50 ms
		delay_ms(50);
01EA  3032  	MOVLW 0x32
01EB  00E2  	MOVWF delay_ms_00000_arg_del
01EC  2010  	CALL delay_ms_00000


		//Calculation
		//Calculation:
		//  COUNTER0 = COUNTER0 + 1
		FCV_COUNTER0 = FCV_COUNTER0 + 1;
01ED  0A46  	INCF gbl_FCV_COUNTER0, W
01EE  00C6  	MOVWF gbl_FCV_COUNTER0



		if ((FCV_COUNTER0 == 100 & FCV_FLAG0 == 1) != 0) break;
01EF  01CF  	CLRF CompTempVar2196
01F0  3064  	MOVLW 0x64
01F1  0246  	SUBWF gbl_FCV_COUNTER0, W
01F2  1903  	BTFSC STATUS,Z
01F3  0ACF  	INCF CompTempVar2196, F
01F4  01CE  	CLRF CompTempVar2195
01F5  1842  	BTFSC gbl_FCV_FLAG0,0
01F6  0ACE  	INCF CompTempVar2195, F
01F7  084E  	MOVF CompTempVar2195, W
01F8  054F  	ANDWF CompTempVar2196, W
01F9  1903  	BTFSC STATUS,Z

	}

	//Call Component Macro
	//Call Component Macro: ClearDigit()
	FCD_led7seg0_ClearDigit();
01FB  2032  	CALL FCD_led7se_00054


	//C Code
	//C Code:
	/*
	  Enter C code below this comment
	*/
	sleep();
01FC  0063  	SLEEP


	mainendloop: goto mainendloop;
01FD        label49
01FD  29FD  	GOTO	label49

}


void MX_INTERRUPT_MACRO(void)

{
	//Handler code for [GP2INT]
	#ifndef MX_INTHANDLER_intcon_INTF
	#define MX_INTHANDLER_intcon_INTF
	if (ts_bit(intcon, INTF) && ts_bit(intcon, INTE))
022D  1C8B  	BTFSS gbl_intcon,1
022E  2A33  	GOTO	label51
022F  1E0B  	BTFSS gbl_intcon,4
0230  2A33  	GOTO	label51
0233        label51

	{
		#ifdef USE_FLOWCODE_ICD
			extern char ICD_Interrupt_Enable = 1;
		#endif	
		FCM_RANDOMIZER();
0231  20B9  	CALL FCM_RANDOM_00051

		cr_bit(intcon, INTF);
0232  108B  	BCF gbl_intcon,1

		#ifdef USE_FLOWCODE_ICD
			extern char ICD_Interrupt_Enable = 0;
		#endif	
	}
	#else
	#warning "This interrupt has previously been enabled, so the macro <RANDOMIZER> may never get called."
	#endif


}
0233  1283  	BCF STATUS, RP0
0234  1303  	BCF STATUS, RP1
0235  0E36  	SWAPF Int1BContext+D'2', W
0236  0084  	MOVWF FSR
0237  0E35  	SWAPF Int1BContext+D'1', W
0238  008A  	MOVWF PCLATH
0239  0E34  	SWAPF Int1BContext, W
023A  0083  	MOVWF STATUS
023B  0EFF  	SWAPF Int1Context, F
023C  0E7F  	SWAPF Int1Context, W
023D  0009  	RETFIE





////////////////////////////////////////
// Code with no source :-)
////////////////////////////////////////
0000  29FE  	GOTO	_startup

0004  00FF  	MOVWF Int1Context
0005  0E03  	SWAPF STATUS, W
0006  1283  	BCF STATUS, RP0
0007  1303  	BCF STATUS, RP1
0008  00B4  	MOVWF Int1BContext
0009  0E0A  	SWAPF PCLATH, W
000A  00B5  	MOVWF Int1BContext+D'1'
000B  0E04  	SWAPF FSR, W
000C  00B6  	MOVWF Int1BContext+D'2'
000D  118A  	BCF PCLATH,3
000E  120A  	BCF PCLATH,4
000F  2A2D  	GOTO	interrupt
0010        delay_ms_00000
0010        ; { delay_ms ; function begin
0010  08E2  	MOVF delay_ms_00000_arg_del, F
0011  1D03  	BTFSS STATUS,Z
0012  2814  	GOTO	label1
0013  0008  	RETURN
0014        label1
0014  30F9  	MOVLW 0xF9
0015        label2
0015  3EFF  	ADDLW 0xFF
0016  1D03  	BTFSS STATUS,Z
0017  2815  	GOTO	label2
0018  0000  	NOP
0019  0BE2  	DECFSZ delay_ms_00000_arg_del, F
001A  2814  	GOTO	label1
001B  0008  	RETURN
001C        ; } delay_ms function end

001C        __rom_get_00000
001C        ; { __rom_get ; function begin
001C  085E  	MOVF __rom_get_00000_arg_idx, W
001D  00DF  	MOVWF __rom_get_00000_1_romAddr
001E  3000  	MOVLW	HIGH( label3 )
001F  00E0  	MOVWF __rom_get_00000_1_romAddr+D'1'
0020  3028  	MOVLW	LOW( label3 )
0021  07DF  	ADDWF __rom_get_00000_1_romAddr, F
0022  1803  	BTFSC STATUS,C
0023  0AE0  	INCF __rom_get_00000_1_romAddr+D'1', F
0024  0860  	MOVF __rom_get_00000_1_romAddr+D'1', W
0025  008A  	MOVWF PCLATH
0026  085F  	MOVF __rom_get_00000_1_romAddr, W
0027  0082  	MOVWF PCL
0028        label3
0028  34C0  	RETLW 0xC0
0029  34F9  	RETLW 0xF9
002A  34A4  	RETLW 0xA4
002B  34B0  	RETLW 0xB0
002C  3499  	RETLW 0x99
002D  3492  	RETLW 0x92
002E  3482  	RETLW 0x82
002F  34F8  	RETLW 0xF8
0030  3480  	RETLW 0x80
0031  3498  	RETLW 0x98
0032        ; } __rom_get function end


0038        __rem_8_8_00000
0038        ; { __rem_8_8 ; function begin
0038  01E1  	CLRF CompTempVarRet220
0039  01DF  	CLRF __rem_8_8_00000_1_c
003A  01E0  	CLRF __rem_8_8_00000_1_i
003B        label4
003B  19E0  	BTFSC __rem_8_8_00000_1_i,3
003C  0008  	RETURN
003D  1003  	BCF STATUS,C
003E  0DDF  	RLF __rem_8_8_00000_1_c, F
003F  0DDB  	RLF __rem_8_8_00000_arg_a, F
0040  0DE1  	RLF CompTempVarRet220, F
0041  085C  	MOVF __rem_8_8_00000_arg_b, W
0042  0261  	SUBWF CompTempVarRet220, W
0043  1C03  	BTFSS STATUS,C
0044  2847  	GOTO	label5
0045  00E1  	MOVWF CompTempVarRet220
0046  145F  	BSF __rem_8_8_00000_1_c,0
0047        label5
0047  0AE0  	INCF __rem_8_8_00000_1_i, F
0048  283B  	GOTO	label4
0049        ; } __rem_8_8 function end


01FE        _startup
01FE  30D5  	MOVLW 0xD5
01FF  1283  	BCF STATUS, RP0
0200  1303  	BCF STATUS, RP1
0201  00A0  	MOVWF gbl_14_LSR
0202  30C4  	MOVLW 0xC4
0203  00A1  	MOVWF gbl_14_LSR+D'1'
0204  30BB  	MOVLW 0xBB
0205  00A2  	MOVWF gbl_14_LSR+D'2'
0206  30DC  	MOVLW 0xDC
0207  00A3  	MOVWF gbl_14_LSR+D'3'
0208  01A4  	CLRF gbl_15_gbl_aSig
0209  01A5  	CLRF gbl_15_gbl_aSig+D'1'
020A  01A6  	CLRF gbl_15_gbl_aSig+D'2'
020B  01A7  	CLRF gbl_15_gbl_aSig+D'3'
020C  01A8  	CLRF gbl_15_gbl_bSig
020D  01A9  	CLRF gbl_15_gbl_bSig+D'1'
020E  01AA  	CLRF gbl_15_gbl_bSig+D'2'
020F  01AB  	CLRF gbl_15_gbl_bSig+D'3'
0210  01AC  	CLRF gbl_15_gbl_zSig
0211  01AD  	CLRF gbl_15_gbl_zSig+D'1'
0212  01AE  	CLRF gbl_15_gbl_zSig+D'2'
0213  01AF  	CLRF gbl_15_gbl_zSig+D'3'
0214  01BC  	CLRF gbl_15_gbl_aExp
0215  01BD  	CLRF gbl_15_gbl_bExp
0216  01B7  	CLRF gbl_15_gbl_zExp
0217  01B8  	CLRF gbl_15_gbl_zExp+D'1'
0218  01BE  	CLRF gbl_15_gbl_aSign
0219  01BF  	CLRF gbl_15_gbl_bSign
021A  01C0  	CLRF gbl_15_gbl_zSign
021B  01C1  	CLRF gbl_15_gbl_zSigZero
021C  01B0  	CLRF gbl_15_gbl_ret
021D  01B1  	CLRF gbl_15_gbl_ret+D'1'
021E  01B2  	CLRF gbl_15_gbl_ret+D'2'
021F  01B3  	CLRF gbl_15_gbl_ret+D'3'
0220  01BA  	CLRF gbl_float_rounding_mode
0221  01BB  	CLRF gbl_float_exception_flags
0222  01B9  	CLRF gbl_float_detect_tininess

022A  118A  	BCF PCLATH,3
022B  120A  	BCF PCLATH,4
022C  2957  	GOTO	main

2007  30D4  	DW 0x30D4
