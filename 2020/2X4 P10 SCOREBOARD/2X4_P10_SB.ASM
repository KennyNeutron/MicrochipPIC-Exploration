;******************************************************************************
;                                                                             *
;    FILENAME:     2X4 P10 MODULE SCOREBOARD                                  *
;    DATE:         APRIL 8, 2020                                              *
;    FILE VERSION: V1.0                                                       *
;                                                                             *
;    AUTHOR:       KENNYNEUTRON                                               *
;    COMPANY:      GER-PER ENGINEERING                                        *
;                                                                             * 
;******************************************************************************
;                                                                             *
;    FILES REQUIRED: P18F4620.INC                                             *
;                                                                             *
;******************************************************************************

	LIST P=18F4620		;DIRECTIVE TO DEFINE PROCESSOR
	#INCLUDE <P18F4620.INC>	;PROCESSOR SPECIFIC VARIABLE DEFINITIONS
	#INCLUDE <P10_FONT2.INC>
	#INCLUDE <CLRRAMS&DELAY.INC>

;******************************************************************************
;CONFIGURATION BITS
;MICROCHIP HAS CHANGED THE FORMAT FOR DEFINING THE CONFIGURATION BITS, PLEASE 
;SEE THE .INC FILE FOR FUTHER DETAILS ON NOTATION.  BELOW ARE A FEW EXAMPLES.


;CONFIG



CONFIG	OSC		=	HSPLL	;OSCILLATOR
CONFIG	FCMEN	=	OFF		;FAIL-SAFE CLOCK MONITOR
CONFIG	IESO	=	OFF		;INTERNAL/EXTERNAL SWITCH-OVER
CONFIG	PWRT	=	ON		;POWER-UP TIMER
CONFIG	BOREN	=	ON		;BROWN OUT RESET ENABLE
CONFIG	PBADEN 	= 	OFF 	;PORTB A/D ENABLE
CONFIG	LPT1OSC =	OFF		;LOW-POWER TIMER1 OSCILLATOR
CONFIG	MCLRE 	= 	OFF		;MEMORY CLEAR EXTERNAL
CONFIG	STVREN 	= 	OFF		;STACK FULL/UNDERFLOW RESET ENABLE
CONFIG	LVP 	= 	OFF		;SINGLE	SUPPLY ICSP
CONFIG	XINST 	= 	OFF		;EXTENDED INSTRUCTION SET
CONFIG	DEBUG 	= 	OFF		;BACKGROUND DEBUGGERS
CONFIG	CP0 	= 	ON 		;CODE PROTECT
CONFIG	CP1		=	ON
CONFIG	CP2		=	ON
CONFIG	CP3		=	ON
CONFIG	CPD		=	ON
CPB_ON_5H
CPD_ON_5H
EBTR0_ON_7L
EBTR1_ON_7L
EBTR2_ON_7L
EBTR3_ON_7L

CONFIG	WDT	=	OFF		;WATCHDOG TIMER
;CONFIG	WDTPS	=	4	;WATCHDOG TIMER POSTSCALER 1:1= 4MSECONDS
;******************************************************************************
;VARIABLE DEFINITIONS
; THESE VARIABLES ARE ONLY NEEDED IF LOW PRIORITY INTERRUPTS ARE USED. 
; MORE VARIABLES MAY BE NEEDED TO STORE OTHER SPECIAL FUNCTION REGISTERS USED
; IN THE INTERRUPT ROUTINES.



		#DEFINE		OE_ON		BSF	LATD,7,0
		#DEFINE		OE_OFF		BCF	LATD,7,0

		#DEFINE		A_1			BSF	LATD,2,0
		#DEFINE		A_0			BCF	LATD,2,0

		#DEFINE		B_1			BSF	LATD,3,0
		#DEFINE		B_0			BCF LATD,3,0

;==================== MODULE 0 - MODULE 1  ================

		#DEFINE		DAT0_1		BSF	LATC,0,0
		#DEFINE		DAT0_0		BCF	LATC,0,0

		#DEFINE		LAT0_ON		BSF	LATC,5,0
		#DEFINE		LAT0_OFF	BCF	LATC,5,0

		#DEFINE		CLK0_ON		BSF	LATC,4,0
		#DEFINE		CLK0_OFF	BCF	LATC,4,0

;==================== MODULE 2 - MODULE 3  ================

		#DEFINE		DAT1_1		BSF	LATD,6,0
		#DEFINE		DAT1_0		BCF	LATD,6,0

		#DEFINE		LAT1_ON		BSF	LATD,5,0
		#DEFINE		LAT1_OFF	BCF	LATD,5,0

		#DEFINE		CLK1_ON		BSF	LATD,4,0
		#DEFINE		CLK1_OFF	BCF	LATD,4,0

;==================== MODULE 4 - MODULE 5  ================

		#DEFINE		DAT2_1		BSF	LATB,2,0
		#DEFINE		DAT2_0		BCF	LATB,2,0

		#DEFINE		LAT2_ON		BSF	LATB,1,0
		#DEFINE		LAT2_OFF	BCF	LATB,1,0

		#DEFINE		CLK2_ON		BSF	LATB,0,0
		#DEFINE		CLK2_OFF	BCF	LATB,0,0


;==================== MODULE 4 - MODULE 5  ================

		#DEFINE		DAT3_1		BSF	LATB,5,0
		#DEFINE		DAT3_0		BCF	LATB,5,0

		#DEFINE		LAT3_ON		BSF	LATB,4,0
		#DEFINE		LAT3_OFF	BCF	LATB,4,0

		#DEFINE		CLK3_ON		BSF	LATB,3,0
		#DEFINE		CLK3_OFF	BCF	LATB,3,0







		CBLOCK	0X000
		EXAMPLE		;EXAMPLE OF A VARIABLE IN ACCESS RAM
		ENDC

		CBLOCK	0X100
			DELAYUS, DELAYMS,  SPI_DATAIN, SEC,DELAYS,	;DELAY VARIABLES
			;=======================================================
			LOOP,DREGCOUNT,BYTECOUNT,TRAMCOUNT,TRAM_SHIFT
			BTCOUNT,POINTER,DATAHOLD,LINESCAN
			CHAR,FONT,RAM_STPT,RAM_STPTH,REG_STPT

			CURSORX,CURSORY,CURSORY_TEMP,CURSORX_TEMP
			WIDTH,HEIGHT

			COUNT0,COUNT1,COUNT2,WREG_TEMP
		ENDC


		CBLOCK	0X120
			TEMPRAM:.64	


		ENDC

		CBLOCK	0X16C
		W_TEMP	;VARIABLE USED FOR CONTEXT SAVING 
		STATUS_TEMP	;VARIABLE USED FOR CONTEXT SAVING
		BSR_TEMP	;VARIABLE USED FOR CONTEXT SAVING
		PCLATH_TEMP
		ENDC

		CBLOCK	0X180
			GPU_REG:.52
			GPR_LOOP,GPREG_TEMP,GP_COUNTER
			GPSTARTBIT,HEADERBIT,FOOTERBIT
			LOGO_LOOP0,LOGO_LOOP1,LOGO_DELAY
		ENDC

;		CBLOCK	0X1C0
;			HEADER0,HEADER1				;HEADERS
;			SC_TENS,SC_ONES,SC_MSEC		;SHOTCLOCK
;			GTM_TENS,GTM_ONES			;GAME TIME MINUTES
;			GTS_TENS,GTS_ONES,GT_MSEC	;GAME TIME SECONDS
;			POS							;BALL POSSESION
;			PERIOD
;			HS_H,HS_T,HS_O				;HOME SCORE
;			GS_H,GS_T,GS_O				;GUEST SCORE
;			FOUL_H,FOUL_G				;FOULS
;			TO_H,TO_G					;TIME-OUTS
;			FOOTER
;			RS_REC
;			TXREG_T ;TXREG TEMP
;
;			;W_TEMP	;VARIABLE USED FOR CONTEXT SAVING 
;		ENDC

		CBLOCK	0X200
			DRAM0: 0XFE
		ENDC

		CBLOCK  0X300
			DRAM1: 0XFE
		ENDC

		CBLOCK	0X1C0
			SB_REG: .24
		ENDC



;******************************************************************************
;EEPROM DATA
; DATA TO BE PROGRAMMED INTO THE DATA EEPROM IS DEFINED HERE

		ORG	0XF00000

		DE	"TEST DATA",0,1,2,3,4,5

;******************************************************************************
;RESET VECTOR
; THIS CODE WILL START EXECUTING WHEN A RESET OCCURS.

		ORG	0X0000

 	 			GOTO	INIT		;GO TO INITIALIZATION

;******************************************************************************
;HIGH PRIORITY INTERRUPT VECTOR
; THIS CODE WILL START EXECUTING WHEN A HIGH PRIORITY INTERRUPT OCCURS OR
; WHEN ANY INTERRUPT OCCURS IF INTERRUPT PRIORITIES ARE NOT ENABLED.

		ORG	0X0008

		CALL	INTERRUPT		;GO TO HIGH PRIORITY INTERRUPT ROUTINE
		RETFIE
;******************************************************************************
;LOW PRIORITY INTERRUPT VECTOR AND ROUTINE
; THIS CODE WILL START EXECUTING WHEN A LOW PRIORITY INTERRUPT OCCURS.
; THIS CODE CAN BE REMOVED IF LOW PRIORITY INTERRUPTS ARE NOT USED.

		ORG	0X0018

;		GOTO	INTERRUPT
		RETFIE
		MOVFF	STATUS,STATUS_TEMP	;SAVE STATUS REGISTER
		MOVFF	WREG,W_TEMP		;SAVE WORKING REGISTER
		MOVFF	BSR,BSR_TEMP		;SAVE BSR REGISTER

;	*** LOW PRIORITY INTERRUPT CODE GOES HERE ***


		MOVFF	BSR_TEMP,BSR		;RESTORE BSR REGISTER
		MOVFF	W_TEMP,WREG			;RESTORE WORKING REGISTER
		MOVFF	STATUS_TEMP,STATUS	;RESTORE STATUS REGISTER




;$$$$$$$$$$$$$$$$$$$$$$$$	INITIALIZE		$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
INIT
;========================= INITIALIZE PORTA =================================
CLRF PORTA 		; INITIALIZE PORTA BY
				; CLEARING OUTPUT
				; DATA LATCHES
CLRF LATA 		; ALTERNATE METHOD
				; TO CLEAR OUTPUT
				; DATA LATCHES
MOVLW 07H 		; CONFIGURE A/D
MOVWF ADCON1	; FOR DIGITAL INPUTS
MOVWF 07H 		; CONFIGURE COMPARATORS
MOVWF CMCON 	; FOR DIGITAL INPUT
MOVLW 0CFH 		; VALUE USED TO
				; INITIALIZE DATA
				; DIRECTION
MOVWF TRISA 	; SET RA<7:6,3:0> AS INPUTS
				; RA<5:4> AS OUTPUTS
;============================================================================


;========================= INITIALIZE PORTB =================================
CLRF PORTB 		; INITIALIZE PORTB BY
				; CLEARING OUTPUT
				; DATA LATCHES
CLRF LATB 		; ALTERNATE METHOD
				; TO CLEAR OUTPUT
				; DATA LATCHES
MOVLW 0FH 		; SET RB<4:0> AS
MOVWF ADCON1 	; DIGITAL I/O PINS
				; (REQUIRED IF CONFIG BIT
				; PBADEN IS SET)
MOVLW 0			; VALUE USED TO
				; INITIALIZE DATA
				; DIRECTION
MOVWF TRISB 	; SET RB<3:0> AS INPUTS
				; RB<7:0> AS INPUTS
;============================================================================



;========================= INITIALIZE PORTD =================================
CLRF 	PORTD 		; INITIALIZE PORTD BY
				; CLEARING OUTPUT
				; DATA LATCHES
CLRF 	LATD 		; ALTERNATE METHOD
				; TO CLEAR OUTPUT
				; DATA LATCHES
MOVLW 	0 		; VALUE USED TO
				; INITIALIZE DATA
				; DIRECTION
MOVWF 	TRISD 	; SET RD<3:0> AS INPUTS
				; RD<5:4> AS OUTPUTS
				; RD<7:6> AS INPUTS
;============================================================================

;========================= INITIALIZE PORTE =================================
CLRF PORTE 		; INITIALIZE PORTE BY
				; CLEARING OUTPUT
				; DATA LATCHES
CLRF LATE 		; ALTERNATE METHOD
				; TO CLEAR OUTPUT
				; DATA LATCHES
MOVLW 0AH 		; CONFIGURE A/D
MOVWF ADCON1 	; FOR DIGITAL INPUTS
MOVLW 0X07 		; VALUE USED TO
				; INITIALIZE DATA
				; DIRECTION
MOVWF TRISE,0 	; SET RE<0> AS INPUTS
				; RE<1> AS OUTPUTS
				; RE<2> AS INPUTS
;============================================================================


;========================= INITIALIZE PORTC =================================
CLRF 	PORTC
CLRF 	LATC
MOVLW 	0X80
MOVWF 	TRISC

MOVLB	0X0F

	;---CONFIGURE GENERAL INTERRUPTS
	MOVLW B'11000000' ;DISABLE ALL INTERRUPTS EXCEPT PERIPHERAL
	MOVWF INTCON ;INTERRUPT CONTROL REGISTERE


	;---CONFIGURE PERIPHERAL INTERRUPTS
	MOVLW B'00100000' ;DISABLE ALL PERIPHERAL INTERRUPTS EXCEPT RECEIVER
	MOVWF PIE1 ;PERIPHERAL INTERRUPT ENABLE/DISABLE
	MOVLW	0
	MOVWF	PIE2
	MOVWF	IPR1
	MOVWF	IPR2





	;---CONFIGURE SPBRG FOR DESIRED BAUD RATE
	MOVLW	0X05
	MOVWF	SPBRGH
	MOVLW 	.245
	MOVWF 	SPBRG

	BSF		BAUDCON,3


	MOVLW B'00100100' ;CONFIGURE TXSTA AS :
	MOVWF TXSTA ;


	MOVLW B'10000000' ;ENABLE SERIAL PORT
	MOVWF RCSTA ;RECEIVE STATUS REG


	BSF RCSTA,4 ;ENABLE USART RECEIVE
;============================================================================ 

MOVLB 0X01

LAT0_OFF
CLK0_OFF
DAT0_0

OE_OFF


CALL	CLR_DRAM0
CALL	CLR_DRAM1
CALL	CLR_TEMPRAM
CALL	DELAY_ONESEC
CALL	CLR_SBREG
;#######################	MAIN PROGRAM  ###########################
MAIN:

CALL	DISPLAY

GOTO	MAIN

;####################################################################

;=====================	CLEAR	DRAM0		===================
CLR_SBREG
	MOVLB		0X01	;BANK2
	MOVLW		.24
	MOVWF		POINTER

	MOVLW		0X01
	MOVWF		FSR0H,0

	MOVLW		0XC0
	MOVWF		FSR0L,0  

	MOVLW		0X00

CLR_SBREG0
	MOVWF		INDF0

	INCF		FSR0L
	DECFSZ		POINTER, F
	GOTO		CLR_SBREG0
	MOVWF		INDF0
	
RETURN
;==============================================================



ORG	0X1000
;=======================	DISPLAY	===========================
DISPLAY:

	MOVLW	0X00
	MOVWF	LINESCAN
;CALL	CLR_DRAM0
;CALL	CLR_DRAM1
CALL	CLR_DRAM0SCAN
CALL	CLR_DRAM1SCAN
CALL	COMMAND



	MOVLW	0X98
	MOVWF	REG_STPT
	CALL	DATAREG0
	MOVLW	0X98
	MOVWF	REG_STPT
	CALL	DATAREG1


	OE_OFF
	MOVLW	.5
	CALL	DELAY_US
	LAT0_ON
	LAT0_OFF
	LAT1_ON
	LAT1_OFF
	LAT2_ON
	LAT2_OFF
	LAT3_ON
	LAT3_OFF

	A_0
	B_0
;CALL	CLR_DRAM0
;CALL	CLR_DRAM1
	OE_ON
	NOP
	NOP
	NOP
	NOP


	MOVLW	0X04
	MOVWF	LINESCAN
;CALL	CLR_DRAM0
;CALL	CLR_DRAM1
CALL	CLR_DRAM0SCAN
CALL	CLR_DRAM1SCAN
CALL	COMMAND

	MOVLW	0X90
	MOVWF	REG_STPT
	CALL	DATAREG0
	MOVLW	0X90
	MOVWF	REG_STPT
	CALL	DATAREG1

	OE_OFF
	MOVLW	.5
	CALL	DELAY_US
	LAT0_ON
	LAT0_OFF
	LAT1_ON
	LAT1_OFF
	LAT2_ON
	LAT2_OFF
	LAT3_ON
	LAT3_OFF

	A_1
	B_0
	OE_ON
	NOP
	NOP
	NOP
	NOP


	MOVLW	0X08
	MOVWF	LINESCAN
;CALL	CLR_DRAM0
;CALL	CLR_DRAM1
CALL	CLR_DRAM0SCAN
CALL	CLR_DRAM1SCAN
CALL	COMMAND

	MOVLW	0X88
	MOVWF	REG_STPT
	CALL	DATAREG0
	MOVLW	0X88
	MOVWF	REG_STPT
	CALL	DATAREG1

	OE_OFF
	MOVLW	.5
	CALL	DELAY_US
	LAT0_ON
	LAT0_OFF
	LAT1_ON
	LAT1_OFF
	LAT2_ON
	LAT2_OFF
	LAT3_ON
	LAT3_OFF

	A_0
	B_1
	OE_ON
	NOP
	NOP
	NOP
	NOP



	MOVLW	0X0C
	MOVWF	LINESCAN
;CALL	CLR_DRAM0
;CALL	CLR_DRAM1
CALL	CLR_DRAM0SCAN
CALL	CLR_DRAM1SCAN
CALL	COMMAND

	MOVLW	0X80
	MOVWF	REG_STPT
	CALL	DATAREG0

	MOVLW	0X80
	MOVWF	REG_STPT
	CALL	DATAREG1

	OE_OFF
	MOVLW	.5
	CALL	DELAY_US
	LAT0_ON
	LAT0_OFF
	LAT1_ON
	LAT1_OFF
	LAT2_ON
	LAT2_OFF
	LAT3_ON
	LAT3_OFF

	A_1
	B_1
	OE_ON



RETURN
;==============================================================	















ORG 0X2000
;=======================	DUMP DATA	===================
DUMPDATA:
			MOVLW	0
			MOVWF	PCLATU,0
			MOVLW	0X20
			MOVWF	PCLATH,0


	MOVFF	FONT,WREG




	BCF		STATUS,C
	RLCF	WREG,0
	BCF		STATUS,C
	RLCF	WREG,0
	ADDWF	PCL

	GOTO	DMP_FONT00
	GOTO	DMP_FONT01
	GOTO	DMP_FONT02
	GOTO	DMP_FONT03

;DMP_FONT00:
	NOP

;DMP_FONT01:
;	NOP

;DMP_FONT02:
;	NOP

DMP_FONT03:
	NOP
					


RETURN
;==========================================================


;==========	DUMP FONT 0X00===========
DMP_FONT00
	MOVLW		0X01
	MOVWF		FSR1H,0

	MOVLW		0X40
	MOVWF		FSR1L,0

	MOVFF		LINESCAN,WREG
	ADDWF		FSR1L

	MOVFF		LINESCAN,BTCOUNT
	BCF			STATUS,C
	RRCF		BTCOUNT

	MOVLW		.2
	MOVWF		TRAMCOUNT

DMP_F00


	CALL	DUMP_FONT00

	MOVFF	WREG,INDF1

	MOVLW	0X10
	ADDWF	FSR1L

	MOVLW	0X08
	ADDWF	BTCOUNT
	
	

	DECFSZ	TRAMCOUNT,F
	GOTO	DMP_F00
	
	CALL	ADJ_CURSORX
	CALL	ADJ_CURSORY
	CALL	MOV_TEMPRAM2DRAM
	CALL	CLR_TEMPRAMSCAN
RETURN
;=====================================

;==========	DUMP FONT 0X01===========
DMP_FONT01

	MOVLW		0X01
	MOVWF		FSR1H,0

	MOVLW		0X20
	MOVWF		FSR1L,0

	MOVFF		LINESCAN,WREG
	ADDWF		FSR1L

	MOVFF		LINESCAN,BTCOUNT
	BCF			STATUS,C
	RRCF		BTCOUNT

	MOVLW		.4
	MOVWF		TRAMCOUNT



DMP_F10


	CALL	DUMP_FONT01

	MOVFF	WREG,INDF1

	MOVLW	0X10
	ADDWF	FSR1L

	MOVLW	0X08
	ADDWF	BTCOUNT
	


	DECFSZ	TRAMCOUNT,F
	GOTO	DMP_F10
	
	CALL	ADJ_CURSORX
	CALL	ADJ_CURSORY
	CALL	MOV_TEMPRAM2DRAM
	CALL	CLR_TEMPRAMSCAN
RETURN
;=====================================



;==========	DUMP FONT 0X02===========
DMP_FONT02

	MOVLW		0X01
	MOVWF		FSR1H,0

	MOVLW		0X20
	MOVWF		FSR1L,0


	MOVFF		LINESCAN,WREG
	ADDWF		FSR1L

	MOVFF		LINESCAN,BTCOUNT
	BCF			STATUS,C
	RRCF		BTCOUNT

	MOVLW		.4
	MOVWF		TRAMCOUNT

DMP_F20


	CALL	DUMP_FONT02

	MOVFF	WREG,INDF1

	INCF	FSR1L
	INCF	BTCOUNT

	CALL	DUMP_FONT02

	MOVFF	WREG,INDF1

	MOVLW	0X0F
	ADDWF	FSR1L
	
	MOVLW	0X07
	ADDWF	BTCOUNT
	


	DECFSZ	TRAMCOUNT,F
	GOTO	DMP_F20
	
	CALL	ADJ_CURSORX
	CALL	ADJ_CURSORY
	CALL	MOV_TEMPRAM2DRAM
	CALL	CLR_TEMPRAMSCAN


RETURN
;=====================================




ORG 0X2C00
DUMP_FONT00

	MOVLW	0
	MOVWF	PCLATU,0
	MOVLW	0X2C
	MOVWF	PCLATH,0


	MOVFF	CHAR,W_TEMP
	MOVLW	0X00
	CPFSEQ	W_TEMP
	GOTO	DMPF0_0		;IF CHAR!=0
	GOTO	DMPF0_1		;IF CHAR=0


DMPF0_0

	MOVFF	CHAR,WREG




	BCF		STATUS,C
	RLCF	WREG,0
	BCF		STATUS,C
	RLCF	WREG,0




DMPF0_1


	ADDWF	PCL
	GOTO	FONT0_0		;CHAR= 0X00			"0"

	GOTO	FONT0_1		;CHAR= 0X01			"1"

	GOTO	FONT0_2		;CHAR= 0X02			"2"

	GOTO	FONT0_3		;CHAR= 0X03			"3"

	GOTO	FONT0_4		;CHAR= 0X04			"4"

	GOTO	FONT0_5		;CHAR= 0X05			"5"

	GOTO	FONT0_6		;CHAR= 0X06			"6"

	GOTO	FONT0_7		;CHAR= 0X07			"7"		

	GOTO	FONT0_8		;CHAR= 0X08			"8"

	GOTO	FONT0_9		;CHAR= 0X09			"9"
	
	GOTO	FONT0_A		;CHAR= 0X0A			":"

	GOTO	FONT0_B		;CHAR= 0X0B			"A"

	GOTO	FONT0_C		;CHAR= 0X0C			"A"

	GOTO	FONT0_D		;CHAR= 0X0D			"A"

	GOTO	FONT0_E		;CHAR= 0X0E			"A"

	GOTO	FONT0_F		;CHAR= 0X0F			"A"

	GOTO	FONT0_10	;CHAR= 0X10			"A"

	GOTO	FONT0_11	;CHAR= 0X11			"B"
	
	GOTO	FONT0_12	;CHAR= 0X12			"C"
	
	GOTO	FONT0_13	;CHAR= 0X13			"D"

	GOTO	FONT0_14	;CHAR= 0X14			"E"

	GOTO	FONT0_15	;CHAR= 0X15			"F"

	GOTO	FONT0_16	;CHAR= 0X16			"G"

	GOTO	FONT0_17	;CHAR= 0X17			"H"

	GOTO	FONT0_18	;CHAR= 0X18			"I"

	GOTO	FONT0_19	;CHAR= 0X19			"J"

	GOTO	FONT0_1A	;CHAR= 0X1A			"K"

	GOTO	FONT0_1B	;CHAR= 0X1B			"L"

	GOTO	FONT0_1C	;CHAR= 0X1C			"M"

	GOTO	FONT0_1D	;CHAR= 0X1D			"N"

	GOTO	FONT0_1E	;CHAR= 0X1E			"O"

	GOTO	FONT0_1F	;CHAR= 0X14			"P"

	GOTO	FONT0_20	;CHAR= 0X1F			"Q"

	GOTO	FONT0_21	;CHAR= 0X14			"R"

	GOTO	FONT0_22	;CHAR= 0X14			"S"

	GOTO	FONT0_23	;CHAR= 0X14			"T"

	GOTO	FONT0_24	;CHAR= 0X14			"U"

	GOTO	FONT0_25	;CHAR= 0X14			"V"

	GOTO	FONT0_26	;CHAR= 0X14			"W"

	GOTO	FONT0_27	;CHAR= 0X14			"X"

	GOTO	FONT0_28	;CHAR= 0X14			"Y"

	GOTO	FONT0_29	;CHAR= 0X14			"Z"


RETURN

;==========================================================




ORG 0X2D00
DUMP_FONT01

	MOVLW	0
	MOVWF	PCLATU,0
	MOVLW	0X2D
	MOVWF	PCLATH,0


	MOVFF	CHAR,W_TEMP
	MOVLW	0X00
	CPFSEQ	W_TEMP
	GOTO	DMPF1_0		;IF CHAR!=0
	GOTO	DMPF1_1		;IF CHAR=0


DMPF1_0

	MOVFF	CHAR,WREG




	BCF		STATUS,C
	RLCF	WREG,0
	BCF		STATUS,C
	RLCF	WREG,0




DMPF1_1


	ADDWF	PCL
	GOTO	FONT1_0		;CHAR= 0X00			"0"

	GOTO	FONT1_1		;CHAR= 0X01			"1"

	GOTO	FONT1_2		;CHAR= 0X02			"2"

	GOTO	FONT1_3		;CHAR= 0X03			"3"

	GOTO	FONT1_4		;CHAR= 0X04			"4"

	GOTO	FONT1_5		;CHAR= 0X05			"5"

	GOTO	FONT1_6		;CHAR= 0X06			"6"

	GOTO	FONT1_7		;CHAR= 0X07			"7"		

	GOTO	FONT1_8		;CHAR= 0X08			"8"

	GOTO	FONT1_9		;CHAR= 0X09			"9"
	
	GOTO	FONT1_A		;CHAR= 0X0A			"BLANK"

	GOTO	FONT1_B		;CHAR= 0X0B			":"

	GOTO	FONT1_C		;CHAR= 0X0C			"<"

	GOTO	FONT1_D		;CHAR= 0X0D			">"

;==========================================================



ORG 0X2E00
DUMP_FONT02

	MOVLW	0
	MOVWF	PCLATU,0
	MOVLW	0X2E
	MOVWF	PCLATH,0


	MOVFF	CHAR,W_TEMP
	MOVLW	0X00
	CPFSEQ	W_TEMP
	GOTO	DMPF2_0		;IF CHAR!=0
	GOTO	DMPF2_1		;IF CHAR=0


DMPF2_0

	MOVFF	CHAR,WREG




	BCF		STATUS,C
	RLCF	WREG,0
	BCF		STATUS,C
	RLCF	WREG,0




DMPF2_1


	ADDWF	PCL
	GOTO	FONT2_0		;CHAR= 0X00			"0"

	GOTO	FONT2_1		;CHAR= 0X01			"1"

	GOTO	FONT2_2		;CHAR= 0X02			"2"

	GOTO	FONT2_3		;CHAR= 0X03			"3"

	GOTO	FONT2_4		;CHAR= 0X04			"4"

	GOTO	FONT2_5		;CHAR= 0X05			"5"

	GOTO	FONT2_6		;CHAR= 0X06			"6"

	GOTO	FONT2_7		;CHAR= 0X07			"7"		

	GOTO	FONT2_8		;CHAR= 0X08			"8"

	GOTO	FONT2_9		;CHAR= 0X09			"9"
	
	GOTO	FONT2_A		;CHAR= 0X0A			"BLANK"

	GOTO	FONT2_B		;CHAR= 0X0B			":"
;
;	GOTO	FONT2_C		;CHAR= 0X0C			"<"
;
;	GOTO	FONT2_D		;CHAR= 0X0D			">"
;


;==========================================================




ORG 0X3000
;===================	TEMPRAM TO DRAM 	===============
MOV_TEMPRAM2DRAM
	MOVLW	.32
	MOVWF	POINTER


	;CURSOR X AND Y CHECK	FOR RAM_STPT (STARTING POINT OF RAM)

	MOVLW	0X01		;TEMP_RAM
	MOVWF	FSR1H
	
	MOVLW	0X5C
	MOVWF	FSR1L

	MOVLW	0X02		;DATA_RAM
	MOVWF	FSR0H

	BTFSC	RAM_STPTH,0
	INCF	FSR0H

	MOVFF	RAM_STPT,FSR0L
	
	MOVLW	.16
	MOVWF	TRAMCOUNT

MOV_TR2DR0
	MOVFF	INDF1,WREG
	ANDWF	INDF0
	INCF	FSR1L
	INCF	FSR0L
	MOVFF	INDF1,WREG
	ANDWF	INDF0

	INCF	FSR1L
	INCF	FSR0L
	MOVFF	INDF1,WREG
	ANDWF	INDF0

	INCF	FSR1L
	INCF	FSR0L
	MOVFF	INDF1,WREG
	ANDWF	INDF0
	
	MOVLW	0X07
	SUBWF	FSR1L

	MOVLW	0X03
	SUBWF	FSR0L
	
	MOVLW	0X08
	ADDWF	FSR0L

	BTFSS	STATUS,C
	GOTO	MOV_TR2DR1

	INCF	FSR0H


MOV_TR2DR1
	DECFSZ	TRAMCOUNT,F
	GOTO	MOV_TR2DR0
	
	


	CLRF	RAM_STPTH


RETURN
;==========================================================


;===================	CURSOR X ADJUST	===================
ADJ_CURSORX
	MOVFF	CURSORX,W_TEMP
	MOVLW	.8
	CPFSGT	W_TEMP
	GOTO	CSRX_LTEQ8
	GOTO	CSRX_GTEQ8

CSRX_LTEQ8
	MOVLW	0X00
	MOVWF	RAM_STPT

	MOVFF	CURSORX,TRAM_SHIFT
	CALL	TRAMSHIFT

	RETURN



CSRX_GTEQ8
	MOVFF	CURSORX,W_TEMP
	MOVLW	.16
	CPFSGT	W_TEMP
	GOTO	CSRX_LTEQ16
	GOTO	CSRX_GTEQ16

CSRX_LTEQ16
	MOVLW	0X01
	MOVWF	RAM_STPT

	MOVFF	CURSORX,TRAM_SHIFT
	MOVLW	.8
	SUBWF	TRAM_SHIFT
	CALL	TRAMSHIFT

	RETURN

CSRX_GTEQ16
	MOVFF	CURSORX,W_TEMP
	MOVLW	.24
	CPFSGT	W_TEMP
	GOTO	CSRX_LTEQ24
	GOTO	CSRX_GTEQ24

CSRX_LTEQ24
	MOVLW	0X02
	MOVWF	RAM_STPT

	MOVFF	CURSORX,TRAM_SHIFT
	MOVLW	.16
	SUBWF	TRAM_SHIFT
	CALL	TRAMSHIFT

	RETURN	
CSRX_GTEQ24
	MOVFF	CURSORX,W_TEMP
	MOVLW	.32
	CPFSGT	W_TEMP
	GOTO	CSRX_LTEQ32
	GOTO	CSRX_GTEQ32

CSRX_LTEQ32
	MOVLW	0X03
	MOVWF	RAM_STPT

	MOVFF	CURSORX,TRAM_SHIFT
	MOVLW	.24
	SUBWF	TRAM_SHIFT
	CALL	TRAMSHIFT

	RETURN	
CSRX_GTEQ32
	MOVFF	CURSORX,W_TEMP
	MOVLW	.40
	CPFSGT	W_TEMP
	GOTO	CSRX_LTEQ40
	GOTO	CSRX_GTEQ40

CSRX_LTEQ40
	MOVLW	0X04
	MOVWF	RAM_STPT

	MOVFF	CURSORX,TRAM_SHIFT
	MOVLW	.32
	SUBWF	TRAM_SHIFT
	CALL	TRAMSHIFT

	RETURN	
CSRX_GTEQ40
	MOVFF	CURSORX,W_TEMP
	MOVLW	.48
	CPFSGT	W_TEMP
	GOTO	CSRX_LTEQ48
	GOTO	CSRX_GTEQ48

CSRX_LTEQ48
	MOVLW	0X05
	MOVWF	RAM_STPT

	MOVFF	CURSORX,TRAM_SHIFT
	MOVLW	.40
	SUBWF	TRAM_SHIFT
	CALL	TRAMSHIFT

	RETURN	
CSRX_GTEQ48
	MOVFF	CURSORX,W_TEMP
	MOVLW	.56
	CPFSGT	W_TEMP
	GOTO	CSRX_LTEQ56
	GOTO	CSRX_GTEQ56

CSRX_LTEQ56
	MOVLW	0X06
	MOVWF	RAM_STPT

	MOVFF	CURSORX,TRAM_SHIFT
	MOVLW	.48
	SUBWF	TRAM_SHIFT
	CALL	TRAMSHIFT

	RETURN	
CSRX_GTEQ56
	MOVLW	0X07
	MOVWF	RAM_STPT

	MOVFF	CURSORX,TRAM_SHIFT
	MOVLW	.56
	SUBWF	TRAM_SHIFT
	CALL	TRAMSHIFT

	RETURN



RETURN
 

ORG 0X3200
TRAMSHIFT

	MOVLW	0
	MOVWF	PCLATU,0
	MOVLW	0X32
	MOVWF	PCLATH,0


	MOVFF	LINESCAN,WREG
	BCF		STATUS,C
	RRCF	WREG
	BCF		STATUS,C
	RRCF	WREG



	BCF		STATUS,C
	RLCF	WREG,0
	BCF		STATUS,C
	RLCF	WREG,0
	ADDWF	PCL

	GOTO	TRS0
	GOTO	TRS1
	GOTO	TRS2
	GOTO	TRS3



TRS0

		BSF		STATUS,C
		RRCF	TEMPRAM+00
		RRCF	TEMPRAM+01
		RRCF	TEMPRAM+02
		RRCF	TEMPRAM+03

		BSF		STATUS,C
		RRCF	TEMPRAM+10
		RRCF	TEMPRAM+11
		RRCF	TEMPRAM+12
		RRCF	TEMPRAM+13

		BSF		STATUS,C
		RRCF	TEMPRAM+20
		RRCF	TEMPRAM+21
		RRCF	TEMPRAM+22
		RRCF	TEMPRAM+23

		BSF		STATUS,C
		RRCF	TEMPRAM+30
		RRCF	TEMPRAM+31
		RRCF	TEMPRAM+32
		RRCF	TEMPRAM+33


		BSF		STATUS,C
		RRCF	TEMPRAM+40
		RRCF	TEMPRAM+41
		RRCF	TEMPRAM+42
		RRCF	TEMPRAM+43

		BSF		STATUS,C
		RRCF	TEMPRAM+50
		RRCF	TEMPRAM+51
		RRCF	TEMPRAM+52
		RRCF	TEMPRAM+53
	DECFSZ	TRAM_SHIFT,F
	GOTO	TRS0

RETURN

TRS1
		BSF		STATUS,C
		RRCF	TEMPRAM+04
		RRCF	TEMPRAM+05
		RRCF	TEMPRAM+06
		RRCF	TEMPRAM+07

		BSF		STATUS,C
		RRCF	TEMPRAM+14
		RRCF	TEMPRAM+15
		RRCF	TEMPRAM+16
		RRCF	TEMPRAM+17

		BSF		STATUS,C
		RRCF	TEMPRAM+24
		RRCF	TEMPRAM+25
		RRCF	TEMPRAM+26
		RRCF	TEMPRAM+27

		BSF		STATUS,C
		RRCF	TEMPRAM+34
		RRCF	TEMPRAM+35
		RRCF	TEMPRAM+36
		RRCF	TEMPRAM+37

		BSF		STATUS,C
		RRCF	TEMPRAM+44
		RRCF	TEMPRAM+45
		RRCF	TEMPRAM+46
		RRCF	TEMPRAM+47

		BSF		STATUS,C
		RRCF	TEMPRAM+54
		RRCF	TEMPRAM+55
		RRCF	TEMPRAM+56
		RRCF	TEMPRAM+57



	DECFSZ	TRAM_SHIFT,F
	GOTO	TRS1
RETURN

TRS2
		BSF		STATUS,C
		RRCF	TEMPRAM+08
		RRCF	TEMPRAM+09
		RRCF	TEMPRAM+0A
		RRCF	TEMPRAM+0B	

		BSF		STATUS,C
		RRCF	TEMPRAM+18
		RRCF	TEMPRAM+19
		RRCF	TEMPRAM+1A
		RRCF	TEMPRAM+1B

		BSF		STATUS,C
		RRCF	TEMPRAM+28
		RRCF	TEMPRAM+29
		RRCF	TEMPRAM+2A
		RRCF	TEMPRAM+2B

		BSF		STATUS,C
		RRCF	TEMPRAM+38
		RRCF	TEMPRAM+39
		RRCF	TEMPRAM+3A
		RRCF	TEMPRAM+3B

		BSF		STATUS,C
		RRCF	TEMPRAM+48
		RRCF	TEMPRAM+49
		RRCF	TEMPRAM+4A
		RRCF	TEMPRAM+4B

		BSF		STATUS,C
		RRCF	TEMPRAM+58
		RRCF	TEMPRAM+59
		RRCF	TEMPRAM+5A
		RRCF	TEMPRAM+5B
	DECFSZ	TRAM_SHIFT,F
	GOTO	TRS2
RETURN

TRS3
		BSF		STATUS,C
		RRCF	TEMPRAM+0C
		RRCF	TEMPRAM+0D
		RRCF	TEMPRAM+0E
		RRCF	TEMPRAM+0F

		BSF		STATUS,C
		RRCF	TEMPRAM+1C
		RRCF	TEMPRAM+1D
		RRCF	TEMPRAM+1E
		RRCF	TEMPRAM+1F

		BSF		STATUS,C
		RRCF	TEMPRAM+2C
		RRCF	TEMPRAM+2D
		RRCF	TEMPRAM+2E
		RRCF	TEMPRAM+2F

		BSF		STATUS,C
		RRCF	TEMPRAM+3C
		RRCF	TEMPRAM+3D
		RRCF	TEMPRAM+3E
		RRCF	TEMPRAM+3F

		BSF		STATUS,C
		RRCF	TEMPRAM+4C
		RRCF	TEMPRAM+4D
		RRCF	TEMPRAM+4E
		RRCF	TEMPRAM+4F

		BSF		STATUS,C
		RRCF	TEMPRAM+5C
		RRCF	TEMPRAM+5D
		RRCF	TEMPRAM+5E
		RRCF	TEMPRAM+5F

	DECFSZ	TRAM_SHIFT,F
	GOTO	TRS3
RETURN

;======================================================


;===================	CURSOR Y ADJUST		===============
ADJ_CURSORY
	MOVFF	CURSORY,W_TEMP
	MOVLW	0
	CPFSEQ	W_TEMP
	GOTO	CSRY_NEQ0_ST
	RETURN

CSRY_NEQ0_ST
	MOVFF	CURSORY,LOOP
CSRY_NEQ0
	MOVLW	0X08
	ADDWF	RAM_STPT

	BTFSS	STATUS,C
	GOTO	CSRY_NEQ1

	MOVLW	1
	MOVWF	RAM_STPTH

CSRY_NEQ1
	DECFSZ	LOOP,F
	GOTO	CSRY_NEQ0


	

RETURN
;==========================================================





;=======================	COMMANDS	===================
COMMAND: 
	
;====== TIME ==========

	CALL	TRNSDATA_CPU2GPU

	MOVLW	0X02
	MOVWF	FONT

	MOVFF	SB_REG+05,CHAR		;GT-MINUTE_TENS
	MOVLW	.1
	MOVWF	CURSORX
	MOVLW	.41
	MOVWF	CURSORY
	CALL	DUMPDATA



	MOVFF	SB_REG+06,CHAR		;GT-MINUTE_ONES
	MOVLW	.11
	MOVWF	CURSORX
	CALL	DUMPDATA

	MOVLW	0X0B				;GT-COLON
	MOVWF	CHAR
	MOVLW	.21
	MOVWF	CURSORX
	CALL	DUMPDATA


	MOVFF	SB_REG+07,CHAR		;GT-SECOND_TENS
	MOVLW	.29
	MOVWF	CURSORX
	CALL	DUMPDATA
	

	MOVFF	SB_REG+08,CHAR		;GT-SECOND_ONES
	MOVLW	.41
	MOVWF	CURSORX
	CALL	DUMPDATA

	MOVLW	0X00
	MOVWF	FONT
	MOVFF	SB_REG+09,CHAR		;GT-MSEC
	MOVLW	.53
	MOVWF	CURSORX
	MOVLW	.48
	MOVWF	CURSORY
	CALL	DUMPDATA


	CLRF	W_TEMP
	MOVFF	SB_REG+02,W_TEMP


	MOVLW	0X0A
	CPFSEQ	W_TEMP
	GOTO	SC_GTE_DEC10
	GOTO	SC_LT_DEC10






;==== SHOTCLOCK ====
SC_GTE_DEC10
	CALL	TRNSDATA_CPU2GPU

	MOVLW	0X02
	MOVWF	FONT

	MOVFF	SB_REG+02,CHAR		;SC_TENS
	MOVLW	.21
	MOVWF	CURSORX
	MOVLW	.25
	MOVWF	CURSORY
	CALL	DUMPDATA


	MOVFF	SB_REG+03,CHAR		;SC_ONES
	MOVLW	.33
	MOVWF	CURSORX
	CALL	DUMPDATA
	GOTO	CMD_SCORE

SC_LT_DEC10

	MOVLW	0X02
	MOVWF	FONT

	MOVFF	SB_REG+03,CHAR		;SC_ONES
	MOVLW	.23
	MOVWF	CURSORX
	MOVLW	.25
	MOVWF	CURSORY
	CALL	DUMPDATA


	MOVLW	0X00
	MOVWF	FONT
	MOVFF	SB_REG+04,CHAR		;SC-MSEC
	MOVLW	.35
	MOVWF	CURSORX
	MOVLW	.32
	MOVWF	CURSORY
	CALL	DUMPDATA
	GOTO	CMD_SCORE


;==== HOME SCORE ====
CMD_SCORE:
	CALL	TRNSDATA_CPU2GPU


	MOVLW	0X01
	MOVWF	FONT

	MOVFF	SB_REG+0C,CHAR		;HS_HUNDREDS
	MOVLW	.1
	MOVWF	CURSORX
	MOVLW	0
	MOVWF	CURSORY
	CALL	DUMPDATA



	MOVFF	SB_REG+0D,CHAR		;HS_TENS
	MOVLW	.8
	MOVWF	CURSORX
	CALL	DUMPDATA


	MOVFF	SB_REG+0E,CHAR		;HS_ONES
	MOVLW	.16
	MOVWF	CURSORX
	CALL	DUMPDATA

;==== GUEST SCORE ====
	CALL	TRNSDATA_CPU2GPU

	MOVFF	SB_REG+0F,CHAR		;GS_HUNDREDS
	MOVLW	.41
	MOVWF	CURSORX
	CALL	DUMPDATA


	MOVFF	SB_REG+10,CHAR		;GS_TENS
	MOVLW	.48
	MOVWF	CURSORX
	CALL	DUMPDATA


	MOVFF	SB_REG+11,CHAR		;GS_ONES
	MOVLW	.56
	MOVWF	CURSORX
	CALL	DUMPDATA


;	MOVLW	0X0C				;POSESSION
;	MOVWF	CHAR
;	MOVLW	.28
;	MOVWF	CURSORX
;	CALL	DUMPDATA
;


	BTFSC	SB_REG+0A,1
	GOTO	SHOW_HPOS
	GOTO	SKIP_HPOS


SHOW_HPOS
	MOVLW	0X0C
	MOVWF	CHAR
	MOVLW	.28		;<
	MOVWF	CURSORX
	CALL	DUMPDATA
	GOTO	POS_END
SKIP_HPOS
	BTFSC	SB_REG+0A,2
	GOTO	SHOW_GPOS
	GOTO	SKIP_GPOS	


SHOW_GPOS
	MOVLW	0X0D		;>
	MOVWF	CHAR
	MOVLW	.28
	MOVWF	CURSORX
	CALL	DUMPDATA
SKIP_GPOS
	NOP

POS_END
NOP


;==== HOME text ====

	MOVLW	0X00
	MOVWF	FONT

	MOVLW	0X12
	MOVWF	CHAR
	MOVLW	.1
	MOVWF	CURSORX
	MOVLW	.15
	MOVWF	CURSORY
	CALL	DUMPDATA

	MOVLW	0X1B
	MOVWF	CHAR
	MOVLW	.7
	MOVWF	CURSORX
	CALL	DUMPDATA

	MOVLW	0X14
	MOVWF	CHAR
	MOVLW	.13
	MOVWF	CURSORX
	CALL	DUMPDATA

;	MOVLW	0X23
;	MOVWF	CHAR
;	MOVLW	.19
;	MOVWF	CURSORX
;	CALL	DUMPDATA

;==== GUEST text ====

	MOVLW	0X16
	MOVWF	CHAR
	MOVLW	.41
	MOVWF	CURSORX
	MOVLW	.15
	MOVWF	CURSORY
	CALL	DUMPDATA

	MOVLW	0X22
	MOVWF	CHAR
	MOVLW	.47
	MOVWF	CURSORX
	CALL	DUMPDATA

	MOVLW	0X26
	MOVWF	CHAR
	MOVLW	.53
	MOVWF	CURSORX
	CALL	DUMPDATA

;	MOVLW	0X27
;	MOVWF	CHAR
;	MOVLW	.59
;	MOVWF	CURSORX
;	CALL	DUMPDATA
;

;==== TOP text ====

	MOVLW	0X16
	MOVWF	CHAR
	MOVLW	.4
	MOVWF	CURSORX
	MOVLW	.56
	MOVWF	CURSORY
	CALL	DUMPDATA

	MOVLW	0X10
	MOVWF	CHAR
	MOVLW	.10
	MOVWF	CURSORX
	CALL	DUMPDATA


	MOVLW	0X1C
	MOVWF	CHAR
	MOVLW	.16
	MOVWF	CURSORX
	CALL	DUMPDATA

	MOVLW	0X14
	MOVWF	CHAR
	MOVLW	.22
	MOVWF	CURSORX
	CALL	DUMPDATA

	MOVLW	0X01
	MOVWF	CHAR
	MOVLW	.28
	MOVWF	CURSORX
	CALL	DUMPDATA




	MOVLW	0X1F
	MOVWF	CHAR
	MOVLW	.51
	MOVWF	CURSORX
	CALL	DUMPDATA


	MOVFF	SB_REG+0B,CHAR		;PERIOD
	MOVLW	.57
	MOVWF	CURSORX
	CALL	DUMPDATA


;==== FOUL text ====

	MOVLW	0X15
	MOVWF	CHAR
	MOVLW	.1
	MOVWF	CURSORX
	MOVLW	.28
	MOVWF	CURSORY
	CALL	DUMPDATA


	MOVFF	SB_REG+12,CHAR		;FOUL_HOME
	MOVLW	.9
	MOVWF	CURSORX
	CALL	DUMPDATA


	MOVLW	0X15
	MOVWF	CHAR
	MOVLW	.50
	MOVWF	CURSORX
	CALL	DUMPDATA


	MOVFF	SB_REG+13,CHAR		;FOUL_GUEST
	MOVLW	.57
	MOVWF	CURSORX
	CALL	DUMPDATA

;==== TO text ====

;	MOVLW	0X23
;	MOVWF	CHAR
;	MOVLW	.1
;	MOVWF	CURSORX
;	MOVLW	.24
;	MOVWF	CURSORY
;	CALL	DUMPDATA
;
;	MOVFF	SB_REG+14,CHAR		;TIME-OUT_HOME
;	MOVLW	.9
;	MOVWF	CURSORX
;	CALL	DUMPDATA
;
;
;	MOVLW	0X23
;	MOVWF	CHAR
;	MOVLW	.50
;	MOVWF	CURSORX
;	CALL	DUMPDATA
;
;
;	MOVFF	SB_REG+15,CHAR		;TIME-OUT_GUEST
;	MOVLW	.57
;	MOVWF	CURSORX
;	CALL	DUMPDATA
;


RETURN
;==========================================================




;******************************************************************************
;END OF PROGRAM

TRNSDATA_CPU2GPU:
	BTFSC	HEADERBIT,0
	GOTO	END_TRD

	BCF		INTCON,7
	MOVFF	GPU_REG+00,W_TEMP
	MOVLW	0XAA
	CPFSEQ	W_TEMP
	GOTO	END_TRD

	MOVFF	GPU_REG+01,W_TEMP
	MOVLW	0X55
	CPFSEQ	W_TEMP
	GOTO	END_TRD

	MOVFF	GPU_REG+16,W_TEMP
	MOVLW	0XAB
	CPFSEQ	W_TEMP
	GOTO	END_TRD

	MOVLW	.20
	MOVWF	GPR_LOOP

	MOVLW	0X01
	MOVWF	FSR0H,0

	MOVLW	0XC2
	MOVWF	FSR0L,0  


	MOVLW	0X01
	MOVWF	FSR1H
	
	MOVLW	0X82
	MOVWF	FSR1L


TDCG0
	MOVFF	INDF1,INDF0
	MOVLW	0X0F
	ANDWF	INDF0

	INCF	FSR0L
	INCF	FSR1L
	DECFSZ	GPR_LOOP,F
	GOTO	TDCG0

END_TRD	

BSF		INTCON,7
	
RETURN	


INTERRUPT:
;================== INIT INT ==============================
;INITIALIZE	INTERRUPT
		MOVFF	STATUS,STATUS_TEMP	;SAVE STATUS REGISTER
		MOVFF	WREG,WREG_TEMP		;SAVE WORKING REGISTER
		MOVFF	BSR,BSR_TEMP		;SAVE BSR REGISTER
;==========================================================
	

	BCF		INTCON,7
	BTFSS	PIR1,5
	GOTO	END_INT

	INCF	FSR2L

	BTFSC	HEADERBIT,0
	GOTO	BUS_STARTED

	MOVFF	RCREG,GPREG_TEMP
	BCF		PIR1,5
	
	MOVLW	0XAA	;HEADER
	CPFSEQ	GPREG_TEMP
	GOTO	END_INT

	

	BSF		HEADERBIT,0

	MOVLW	0X01		;TEMP_RAM
	MOVWF	FSR2H
	
	MOVLW	0X80
	MOVWF	FSR2L

	MOVFF	GPREG_TEMP,INDF2
	GOTO	END_INT

BUS_STARTED
	MOVFF	RCREG,GPREG_TEMP
	BCF		PIR1,5

	
	MOVLW	0XAB
	CPFSEQ	GPREG_TEMP
	GOTO	BUS_IN

	MOVLW	0XAB
	MOVFF	WREG,INDF2
	BSF		FOOTERBIT,0
	BCF		HEADERBIT,0


	GOTO	END_INT

BUS_IN
	MOVFF	GPREG_TEMP,INDF2


END_INT
	BSF		INTCON,7


;================== PRERET INT ============================
;PREPARE TO RETURN
	MOVFF	STATUS_TEMP,STATUS	;RESTORE STATUS REGISTER
	MOVFF	WREG_TEMP,WREG		;RESTORE WORKING REGISTER
	MOVFF	BSR_TEMP,BSR		;RESTORE BSR REGISTER
	MOVFF	BSR,BSR_TEMP		;SAVE BSR REGISTER
;==========================================================

RETFIE



ORG 0XF000
;@@@@@@@@@@@@@@@@@@@@@@@@@@@@	REGISTER DATA	@@@@@@@@@@@@@@@@@@@@@
DATAREG0:
	MOVLW	0X02
	MOVWF	FSR0H,0


	MOVFF	REG_STPT,FSR0L
	
	CALL	DATAREG_J1	;P10 MODULE 03

	MOVLW	0X04
	ADDWF	REG_STPT

	MOVFF	REG_STPT,FSR0L
	
	CALL	DATAREG_J1	;P10 MODULE 02


	MOVLW	0X84
	SUBWF	REG_STPT

	MOVFF	REG_STPT,FSR0L
	
	CALL	DATAREG_J0		;P10 MODULE 01

	MOVLW	0X04
	ADDWF	REG_STPT

	MOVFF	REG_STPT,FSR0L
	
	CALL	DATAREG_J0	;P10 MODULE 00

RETURN


DATAREG1:
	MOVLW	0X03
	MOVWF	FSR0H,0


	MOVFF	REG_STPT,FSR0L
	
	CALL	DATAREG_J3	;P10 MODULE 07

	MOVLW	0X04
	ADDWF	REG_STPT

	MOVFF	REG_STPT,FSR0L
	
	CALL	DATAREG_J3	;P10 MODULE 06

	MOVLW	0X84
	SUBWF	REG_STPT

	MOVFF	REG_STPT,FSR0L
	
	CALL	DATAREG_J2		;P10 MODULE 01

	MOVLW	0X04
	ADDWF	REG_STPT

	MOVFF	REG_STPT,FSR0L
	
	CALL	DATAREG_J2	;P10 MODULE 00



RETURN

;****************************************************
DATAREG_J0 ;MODULE0-MODULE1
;****************************************************

	MOVLW	0X04
	MOVWF	COUNT0

DTRJ0_ST1

	MOVLW	0X04
	MOVWF	DREGCOUNT

DTRJ00
	MOVLW	0X08
	MOVWF	BYTECOUNT

	MOVFF	INDF0,DATAHOLD
DTRJ01
	RLCF	DATAHOLD
	
	BTFSS	STATUS,C
	GOTO	DTRJ01_BIT0
	GOTO	DTRJ01_BIT1

DTRJ01_BIT0
	DAT0_0
	GOTO	DTRJ02

DTRJ01_BIT1
	DAT0_1
	GOTO	DTRJ02
NOP
DTRJ02
	CLK0_ON
	CLK0_OFF
	DECFSZ	BYTECOUNT,F
	GOTO	DTRJ01

	MOVLW	0X20
	ADDWF	FSR0L
	
	DECFSZ	DREGCOUNT,F
	GOTO	DTRJ00

	MOVLW	0X80
	ADDWF	FSR0L
	INCF	FSR0L

	DECFSZ	COUNT0,F
	GOTO	DTRJ0_ST1

RETURN
;****************************************************




;****************************************************
DATAREG_J1 ;MODULE2-MODULE3
;****************************************************

	MOVLW	0X04
	MOVWF	COUNT0

DTRJ1_ST1

	MOVLW	0X04
	MOVWF	DREGCOUNT

DTRJ10
	MOVLW	0X08
	MOVWF	BYTECOUNT

	MOVFF	INDF0,DATAHOLD
DTRJ11
	RLCF	DATAHOLD
	
	BTFSS	STATUS,C
	GOTO	DTRJ11_BIT0
	GOTO	DTRJ11_BIT1

DTRJ11_BIT0
	DAT1_0
	GOTO	DTRJ12

DTRJ11_BIT1
	DAT1_1
	GOTO	DTRJ12
NOP
DTRJ12
	CLK1_ON
	CLK1_OFF
	DECFSZ	BYTECOUNT,F
	GOTO	DTRJ11

	MOVLW	0X20
	ADDWF	FSR0L
	
	DECFSZ	DREGCOUNT,F
	GOTO	DTRJ10

	MOVLW	0X80
	ADDWF	FSR0L
	INCF	FSR0L

	DECFSZ	COUNT0,F
	GOTO	DTRJ1_ST1

RETURN
;****************************************************

;****************************************************
DATAREG_J2 ;MODULE4-MODULE5
;****************************************************

	MOVLW	0X04
	MOVWF	COUNT0

DTRJ2_ST1

	MOVLW	0X04
	MOVWF	DREGCOUNT

DTRJ20
	MOVLW	0X08
	MOVWF	BYTECOUNT

	MOVFF	INDF0,DATAHOLD
DTRJ21
	RLCF	DATAHOLD
	
	BTFSS	STATUS,C
	GOTO	DTRJ21_BIT0
	GOTO	DTRJ21_BIT1

DTRJ21_BIT0
	DAT2_0
	GOTO	DTRJ22

DTRJ21_BIT1
	DAT2_1
	GOTO	DTRJ22
NOP
DTRJ22
	CLK2_ON
	CLK2_OFF
	DECFSZ	BYTECOUNT,F
	GOTO	DTRJ21

	MOVLW	0X20
	ADDWF	FSR0L
	
	DECFSZ	DREGCOUNT,F
	GOTO	DTRJ20

	MOVLW	0X80
	ADDWF	FSR0L
	INCF	FSR0L

	DECFSZ	COUNT0,F
	GOTO	DTRJ2_ST1

RETURN
;****************************************************


;****************************************************
DATAREG_J3 ;MODULE6-MODULE7
;****************************************************

	MOVLW	0X04
	MOVWF	COUNT0

DTRJ3_ST1

	MOVLW	0X04
	MOVWF	DREGCOUNT
 
DTRJ30
	MOVLW	0X08
	MOVWF	BYTECOUNT

	MOVFF	INDF0,DATAHOLD
DTRJ31
	RLCF	DATAHOLD
	
	BTFSS	STATUS,C
	GOTO	DTRJ31_BIT0
	GOTO	DTRJ31_BIT1

DTRJ31_BIT0
	DAT3_0
	GOTO	DTRJ32

DTRJ31_BIT1
	DAT3_1
	GOTO	DTRJ32
NOP
DTRJ32
	CLK3_ON
	CLK3_OFF
	DECFSZ	BYTECOUNT,F
	GOTO	DTRJ31

	MOVLW	0X20
	ADDWF	FSR0L
	
	DECFSZ	DREGCOUNT,F
	GOTO	DTRJ30

	MOVLW	0X80
	ADDWF	FSR0L
	INCF	FSR0L

	DECFSZ	COUNT0,F
	GOTO	DTRJ3_ST1

RETURN
;****************************************************


;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@







END
